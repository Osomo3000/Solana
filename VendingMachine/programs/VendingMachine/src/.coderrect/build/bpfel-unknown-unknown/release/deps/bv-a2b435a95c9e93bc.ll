; ModuleID = 'bv.a847dc22-cgu.0'
source_filename = "bv.a847dc22-cgu.0"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "bpfel"

%"std::panic::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"std::ops::RangeInclusive<u64>" = type { i64, i64, i8, [7 x i8] }
%"std::option::Option<u64>::Some" = type { [1 x i64], i64 }
%"std::ops::RangeInclusive<usize>" = type { i64, i64, i8, [7 x i8] }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<(), std::collections::TryReserveError>" = type { i64, [2 x i64] }
%"std::result::Result<(), std::collections::TryReserveError>::Err" = type { [1 x i64], { i64, i64 } }
%"std::alloc::LayoutError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>" = type { [1 x i64], i64, [1 x i64] }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err" = type { %"std::alloc::LayoutError" }
%"std::alloc::AllocError" = type {}
%"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"std::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"std::ptr::metadata::PtrRepr<[bool]>" = type { [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>" = type { [1 x i64], i64, [1 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue" = type { { { i64, i64 }, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue" = type { [1 x i64], i64 }
%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok" = type { { { i64, i64 }, i64 } }
%"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err" = type { %"std::alloc::AllocError" }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"std::result::Result<usize, std::alloc::LayoutError>::Err" = type { [8 x i8], %"std::alloc::LayoutError" }
%"std::result::Result<usize, std::alloc::LayoutError>::Ok" = type { [1 x i64], i64 }
%"std::option::Option<(u64, u64)>" = type { i64, [2 x i64] }
%"std::option::Option<(u64, u64)>::Some" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]" = type {}
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<(), std::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"[closure@alloc::raw_vec::handle_reserve::{closure#0}]" = type {}
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok" = type { [8 x i8], {} }
%"std::result::Result<(), std::collections::TryReserveErrorKind>::Err" = type { [1 x i64], { i64, i64 } }
%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok" = type { [1 x i64], { i8*, i64 } }
%"std::vec::Vec<bool>" = type { { i8*, i64 }, i64 }
%"std::alloc::Global" = type {}
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>" = type { {}*, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some" = type { { i8*, { i64, i64 } } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>" = type { i64, [2 x i64] }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue" = type { [1 x i64], { i8*, i64 } }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break" = type { [1 x i64], { i64, i64 } }
%"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue" = type { [1 x i64], i64 }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break" = type { [8 x i8], %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break" = type { %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err" }
%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue" = type { [8 x i8], {} }
%"std::option::Option<std::convert::Infallible>::None" = type {}
%"std::ops::RangeFull" = type {}
%"std::fmt::DebugStruct" = type { %"std::fmt::Formatter"*, i8, i8, [6 x i8] }
%"slice::SliceSpan" = type { i64, i64, i8, [7 x i8] }
%"slice::BlockAddress" = type { i64, [3 x i64] }
%"std::fmt::DebugTuple" = type { %"std::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"slice::BlockAddress::FullBlockAt" = type { [1 x i64], i64 }
%"slice::BlockAddress::SomeBitsAt" = type { [1 x i64], { i64, i64 }, i64 }
%"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor" = type {}

@alloc1056 = private unnamed_addr constant <{ [74 x i8] }> <{ [74 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs" }>, align 1
@alloc1057 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [74 x i8] }>, <{ [74 x i8] }>* @alloc1056, i32 0, i32 0, i32 0), [16 x i8] c"J\00\00\00\00\00\00\00\BC\02\00\00\0D\00\00\00" }>, align 8
@alloc1058 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs" }>, align 1
@alloc1059 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc1058, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00\10\01\00\009\00\00\00" }>, align 8
@alloc1060 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.0 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (%"std::alloc::LayoutError"*)* @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h21156811bc7b8f57E" to i8*), [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", i8* bitcast (i1 (%"std::alloc::LayoutError"*, %"std::fmt::Formatter"*)* @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !0
@alloc1064 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs" }>, align 1
@alloc1065 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [75 x i8] }>, <{ [75 x i8] }>* @alloc1064, i32 0, i32 0, i32 0), [16 x i8] c"K\00\00\00\00\00\00\00\97\01\00\00\09\00\00\00" }>, align 8
@str.1 = internal constant [25 x i8] c"attempt to divide by zero"
@alloc1066 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"Vec<bool>::set_bit: overflow" }>, align 1
@alloc1069 = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/traits/bits_mut.rs" }>, align 1
@alloc1068 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1069, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\8C\00\00\00\0E\00\00\00" }>, align 8
@alloc1070 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [94 x i8] }>, <{ [94 x i8] }>* @alloc1069, i32 0, i32 0, i32 0), [16 x i8] c"^\00\00\00\00\00\00\00\8D\00\00\00\09\00\00\00" }>, align 8
@alloc1099 = private unnamed_addr constant <{ [99 x i8] }> <{ [99 x i8] c"/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/traits/bit_sliceable.rs" }>, align 1
@alloc1072 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00N\00\00\00\0A\00\00\00" }>, align 8
@alloc1074 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00V\00\00\00\0E\00\00\00" }>, align 8
@alloc1075 = private unnamed_addr constant <{ [41 x i8] }> <{ [41 x i8] c"<&[bool]>::bit_slice: bad inclusive range" }>, align 1
@alloc1077 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00`\00\00\00\0E\00\00\00" }>, align 8
@alloc1079 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00d\00\00\00!\00\00\00" }>, align 8
@str.2 = internal constant [28 x i8] c"attempt to add with overflow"
@alloc1081 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00d\00\00\00\0A\00\00\00" }>, align 8
@alloc1082 = private unnamed_addr constant <{ [45 x i8] }> <{ [45 x i8] c"<&mut [bool]>::bit_slice: bad inclusive range" }>, align 1
@alloc1084 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00n\00\00\00\0E\00\00\00" }>, align 8
@alloc1086 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00o\00\00\00%\00\00\00" }>, align 8
@alloc1088 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00o\00\00\00\0E\00\00\00" }>, align 8
@alloc1090 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00w\00\00\00\0A\00\00\00" }>, align 8
@alloc1092 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\7F\00\00\00\0E\00\00\00" }>, align 8
@alloc1094 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\87\00\00\00\0A\00\00\00" }>, align 8
@alloc1096 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\8F\00\00\00\0E\00\00\00" }>, align 8
@alloc1098 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\98\00\00\00\0A\00\00\00" }>, align 8
@alloc1100 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [99 x i8] }>, <{ [99 x i8] }>* @alloc1099, i32 0, i32 0, i32 0), [16 x i8] c"c\00\00\00\00\00\00\00\A1\00\00\00\0E\00\00\00" }>, align 8
@alloc1101 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Address" }>, align 1
@alloc1102 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"block_index" }>, align 1
@vtable.3 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17hed68b759066bd200E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h217ed1550bf11341E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !9
@alloc1106 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"bit_offset" }>, align 1
@alloc1107 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"SliceSpan" }>, align 1
@alloc1108 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"offset" }>, align 1
@vtable.4 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h95cc251daa138a64E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb21f207d0a048639E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !14
@alloc1112 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"len" }>, align 1
@vtable.5 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i64**)* @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h41c0d4987cacee14E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i64**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h12cb5da553d97228E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !19
@alloc1116 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"aligned_blocks" }>, align 1
@alloc1117 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"SomeBitsAt" }>, align 1
@vtable.6 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void ({ i64, i64 }**)* @"_ZN4core3ptr45drop_in_place$LT$$RF$bv..storage..Address$GT$17hc8e043dc16a0c4a2E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 ({ i64, i64 }**, %"std::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf31e4cd8b1a6da12E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !24
@alloc1121 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"FullBlockAt" }>, align 1
@"_ZN87_$LT$bv..slice..BitSlice$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hfd44b92c2bc758d8E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !34
@"_ZN87_$LT$bv..slice..BitSlice$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17hb9a066980136033dE" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !41
@"_ZN90_$LT$bv..slice..BitSliceMut$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hafac0edbe0934a37E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !43
@"_ZN90_$LT$bv..slice..BitSliceMut$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h819bccf62ca4313fE" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !47
@"_ZN2bv7bit_vec5impls97_$LT$impl$u20$core..ops..index..Index$LT$u64$GT$$u20$for$u20$bv..bit_vec..BitVec$LT$Block$GT$$GT$5index4TRUE17hb25ab061da948d1aE" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !49
@"_ZN2bv7bit_vec5impls97_$LT$impl$u20$core..ops..index..Index$LT$u64$GT$$u20$for$u20$bv..bit_vec..BitVec$LT$Block$GT$$GT$5index5FALSE17hd7e10ee2a1eb3607E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !55
@alloc1122 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"field identifier" }>, align 1
@alloc1123 = private unnamed_addr constant <{ [92 x i8] }> <{ [92 x i8] c"/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/array_n_impls.rs" }>, align 1
@alloc1124 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [92 x i8] }>, <{ [92 x i8] }>* @alloc1123, i32 0, i32 0, i32 0), [16 x i8] c"\\\00\00\00\00\00\00\00J\00\00\00\01\00\00\00" }>, align 8
@"_ZN111_$LT$bv..adapter..bit_slice_adapter..BitSliceAdapter$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h4dc3846573b83346E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !57
@"_ZN111_$LT$bv..adapter..bit_slice_adapter..BitSliceAdapter$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h6b43b7d5ad9d8771E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !63
@"_ZN90_$LT$bv..adapter..logic..BitNot$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h3953da4e3684872bE" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !65
@"_ZN90_$LT$bv..adapter..logic..BitNot$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h73f2cad252e27e89E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !70
@"_ZN94_$LT$bv..adapter..logic..BitAnd$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17ha4b9ee2121b166c6E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !72
@"_ZN94_$LT$bv..adapter..logic..BitAnd$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17hd9ccfb4011794535E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !76
@"_ZN93_$LT$bv..adapter..logic..BitOr$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h2b5eb5648a2459d7E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !78
@"_ZN93_$LT$bv..adapter..logic..BitOr$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h6dcb414185d3a6c8E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !82
@"_ZN94_$LT$bv..adapter..logic..BitXor$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h891a199f880dc3adE" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !84
@"_ZN94_$LT$bv..adapter..logic..BitXor$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h4e6255d15950b732E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !88
@"_ZN98_$LT$bv..adapter..logic..BitZip$LT$T$C$U$C$F$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hd7e6e113f5c7e91cE" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !90
@"_ZN98_$LT$bv..adapter..logic..BitZip$LT$T$C$U$C$F$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17he3f72af7357e681bE" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !94
@"_ZN98_$LT$bv..adapter..bit_fill..BitFill$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h2b93d5db1004a017E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !96
@"_ZN98_$LT$bv..adapter..bit_fill..BitFill$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h74db2d5a57153171E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !101
@"_ZN102_$LT$bv..adapter..bit_concat..BitConcat$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h817650d4ba2fc477E" = constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1, !dbg !103
@"_ZN102_$LT$bv..adapter..bit_concat..BitConcat$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h1dadb25d586a3bc1E" = constant <{ [1 x i8] }> zeroinitializer, align 1, !dbg !108
@__rustc_debug_gdb_scripts_section__ = linkonce_odr unnamed_addr constant [34 x i8] c"\01gdb_load_rust_pretty_printers.py\00", section ".debug_gdb_scripts", align 1

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b361164f9297badE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !143 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !164, metadata !DIExpression()), !dbg !168
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !165, metadata !DIExpression()), !dbg !169
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hcf4713784bb3b0a7E"([0 x i8]* %slice.0, i64 %slice.1), !dbg !170
  br label %bb1, !dbg !170

bb1:                                              ; preds = %start
  store i8* %_4, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !171, metadata !DIExpression()), !dbg !181
  store i64 %self.0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !180, metadata !DIExpression()), !dbg !183
  store i8* %_4, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !184, metadata !DIExpression()), !dbg !191
  store i64 %self.0, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !190, metadata !DIExpression()), !dbg !193
  %5 = getelementptr inbounds i8, i8* %_4, i64 %self.0, !dbg !194
  store i8* %5, i8** %0, align 8, !dbg !194
  %6 = load i8*, i8** %0, align 8, !dbg !194
  br label %bb2, !dbg !170

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0, !dbg !195
; call core::ptr::slice_from_raw_parts
  %7 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h6fe693176a5fd9c3E(i8* %6, i64 %_7), !dbg !196
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !196
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !196
  br label %bb3, !dbg !196

bb3:                                              ; preds = %bb2
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !197
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1, !dbg !197
  ret { [0 x i8]*, i64 } %11, !dbg !197
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha12e7f78a8a69df8E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !198 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i8*, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !206, metadata !DIExpression()), !dbg !208
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !207, metadata !DIExpression()), !dbg !209
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !210, metadata !DIExpression()), !dbg !219
  %7 = bitcast [0 x i8]* %slice.0 to i8*, !dbg !221
  br label %bb1, !dbg !222

bb1:                                              ; preds = %start
  store i8* %7, i8** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i1, metadata !223, metadata !DIExpression()), !dbg !230
  store i64 %self.0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !229, metadata !DIExpression()), !dbg !232
  store i8* %7, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !233, metadata !DIExpression()), !dbg !239
  store i64 %self.0, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !238, metadata !DIExpression()), !dbg !241
  %8 = getelementptr inbounds i8, i8* %7, i64 %self.0, !dbg !242
  store i8* %8, i8** %0, align 8, !dbg !242
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !242
  br label %bb2, !dbg !222

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0, !dbg !243
; call core::ptr::slice_from_raw_parts_mut
  %9 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha2ce96a294f7f29cE(i8* %_3.i.i, i64 %_7), !dbg !244
  %10 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !244
  %11 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !244
  br label %bb3, !dbg !244

bb3:                                              ; preds = %bb2
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !245
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !245
  ret { [0 x i8]*, i64 } %13, !dbg !245
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hedc7be578077d5c3E"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !246 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !268, metadata !DIExpression()), !dbg !270
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !269, metadata !DIExpression()), !dbg !271
  %_3 = icmp ugt i64 %self.0, %self.1, !dbg !272
  br i1 %_3, label %bb1, label %bb2, !dbg !272

bb2:                                              ; preds = %start
  %_8 = icmp ugt i64 %self.1, %slice.1, !dbg !273
  br i1 %_8, label %bb3, label %bb4, !dbg !273

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !274
  unreachable, !dbg !274

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b361164f9297badE"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !275
  %_15.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !275
  %_15.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !275
  br label %bb5, !dbg !275

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64 %self.1, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !276
  unreachable, !dbg !276

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_15.0, 0, !dbg !277
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_15.1, 1, !dbg !277
  ret { [0 x i8]*, i64 } %7, !dbg !277
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h537bc549b739c8bdE"(i64 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !278 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !286, metadata !DIExpression()), !dbg !288
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !287, metadata !DIExpression()), !dbg !289
  %_4 = icmp ugt i64 %self.0, %self.1, !dbg !290
  br i1 %_4, label %bb1, label %bb2, !dbg !290

bb2:                                              ; preds = %start
  %_9 = icmp ugt i64 %self.1, %slice.1, !dbg !291
  br i1 %_9, label %bb3, label %bb4, !dbg !291

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !292
  unreachable, !dbg !292

bb4:                                              ; preds = %bb2
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha12e7f78a8a69df8E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1), !dbg !293
  %_18.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !293
  %_18.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !293
  br label %bb5, !dbg !293

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64 %self.1, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !294
  unreachable, !dbg !294

bb5:                                              ; preds = %bb4
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_18.0, 0, !dbg !295
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_18.1, 1, !dbg !295
  ret { [0 x i8]*, i64 } %7, !dbg !295
}

; <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$14spec_next_back17h081f7f4a861839bdE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !296 {
start:
  %n.dbg.spill = alloca i64, align 8
  %is_iterating.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  %_7 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !326, metadata !DIExpression()), !dbg !331
; call core::ops::range::RangeInclusive<Idx>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h06b0707fb5955191E"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self), !dbg !332
  br label %bb1, !dbg !332

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !332

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !333
  %_6 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !334
; call core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
  %is_iterating = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h2d49b6317963ae6bE"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6), !dbg !333
  %1 = zext i1 %is_iterating to i8, !dbg !333
  store i8 %1, i8* %is_iterating.dbg.spill, align 1, !dbg !333
  call void @llvm.dbg.declare(metadata i8* %is_iterating.dbg.spill, metadata !327, metadata !DIExpression()), !dbg !335
  br label %bb4, !dbg !333

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %0 to i64*, !dbg !336
  store i64 0, i64* %2, align 8, !dbg !336
  br label %bb12, !dbg !337

bb12:                                             ; preds = %bb11, %bb2
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !337
  %4 = load i64, i64* %3, align 8, !dbg !337, !range !338
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !337
  %6 = load i64, i64* %5, align 8, !dbg !337
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !337
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !337
  ret { i64, i64 } %8, !dbg !337

bb4:                                              ; preds = %bb3
  br i1 %is_iterating, label %bb5, label %bb9, !dbg !339

bb9:                                              ; preds = %bb4
  %9 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 2, !dbg !340
  store i8 1, i8* %9, align 8, !dbg !340
  %_15 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !341
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %10 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %_15), !dbg !341
  store i64 %10, i64* %_7, align 8, !dbg !341
  br label %bb10, !dbg !341

bb5:                                              ; preds = %bb4
  %_11 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !342
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_10 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %_11), !dbg !342
  br label %bb6, !dbg !342

bb6:                                              ; preds = %bb5
; call <u64 as core::iter::range::Step>::backward_unchecked
  %n = call i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hdd9ebe1ec89e14dbE"(i64 %_10, i64 1), !dbg !343
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !343
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !329, metadata !DIExpression()), !dbg !344
  br label %bb7, !dbg !343

bb7:                                              ; preds = %bb6
  %_13 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !345
; call core::mem::replace
  %11 = call i64 @_ZN4core3mem7replace17h0dece973e4af45c1E(i64* align 8 dereferenceable(8) %_13, i64 %n), !dbg !346
  store i64 %11, i64* %_7, align 8, !dbg !346
  br label %bb8, !dbg !346

bb8:                                              ; preds = %bb7
  br label %bb11, !dbg !347

bb11:                                             ; preds = %bb10, %bb8
  %12 = bitcast { i64, i64 }* %0 to %"std::option::Option<u64>::Some"*, !dbg !348
  %13 = getelementptr inbounds %"std::option::Option<u64>::Some", %"std::option::Option<u64>::Some"* %12, i32 0, i32 1, !dbg !348
  %14 = load i64, i64* %_7, align 8, !dbg !348
  store i64 %14, i64* %13, align 8, !dbg !348
  %15 = bitcast { i64, i64 }* %0 to i64*, !dbg !348
  store i64 1, i64* %15, align 8, !dbg !348
  br label %bb12, !dbg !337

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !347
}

; <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$9spec_next17hb5be16b40906cf2aE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !349 {
start:
  %n.dbg.spill = alloca i64, align 8
  %is_iterating.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  %_7 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !351, metadata !DIExpression()), !dbg !356
; call core::ops::range::RangeInclusive<Idx>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h06b0707fb5955191E"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self), !dbg !357
  br label %bb1, !dbg !357

bb1:                                              ; preds = %start
  br i1 %_2, label %bb2, label %bb3, !dbg !357

bb3:                                              ; preds = %bb1
  %_5 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !358
  %_6 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !359
; call core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
  %is_iterating = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h2d49b6317963ae6bE"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6), !dbg !358
  %1 = zext i1 %is_iterating to i8, !dbg !358
  store i8 %1, i8* %is_iterating.dbg.spill, align 1, !dbg !358
  call void @llvm.dbg.declare(metadata i8* %is_iterating.dbg.spill, metadata !352, metadata !DIExpression()), !dbg !360
  br label %bb4, !dbg !358

bb2:                                              ; preds = %bb1
  %2 = bitcast { i64, i64 }* %0 to i64*, !dbg !361
  store i64 0, i64* %2, align 8, !dbg !361
  br label %bb12, !dbg !362

bb12:                                             ; preds = %bb11, %bb2
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !362
  %4 = load i64, i64* %3, align 8, !dbg !362, !range !338
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !362
  %6 = load i64, i64* %5, align 8, !dbg !362
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !362
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !362
  ret { i64, i64 } %8, !dbg !362

bb4:                                              ; preds = %bb3
  br i1 %is_iterating, label %bb5, label %bb9, !dbg !363

bb9:                                              ; preds = %bb4
  %9 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 2, !dbg !364
  store i8 1, i8* %9, align 8, !dbg !364
  %_15 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !365
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %10 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %_15), !dbg !365
  store i64 %10, i64* %_7, align 8, !dbg !365
  br label %bb10, !dbg !365

bb5:                                              ; preds = %bb4
  %_11 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !366
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_10 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %_11), !dbg !366
  br label %bb6, !dbg !366

bb6:                                              ; preds = %bb5
; call <u64 as core::iter::range::Step>::forward_unchecked
  %n = call i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h20dcf17a6043c229E"(i64 %_10, i64 1), !dbg !367
  store i64 %n, i64* %n.dbg.spill, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !354, metadata !DIExpression()), !dbg !368
  br label %bb7, !dbg !367

bb7:                                              ; preds = %bb6
  %_13 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !369
; call core::mem::replace
  %11 = call i64 @_ZN4core3mem7replace17h0dece973e4af45c1E(i64* align 8 dereferenceable(8) %_13, i64 %n), !dbg !370
  store i64 %11, i64* %_7, align 8, !dbg !370
  br label %bb8, !dbg !370

bb8:                                              ; preds = %bb7
  br label %bb11, !dbg !371

bb11:                                             ; preds = %bb10, %bb8
  %12 = bitcast { i64, i64 }* %0 to %"std::option::Option<u64>::Some"*, !dbg !372
  %13 = getelementptr inbounds %"std::option::Option<u64>::Some", %"std::option::Option<u64>::Some"* %12, i32 0, i32 1, !dbg !372
  %14 = load i64, i64* %_7, align 8, !dbg !372
  store i64 %14, i64* %13, align 8, !dbg !372
  %15 = bitcast { i64, i64 }* %0 to i64*, !dbg !372
  store i64 1, i64* %15, align 8, !dbg !372
  br label %bb12, !dbg !362

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !371
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15e82f39403ea56dE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !373 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !381, metadata !DIExpression()), !dbg !383
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !382, metadata !DIExpression()), !dbg !384
  %3 = bitcast { i64, i64 }* %_3 to i64*, !dbg !385
  store i64 0, i64* %3, align 8, !dbg !385
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !385
  store i64 %self, i64* %4, align 8, !dbg !385
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !385
  %6 = load i64, i64* %5, align 8, !dbg !385
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !385
  %8 = load i64, i64* %7, align 8, !dbg !385
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %9 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hedc7be578077d5c3E"(i64 %6, i64 %8, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !385
  %10 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !385
  %11 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !385
  br label %bb1, !dbg !385

bb1:                                              ; preds = %start
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !386
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !386
  ret { [0 x i8]*, i64 } %13, !dbg !386
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h79188cab2ad3be78E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !387 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !391, metadata !DIExpression()), !dbg !393
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !392, metadata !DIExpression()), !dbg !394
  %3 = bitcast { i64, i64 }* %_5 to i64*, !dbg !395
  store i64 0, i64* %3, align 8, !dbg !395
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !395
  store i64 %self, i64* %4, align 8, !dbg !395
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !395
  %6 = load i64, i64* %5, align 8, !dbg !395
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !395
  %8 = load i64, i64* %7, align 8, !dbg !395
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %9 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h537bc549b739c8bdE"(i64 %6, i64 %8, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !395
  %_4.0 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !395
  %_4.1 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !395
  br label %bb1, !dbg !395

bb1:                                              ; preds = %start
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !396
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %_4.1, 1, !dbg !396
  ret { [0 x i8]*, i64 } %11, !dbg !396
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3ca9a80ffabdce03E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !397 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !405, metadata !DIExpression()), !dbg !407
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !406, metadata !DIExpression()), !dbg !408
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd2763a918c406633E"([0 x i8]* %slice.0, i64 %slice.1), !dbg !409
  br label %bb1, !dbg !409

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_3 to i64*, !dbg !410
  store i64 %self, i64* %2, align 8, !dbg !410
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !410
  store i64 %_5, i64* %3, align 8, !dbg !410
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !410
  %5 = load i64, i64* %4, align 8, !dbg !410
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !410
  %7 = load i64, i64* %6, align 8, !dbg !410
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b361164f9297badE"(i64 %5, i64 %7, [0 x i8]* %slice.0, i64 %slice.1), !dbg !410
  %9 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !410
  %10 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !410
  br label %bb2, !dbg !410

bb2:                                              ; preds = %bb1
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !411
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !411
  ret { [0 x i8]*, i64 } %12, !dbg !411
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2a3fe2784fd580e4E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !412 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !416, metadata !DIExpression()), !dbg !418
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !417, metadata !DIExpression()), !dbg !419
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %slice.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !420, metadata !DIExpression()) #12, !dbg !425
; call core::ptr::metadata::metadata
  %4 = call i64 @_ZN4core3ptr8metadata8metadata17h4498fccf1851f19bE([0 x i8]* %slice.0, i64 %slice.1) #12, !dbg !427
  br label %bb1, !dbg !428

bb1:                                              ; preds = %start
  %5 = bitcast { i64, i64 }* %_3 to i64*, !dbg !429
  store i64 %self, i64* %5, align 8, !dbg !429
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !429
  store i64 %4, i64* %6, align 8, !dbg !429
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !429
  %8 = load i64, i64* %7, align 8, !dbg !429
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !429
  %10 = load i64, i64* %9, align 8, !dbg !429
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %11 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha12e7f78a8a69df8E"(i64 %8, i64 %10, [0 x i8]* %slice.0, i64 %slice.1), !dbg !429
  %12 = extractvalue { [0 x i8]*, i64 } %11, 0, !dbg !429
  %13 = extractvalue { [0 x i8]*, i64 } %11, 1, !dbg !429
  br label %bb2, !dbg !429

bb2:                                              ; preds = %bb1
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %12, 0, !dbg !430
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !430
  ret { [0 x i8]*, i64 } %15, !dbg !430
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15d56497395e1855E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !431 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !435, metadata !DIExpression()), !dbg !437
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !436, metadata !DIExpression()), !dbg !438
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !439
  br i1 %_3, label %bb1, label %bb2, !dbg !439

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3ca9a80ffabdce03E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !440
  %_10.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !440
  %_10.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !440
  br label %bb3, !dbg !440

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !441
  unreachable, !dbg !441

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0, !dbg !442
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_10.1, 1, !dbg !442
  ret { [0 x i8]*, i64 } %5, !dbg !442
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4a9a22fc093cdcf9E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !443 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !447, metadata !DIExpression()), !dbg !449
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !448, metadata !DIExpression()), !dbg !450
  %_4 = icmp ugt i64 %self, %slice.1, !dbg !451
  br i1 %_4, label %bb1, label %bb2, !dbg !451

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2a3fe2784fd580e4E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !452
  %_13.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !452
  %_13.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !452
  br label %bb3, !dbg !452

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64 %self, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !453
  unreachable, !dbg !453

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !454
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_13.1, 1, !dbg !454
  ret { [0 x i8]*, i64 } %5, !dbg !454
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h5d52c65e07da6234E"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !455 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca %"std::ops::RangeInclusive<usize>", align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<usize>"* %self, metadata !465, metadata !DIExpression()), !dbg !467
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !466, metadata !DIExpression()), !dbg !468
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2e1f77d79faf62ccE"(%"std::ops::RangeInclusive<usize>"* align 8 dereferenceable(24) %self), !dbg !469
  br label %bb1, !dbg !469

bb1:                                              ; preds = %start
  %_4 = load i64, i64* %_5, align 8, !dbg !470
  %_3 = icmp eq i64 %_4, -1, !dbg !470
  br i1 %_3, label %bb2, label %bb3, !dbg !470

bb3:                                              ; preds = %bb1
  %3 = bitcast %"std::ops::RangeInclusive<usize>"* %_8 to i8*, !dbg !471
  %4 = bitcast %"std::ops::RangeInclusive<usize>"* %self to i8*, !dbg !471
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !471
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %5 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4ced7ce810a8492fE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_8), !dbg !471
  %_7.0 = extractvalue { i64, i64 } %5, 0, !dbg !471
  %_7.1 = extractvalue { i64, i64 } %5, 1, !dbg !471
  br label %bb4, !dbg !471

bb2:                                              ; preds = %bb1
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17hbb855d3c3b1462ceE(%"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !472
  unreachable, !dbg !472

bb4:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hedc7be578077d5c3E"(i64 %_7.0, i64 %_7.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !471
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !471
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !471
  br label %bb5, !dbg !471

bb5:                                              ; preds = %bb4
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %7, 0, !dbg !473
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1, !dbg !473
  ret { [0 x i8]*, i64 } %10, !dbg !473
}

; <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0812a8858a050ba1E"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !474 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca %"std::ops::RangeInclusive<usize>", align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<usize>"* %self, metadata !478, metadata !DIExpression()), !dbg !480
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !479, metadata !DIExpression()), !dbg !481
; call core::ops::range::RangeInclusive<Idx>::end
  %_6 = call align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2e1f77d79faf62ccE"(%"std::ops::RangeInclusive<usize>"* align 8 dereferenceable(24) %self), !dbg !482
  br label %bb1, !dbg !482

bb1:                                              ; preds = %start
  %_5 = load i64, i64* %_6, align 8, !dbg !483
  %_4 = icmp eq i64 %_5, -1, !dbg !483
  br i1 %_4, label %bb2, label %bb3, !dbg !483

bb3:                                              ; preds = %bb1
  %3 = bitcast %"std::ops::RangeInclusive<usize>"* %_10 to i8*, !dbg !484
  %4 = bitcast %"std::ops::RangeInclusive<usize>"* %self to i8*, !dbg !484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !484
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %5 = call { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4ced7ce810a8492fE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_10), !dbg !484
  %_9.0 = extractvalue { i64, i64 } %5, 0, !dbg !484
  %_9.1 = extractvalue { i64, i64 } %5, 1, !dbg !484
  br label %bb4, !dbg !484

bb2:                                              ; preds = %bb1
; call core::slice::index::slice_end_index_overflow_fail
  call void @_ZN4core5slice5index29slice_end_index_overflow_fail17hbb855d3c3b1462ceE(%"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !485
  unreachable, !dbg !485

bb4:                                              ; preds = %bb3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %6 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h537bc549b739c8bdE"(i64 %_9.0, i64 %_9.1, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !484
  %_8.0 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !484
  %_8.1 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !484
  br label %bb5, !dbg !484

bb5:                                              ; preds = %bb4
  %7 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_8.0, 0, !dbg !486
  %8 = insertvalue { [0 x i8]*, i64 } %7, i64 %_8.1, 1, !dbg !486
  ret { [0 x i8]*, i64 } %8, !dbg !486
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfd20876303f79b2bE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !487 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca %"std::ops::RangeInclusive<usize>", align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !495, metadata !DIExpression()), !dbg !497
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !496, metadata !DIExpression()), !dbg !498
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h519a8d23a0d0ba3bE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture sret(%"std::ops::RangeInclusive<usize>") dereferenceable(24) %_3, i64 0, i64 %self), !dbg !499
  br label %bb1, !dbg !499

bb1:                                              ; preds = %start
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h5d52c65e07da6234E"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !499
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !499
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !499
  br label %bb2, !dbg !499

bb2:                                              ; preds = %bb1
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !500
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !500
  ret { [0 x i8]*, i64 } %7, !dbg !500
}

; <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd4560bfaae627711E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !501 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_5 = alloca %"std::ops::RangeInclusive<usize>", align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !505, metadata !DIExpression()), !dbg !507
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !506, metadata !DIExpression()), !dbg !508
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h519a8d23a0d0ba3bE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture sret(%"std::ops::RangeInclusive<usize>") dereferenceable(24) %_5, i64 0, i64 %self), !dbg !509
  br label %bb1, !dbg !509

bb1:                                              ; preds = %start
; call <core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0812a8858a050ba1E"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %_5, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !509
  %_4.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !509
  %_4.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !509
  br label %bb2, !dbg !509

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !510
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_4.1, 1, !dbg !510
  ret { [0 x i8]*, i64 } %5, !dbg !510
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h96a99ae44b831ab1E"(i64 %kind.0, i64 %kind.1) unnamed_addr #0 !dbg !511 {
start:
  %kind.dbg.spill = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 0
  store i64 %kind.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %kind.dbg.spill, i32 0, i32 1
  store i64 %kind.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %kind.dbg.spill, metadata !544, metadata !DIExpression()), !dbg !545
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !546
  store i64 %kind.0, i64* %3, align 8, !dbg !546
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !546
  store i64 %kind.1, i64* %4, align 8, !dbg !546
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !547
  %6 = load i64, i64* %5, align 8, !dbg !547
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !547
  %8 = load i64, i64* %7, align 8, !dbg !547
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !547
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !547
  ret { i64, i64 } %10, !dbg !547
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4cea48849ed67474E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !548 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !598, metadata !DIExpression()), !dbg !603
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !604
  %e.0 = load i64, i64* %5, align 8, !dbg !604
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !604
  %e.1 = load i64, i64* %6, align 8, !dbg !604
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !604
  store i64 %e.0, i64* %7, align 8, !dbg !604
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !604
  store i64 %e.1, i64* %8, align 8, !dbg !604
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !599, metadata !DIExpression()), !dbg !605
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h96a99ae44b831ab1E"(i64 %e.0, i64 %e.1), !dbg !606
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !606
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !606
  br label %bb1, !dbg !606

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !607
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !607
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !607
  store i64 %_3.0, i64* %12, align 8, !dbg !607
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !607
  store i64 %_3.1, i64* %13, align 8, !dbg !607
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !607
  store i64 1, i64* %14, align 8, !dbg !607
  ret void, !dbg !608
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6aebebef758041deE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !609 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !636, metadata !DIExpression()), !dbg !640
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !641
  %e.0 = load i64, i64* %5, align 8, !dbg !641
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !641
  %e.1 = load i64, i64* %6, align 8, !dbg !641
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !641
  store i64 %e.0, i64* %7, align 8, !dbg !641
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !641
  store i64 %e.1, i64* %8, align 8, !dbg !641
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !637, metadata !DIExpression()), !dbg !642
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd88d581771ef8982E"(i64 %e.0, i64 %e.1), !dbg !643
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !643
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !643
  br label %bb1, !dbg !643

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !644
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !644
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !644
  store i64 %_3.0, i64* %12, align 8, !dbg !644
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !644
  store i64 %_3.1, i64* %13, align 8, !dbg !644
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !644
  store i64 1, i64* %14, align 8, !dbg !644
  ret void, !dbg !645
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h91e7ed57393c166aE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !646 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !650, metadata !DIExpression()), !dbg !654
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !655
  %e.0 = load i64, i64* %5, align 8, !dbg !655
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !655
  %e.1 = load i64, i64* %6, align 8, !dbg !655
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !655
  store i64 %e.0, i64* %7, align 8, !dbg !655
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !655
  store i64 %e.1, i64* %8, align 8, !dbg !655
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !651, metadata !DIExpression()), !dbg !656
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %9 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h96a99ae44b831ab1E"(i64 %e.0, i64 %e.1), !dbg !657
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !657
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !657
  br label %bb1, !dbg !657

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !658
  %11 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !658
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !658
  store i64 %_3.0, i64* %12, align 8, !dbg !658
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !658
  store i64 %_3.1, i64* %13, align 8, !dbg !658
  %14 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !658
  store i64 1, i64* %14, align 8, !dbg !658
  ret void, !dbg !659
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94bbcf75afee15aeE"() unnamed_addr #0 !dbg !660 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !689, metadata !DIExpression()), !dbg !694
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !690, metadata !DIExpression()), !dbg !695
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha5a5014715615456E"(), !dbg !696
  br label %bb1, !dbg !696

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"*, !dbg !697
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !697
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !697
  store i64 0, i64* %3, align 8, !dbg !697
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !698
  %5 = load i64, i64* %4, align 8, !dbg !698
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !698
  %7 = load i64, i64* %6, align 8, !dbg !698
  %8 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !698
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1, !dbg !698
  ret { i64, i64 } %9, !dbg !698
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbdf056a6c23e6586E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0) unnamed_addr #0 !dbg !699 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !721, metadata !DIExpression()), !dbg !725
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !722, metadata !DIExpression()), !dbg !726
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha5a5014715615456E"(), !dbg !727
  br label %bb1, !dbg !727

bb1:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"*, !dbg !728
  %2 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Err"* %1 to %"std::alloc::LayoutError"*, !dbg !728
  %3 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0, i32 0, i32 1, !dbg !728
  store i64 0, i64* %3, align 8, !dbg !728
  ret void, !dbg !729
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf8465f404833e91E"() unnamed_addr #0 !dbg !730 {
start:
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %0 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !758, metadata !DIExpression()), !dbg !763
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !759, metadata !DIExpression()), !dbg !764
; call <T as core::convert::From<T>>::from
  call void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he4383908b69e61b1E"(), !dbg !765
  br label %bb1, !dbg !765

bb1:                                              ; preds = %start
  %1 = bitcast { i8*, i64 }* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"*, !dbg !766
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>::Err"* %1 to %"std::alloc::AllocError"*, !dbg !766
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !766
  store {}* null, {}** %3, align 8, !dbg !766
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !767
  %5 = load i8*, i8** %4, align 8, !dbg !767
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !767
  %7 = load i64, i64* %6, align 8, !dbg !767
  %8 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !767
  %9 = insertvalue { i8*, i64 } %8, i64 %7, 1, !dbg !767
  ret { i8*, i64 } %9, !dbg !767
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc0c7e49ea4c85f66E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !768 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %residual = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual, metadata !772, metadata !DIExpression()), !dbg !776
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 0, !dbg !777
  %e.0 = load i64, i64* %5, align 8, !dbg !777
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual, i32 0, i32 1, !dbg !777
  %e.1 = load i64, i64* %6, align 8, !dbg !777
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !777
  store i64 %e.0, i64* %7, align 8, !dbg !777
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !777
  store i64 %e.1, i64* %8, align 8, !dbg !777
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !773, metadata !DIExpression()), !dbg !778
; call <T as core::convert::From<T>>::from
  %9 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd88d581771ef8982E"(i64 %e.0, i64 %e.1), !dbg !779
  %_3.0 = extractvalue { i64, i64 } %9, 0, !dbg !779
  %_3.1 = extractvalue { i64, i64 } %9, 1, !dbg !779
  br label %bb1, !dbg !779

bb1:                                              ; preds = %start
  %10 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !780
  %11 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %10, i32 0, i32 1, !dbg !780
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !780
  store i64 %_3.0, i64* %12, align 8, !dbg !780
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !780
  store i64 %_3.1, i64* %13, align 8, !dbg !780
  %14 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !780
  store i64 1, i64* %14, align 8, !dbg !780
  ret void, !dbg !781
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h217ed1550bf11341E"(i64** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !782 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64**, align 8
  store i64** %self, i64*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %self.dbg.spill, metadata !820, metadata !DIExpression()), !dbg !822
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !821, metadata !DIExpression()), !dbg !823
  %_4 = load i64*, i64** %self, align 8, !dbg !824, !nonnull !4
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h2e2b7f2a3b85d3b5E"(i64* align 8 dereferenceable(8) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !825
  br label %bb1, !dbg !825

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !826
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf31e4cd8b1a6da12E"({ i64, i64 }** align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !827 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { i64, i64 }**, align 8
  store { i64, i64 }** %self, { i64, i64 }*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }*** %self.dbg.spill, metadata !832, metadata !DIExpression()), !dbg !836
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !833, metadata !DIExpression()), !dbg !837
  %_4 = load { i64, i64 }*, { i64, i64 }** %self, align 8, !dbg !838, !nonnull !4
; call <bv::storage::Address as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN57_$LT$bv..storage..Address$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cb1f768e2b19ad8E"({ i64, i64 }* align 8 dereferenceable(16) %_4, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !839
  br label %bb1, !dbg !839

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !840
}

; <u64 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h20dcf17a6043c229E"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !841 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !846, metadata !DIExpression()), !dbg !848
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !847, metadata !DIExpression()), !dbg !849
  store i64 %start1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !850, metadata !DIExpression()), !dbg !858
  store i64 %n, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !857, metadata !DIExpression()), !dbg !860
  %1 = add nuw i64 %start1, %n, !dbg !861
  store i64 %1, i64* %0, align 8, !dbg !861
  %2 = load i64, i64* %0, align 8, !dbg !861
  br label %bb1, !dbg !862

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !863
}

; <u64 as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hdd9ebe1ec89e14dbE"(i64 %start1, i64 %n) unnamed_addr #0 !dbg !864 {
start:
  %0 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !866, metadata !DIExpression()), !dbg !868
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !867, metadata !DIExpression()), !dbg !869
  store i64 %start1, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !870, metadata !DIExpression()), !dbg !874
  store i64 %n, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !873, metadata !DIExpression()), !dbg !876
  %1 = sub nuw i64 %start1, %n, !dbg !877
  store i64 %1, i64* %0, align 8, !dbg !877
  %2 = load i64, i64* %0, align 8, !dbg !877
  br label %bb1, !dbg !878

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !879
}

; core::intrinsics::write_bytes
; Function Attrs: inlinehint nounwind
define void @_ZN4core10intrinsics11write_bytes17hd767c011f63a829aE(i8* %dst, i8 %val, i64 %count) unnamed_addr #0 !dbg !880 {
start:
  %count.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i8, align 1
  %dst.dbg.spill = alloca i8*, align 8
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !886, metadata !DIExpression()), !dbg !891
  store i8 %val, i8* %val.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill, metadata !887, metadata !DIExpression()), !dbg !892
  store i64 %count, i64* %count.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill, metadata !888, metadata !DIExpression()), !dbg !893
  %0 = mul i64 1, %count, !dbg !894
  call void @llvm.memset.p0i8.i64(i8* align 1 %dst, i8 %val, i64 %0, i1 false), !dbg !894
  br label %bb1, !dbg !894

bb1:                                              ; preds = %start
  ret void, !dbg !895
}

; core::cmp::Ord::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3Ord3max17hc1df2138957e5fa7E(i64 %self, i64 %other) unnamed_addr #0 !dbg !896 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !902, metadata !DIExpression()), !dbg !906
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !903, metadata !DIExpression()), !dbg !907
; call core::cmp::max_by
  %0 = call i64 @_ZN4core3cmp6max_by17hda2abe60ba3aef3fE(i64 %self, i64 %other), !dbg !908
  br label %bb1, !dbg !908

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !909
}

; core::cmp::max
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3max17h7c4db88abffc71acE(i64 %v1, i64 %v2) unnamed_addr #0 !dbg !910 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, i64* %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !912, metadata !DIExpression()), !dbg !914
  store i64 %v2, i64* %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !913, metadata !DIExpression()), !dbg !915
; call core::cmp::Ord::max
  %0 = call i64 @_ZN4core3cmp3Ord3max17hc1df2138957e5fa7E(i64 %v1, i64 %v2), !dbg !916
  br label %bb1, !dbg !916

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !917
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h08ebe49c89567163E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !918 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !924, metadata !DIExpression()), !dbg !926
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !925, metadata !DIExpression()), !dbg !927
  %_4 = load i64, i64* %self, align 8, !dbg !928
  %_5 = load i64, i64* %other, align 8, !dbg !929
  %_3 = icmp ult i64 %_4, %_5, !dbg !928
  br i1 %_3, label %bb1, label %bb2, !dbg !928

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !930
  %_8 = load i64, i64* %other, align 8, !dbg !931
  %_6 = icmp eq i64 %_7, %_8, !dbg !930
  br i1 %_6, label %bb3, label %bb4, !dbg !930

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !932
  br label %bb6, !dbg !933

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !934, !range !935
  ret i8 %1, !dbg !934

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !936
  br label %bb5, !dbg !937

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !938
  br label %bb5, !dbg !937

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !933
}

; core::cmp::impls::<impl core::cmp::PartialOrd for u64>::le
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2le17hfaf6bd025586b9b1E"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !939 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !944, metadata !DIExpression()), !dbg !946
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !945, metadata !DIExpression()), !dbg !947
  %_3 = load i64, i64* %self, align 8, !dbg !948
  %_4 = load i64, i64* %other, align 8, !dbg !949
  %0 = icmp ule i64 %_3, %_4, !dbg !948
  ret i1 %0, !dbg !950
}

; core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h2d49b6317963ae6bE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !951 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !953, metadata !DIExpression()), !dbg !955
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !954, metadata !DIExpression()), !dbg !956
  %_3 = load i64, i64* %self, align 8, !dbg !957
  %_4 = load i64, i64* %other, align 8, !dbg !958
  %0 = icmp ult i64 %_3, %_4, !dbg !957
  ret i1 %0, !dbg !959
}

; core::cmp::max_by
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp6max_by17hda2abe60ba3aef3fE(i64 %0, i64 %1) unnamed_addr #0 !dbg !960 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !965, metadata !DIExpression()), !dbg !970
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !966, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !967, metadata !DIExpression()), !dbg !972
  store i8 0, i8* %_13, align 1, !dbg !973
  store i8 0, i8* %_12, align 1, !dbg !973
  store i8 1, i8* %_13, align 1, !dbg !973
  store i8 1, i8* %_12, align 1, !dbg !973
  %3 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !973
  store i64* %v1, i64** %3, align 8, !dbg !973
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !973
  store i64* %v2, i64** %4, align 8, !dbg !973
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !973
  %6 = load i64*, i64** %5, align 8, !dbg !973, !nonnull !4
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !973
  %8 = load i64*, i64** %7, align 8, !dbg !973, !nonnull !4
; call core::ops::function::FnOnce::call_once
  %9 = call i8 @_ZN4core3ops8function6FnOnce9call_once17hf87ff210abd12c3aE(i64* align 8 dereferenceable(8) %6, i64* align 8 dereferenceable(8) %8), !dbg !973, !range !935
  store i8 %9, i8* %_4, align 1, !dbg !973
  br label %bb1, !dbg !973

bb1:                                              ; preds = %start
  %10 = load i8, i8* %_4, align 1, !dbg !973, !range !935
  %_11 = sext i8 %10 to i64, !dbg !973
  switch i64 %_11, label %bb3 [
    i64 -1, label %bb4
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !974

bb3:                                              ; preds = %bb1
  unreachable, !dbg !973

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_12, align 1, !dbg !975
  %11 = load i64, i64* %v2, align 8, !dbg !975
  store i64 %11, i64* %2, align 8, !dbg !975
  br label %bb5, !dbg !975

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_13, align 1, !dbg !976
  %12 = load i64, i64* %v1, align 8, !dbg !976
  store i64 %12, i64* %2, align 8, !dbg !976
  br label %bb5, !dbg !976

bb5:                                              ; preds = %bb4, %bb2
  %13 = load i8, i8* %_12, align 1, !dbg !977, !range !978
  %14 = trunc i8 %13 to i1, !dbg !977
  br i1 %14, label %bb8, label %bb6, !dbg !977

bb6:                                              ; preds = %bb8, %bb5
  %15 = load i8, i8* %_13, align 1, !dbg !977, !range !978
  %16 = trunc i8 %15 to i1, !dbg !977
  br i1 %16, label %bb9, label %bb7, !dbg !977

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !977

bb7:                                              ; preds = %bb9, %bb6
  %17 = load i64, i64* %2, align 8, !dbg !979
  ret i64 %17, !dbg !979

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !977
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h2e2b7f2a3b85d3b5E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #0 !dbg !980 {
start:
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !987, metadata !DIExpression()), !dbg !989
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !988, metadata !DIExpression()), !dbg !990
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !991
  br label %bb1, !dbg !991

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !991

bb4:                                              ; preds = %bb1
; call core::fmt::Formatter::debug_upper_hex
  %_7 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !992
  br label %bb5, !dbg !992

bb2:                                              ; preds = %bb1
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %1 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !993
  %2 = zext i1 %1 to i8, !dbg !993
  store i8 %2, i8* %0, align 1, !dbg !993
  br label %bb3, !dbg !993

bb3:                                              ; preds = %bb2
  br label %bb11, !dbg !994

bb11:                                             ; preds = %bb10, %bb3
  %3 = load i8, i8* %0, align 1, !dbg !995, !range !978
  %4 = trunc i8 %3 to i1, !dbg !995
  ret i1 %4, !dbg !995

bb5:                                              ; preds = %bb4
  br i1 %_7, label %bb6, label %bb8, !dbg !992

bb8:                                              ; preds = %bb5
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %5 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !996
  %6 = zext i1 %5 to i8, !dbg !996
  store i8 %6, i8* %0, align 1, !dbg !996
  br label %bb9, !dbg !996

bb6:                                              ; preds = %bb5
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %7 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !997
  %8 = zext i1 %7 to i8, !dbg !997
  store i8 %8, i8* %0, align 1, !dbg !997
  br label %bb7, !dbg !997

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !998

bb10:                                             ; preds = %bb9, %bb7
  br label %bb11, !dbg !994

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !998
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3mem7replace17h0dece973e4af45c1E(i64* align 8 dereferenceable(8) %dest, i64 %src) unnamed_addr #0 !dbg !999 {
start:
  %result.dbg.spill = alloca i64, align 8
  %src.dbg.spill = alloca i64, align 8
  %dest.dbg.spill = alloca i64*, align 8
  store i64* %dest, i64** %dest.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dest.dbg.spill, metadata !1006, metadata !DIExpression()), !dbg !1010
  store i64 %src, i64* %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %src.dbg.spill, metadata !1007, metadata !DIExpression()), !dbg !1011
; call core::ptr::read
  %result = call i64 @_ZN4core3ptr4read17h7d614dc675fd536eE(i64* %dest), !dbg !1012
  store i64 %result, i64* %result.dbg.spill, align 8, !dbg !1012
  call void @llvm.dbg.declare(metadata i64* %result.dbg.spill, metadata !1008, metadata !DIExpression()), !dbg !1013
  br label %bb1, !dbg !1012

bb1:                                              ; preds = %start
; call core::ptr::write
  call void @_ZN4core3ptr5write17h9af9d6b0f6d7fb2fE(i64* %dest, i64 %src), !dbg !1014
  br label %bb2, !dbg !1014

bb2:                                              ; preds = %bb1
  ret i64 %result, !dbg !1015
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h4471947358403de9E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1016 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1021, metadata !DIExpression()), !dbg !1026
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1022, metadata !DIExpression()), !dbg !1027
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1028, metadata !DIExpression()) #12, !dbg !1041
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1037, metadata !DIExpression()) #12, !dbg !1043
  %4 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1044
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1044
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1044
  %7 = zext i1 %6 to i8, !dbg !1044
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1044
  store i64 %5, i64* %8, align 8, !dbg !1044
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1044
  store i8 %7, i8* %9, align 8, !dbg !1044
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1044
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1044
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1044
  %12 = load i8, i8* %11, align 8, !dbg !1044, !range !978
  %_5.1.i = trunc i8 %12 to i1, !dbg !1044
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1045
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1038, metadata !DIExpression()) #12, !dbg !1046
  %13 = zext i1 %_5.1.i to i8, !dbg !1047
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1047
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1040, metadata !DIExpression()) #12, !dbg !1048
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1049
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1049
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1049
  %16 = zext i1 %_5.1.i to i8, !dbg !1049
  store i8 %16, i8* %15, align 8, !dbg !1049
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1050
  %18 = load i64, i64* %17, align 8, !dbg !1050
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1050
  %20 = load i8, i8* %19, align 8, !dbg !1050, !range !978
  %21 = trunc i8 %20 to i1, !dbg !1050
  %22 = zext i1 %21 to i8, !dbg !1050
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1050
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1050
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1051
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1051
  %_5.1 = trunc i8 %25 to i1, !dbg !1051
  br label %bb1, !dbg !1051

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1052
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1023, metadata !DIExpression()), !dbg !1053
  %26 = zext i1 %_5.1 to i8, !dbg !1054
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1054
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1025, metadata !DIExpression()), !dbg !1055
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1056
  %28 = zext i1 %27 to i8, !dbg !1056
  store i8 %28, i8* %2, align 1, !dbg !1056
  %29 = load i8, i8* %2, align 1, !dbg !1056, !range !978
  %_8 = trunc i8 %29 to i1, !dbg !1056
  br label %bb2, !dbg !1056

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1056

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1057
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1057
  store i64 %_5.0, i64* %31, align 8, !dbg !1057
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1057
  store i64 1, i64* %32, align 8, !dbg !1057
  br label %bb5, !dbg !1058

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1059
  store i64 0, i64* %33, align 8, !dbg !1059
  br label %bb5, !dbg !1058

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1060
  %35 = load i64, i64* %34, align 8, !dbg !1060, !range !338
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1060
  %37 = load i64, i64* %36, align 8, !dbg !1060
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1060
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1060
  ret { i64, i64 } %39, !dbg !1060
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h576c517f6fef7a16E"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !1061 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1063, metadata !DIExpression()), !dbg !1068
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !1064, metadata !DIExpression()), !dbg !1069
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1070, metadata !DIExpression()) #12, !dbg !1077
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1073, metadata !DIExpression()) #12, !dbg !1079
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs) #12, !dbg !1080
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !1080
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !1080
  %7 = zext i1 %6 to i8, !dbg !1080
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !1080
  store i64 %5, i64* %8, align 8, !dbg !1080
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1080
  store i8 %7, i8* %9, align 8, !dbg !1080
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !1080
  %_5.0.i = load i64, i64* %10, align 8, !dbg !1080
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !1080
  %12 = load i8, i8* %11, align 8, !dbg !1080, !range !978
  %_5.1.i = trunc i8 %12 to i1, !dbg !1080
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !1081
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !1074, metadata !DIExpression()) #12, !dbg !1082
  %13 = zext i1 %_5.1.i to i8, !dbg !1083
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !1083
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !1076, metadata !DIExpression()) #12, !dbg !1084
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !1085
  store i64 %_5.0.i, i64* %14, align 8, !dbg !1085
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1085
  %16 = zext i1 %_5.1.i to i8, !dbg !1085
  store i8 %16, i8* %15, align 8, !dbg !1085
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !1086
  %18 = load i64, i64* %17, align 8, !dbg !1086
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !1086
  %20 = load i8, i8* %19, align 8, !dbg !1086, !range !978
  %21 = trunc i8 %20 to i1, !dbg !1086
  %22 = zext i1 %21 to i8, !dbg !1086
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !1086
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !1086
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !1087
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !1087
  %_5.1 = trunc i8 %25 to i1, !dbg !1087
  br label %bb1, !dbg !1087

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !1088
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !1065, metadata !DIExpression()), !dbg !1089
  %26 = zext i1 %_5.1 to i8, !dbg !1090
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !1090
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !1067, metadata !DIExpression()), !dbg !1091
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !1092
  %28 = zext i1 %27 to i8, !dbg !1092
  store i8 %28, i8* %2, align 1, !dbg !1092
  %29 = load i8, i8* %2, align 1, !dbg !1092, !range !978
  %_8 = trunc i8 %29 to i1, !dbg !1092
  br label %bb2, !dbg !1092

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !1092

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"std::option::Option<usize>::Some"*, !dbg !1093
  %31 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %30, i32 0, i32 1, !dbg !1093
  store i64 %_5.0, i64* %31, align 8, !dbg !1093
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !1093
  store i64 1, i64* %32, align 8, !dbg !1093
  br label %bb5, !dbg !1094

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !1095
  store i64 0, i64* %33, align 8, !dbg !1095
  br label %bb5, !dbg !1094

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !1096
  %35 = load i64, i64* %34, align 8, !dbg !1096, !range !338
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !1096
  %37 = load i64, i64* %36, align 8, !dbg !1096
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !1096
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !1096
  ret { i64, i64 } %39, !dbg !1096
}

; core::num::nonzero::NonZeroUsize::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha4176e00949ef5bbE(i64 %n) unnamed_addr #0 !dbg !1097 {
start:
  %n.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1102, metadata !DIExpression()), !dbg !1103
  store i64 %n, i64* %0, align 8, !dbg !1104
  %1 = load i64, i64* %0, align 8, !dbg !1105, !range !1106
  ret i64 %1, !dbg !1105
}

; core::num::nonzero::NonZeroUsize::get
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h218dc7b2f08e5dc5E(i64 %self) unnamed_addr #0 !dbg !1107 {
start:
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !1111, metadata !DIExpression()), !dbg !1112
  ret i64 %self, !dbg !1113
}

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(8) i64* @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2e1f77d79faf62ccE"(%"std::ops::RangeInclusive<usize>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !1114 {
start:
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<usize>"*, align 8
  store %"std::ops::RangeInclusive<usize>"* %self, %"std::ops::RangeInclusive<usize>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<usize>"** %self.dbg.spill, metadata !1120, metadata !DIExpression()), !dbg !1121
  %0 = getelementptr inbounds %"std::ops::RangeInclusive<usize>", %"std::ops::RangeInclusive<usize>"* %self, i32 0, i32 1, !dbg !1122
  ret i64* %0, !dbg !1123
}

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint nounwind
define void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h519a8d23a0d0ba3bE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture sret(%"std::ops::RangeInclusive<usize>") dereferenceable(24) %0, i64 %start1, i64 %end) unnamed_addr #0 !dbg !1124 {
start:
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  store i64 %start1, i64* %start.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !1128, metadata !DIExpression()), !dbg !1130
  store i64 %end, i64* %end.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !1129, metadata !DIExpression()), !dbg !1131
  %1 = bitcast %"std::ops::RangeInclusive<usize>"* %0 to i64*, !dbg !1132
  store i64 %start1, i64* %1, align 8, !dbg !1132
  %2 = getelementptr inbounds %"std::ops::RangeInclusive<usize>", %"std::ops::RangeInclusive<usize>"* %0, i32 0, i32 1, !dbg !1132
  store i64 %end, i64* %2, align 8, !dbg !1132
  %3 = getelementptr inbounds %"std::ops::RangeInclusive<usize>", %"std::ops::RangeInclusive<usize>"* %0, i32 0, i32 2, !dbg !1132
  store i8 0, i8* %3, align 8, !dbg !1132
  ret void, !dbg !1133
}

; core::ops::range::RangeInclusive<Idx>::is_empty
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h06b0707fb5955191E"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !1134 {
start:
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  %0 = alloca i8, align 1
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !1139, metadata !DIExpression()), !dbg !1140
  %1 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 2, !dbg !1141
  %2 = load i8, i8* %1, align 8, !dbg !1141, !range !978
  %_2 = trunc i8 %2 to i1, !dbg !1141
  br i1 %_2, label %bb1, label %bb2, !dbg !1141

bb2:                                              ; preds = %start
  %_5 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !1142
  %_6 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !1143
; call core::cmp::impls::<impl core::cmp::PartialOrd for u64>::le
  %_4 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2le17hfaf6bd025586b9b1E"(i64* align 8 dereferenceable(8) %_5, i64* align 8 dereferenceable(8) %_6), !dbg !1144
  br label %bb4, !dbg !1144

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !1141
  br label %bb3, !dbg !1141

bb3:                                              ; preds = %bb4, %bb1
  %3 = load i8, i8* %0, align 1, !dbg !1145, !range !978
  %4 = trunc i8 %3 to i1, !dbg !1145
  ret i1 %4, !dbg !1145

bb4:                                              ; preds = %bb2
  %_3 = xor i1 %_4, true, !dbg !1146
  %5 = zext i1 %_3 to i8, !dbg !1141
  store i8 %5, i8* %0, align 1, !dbg !1141
  br label %bb3, !dbg !1141
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4ced7ce810a8492fE"(%"std::ops::RangeInclusive<usize>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !1147 {
start:
  %exclusive_end.dbg.spill = alloca i64, align 8
  %start1 = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<usize>"* %self, metadata !1151, metadata !DIExpression()), !dbg !1156
  call void @llvm.dbg.declare(metadata i64* %start1, metadata !1154, metadata !DIExpression()), !dbg !1157
  %1 = getelementptr inbounds %"std::ops::RangeInclusive<usize>", %"std::ops::RangeInclusive<usize>"* %self, i32 0, i32 1, !dbg !1158
  %_3 = load i64, i64* %1, align 8, !dbg !1158
  %exclusive_end = add i64 %_3, 1, !dbg !1158
  store i64 %exclusive_end, i64* %exclusive_end.dbg.spill, align 8, !dbg !1158
  call void @llvm.dbg.declare(metadata i64* %exclusive_end.dbg.spill, metadata !1152, metadata !DIExpression()), !dbg !1159
  %2 = getelementptr inbounds %"std::ops::RangeInclusive<usize>", %"std::ops::RangeInclusive<usize>"* %self, i32 0, i32 2, !dbg !1160
  %3 = load i8, i8* %2, align 8, !dbg !1160, !range !978
  %_5 = trunc i8 %3 to i1, !dbg !1160
  br i1 %_5, label %bb1, label %bb2, !dbg !1160

bb2:                                              ; preds = %start
  %4 = bitcast %"std::ops::RangeInclusive<usize>"* %self to i64*, !dbg !1161
  %5 = load i64, i64* %4, align 8, !dbg !1161
  store i64 %5, i64* %start1, align 8, !dbg !1161
  br label %bb3, !dbg !1162

bb1:                                              ; preds = %start
  store i64 %exclusive_end, i64* %start1, align 8, !dbg !1163
  br label %bb3, !dbg !1162

bb3:                                              ; preds = %bb2, %bb1
  %_6 = load i64, i64* %start1, align 8, !dbg !1164
  %6 = bitcast { i64, i64 }* %0 to i64*, !dbg !1164
  store i64 %_6, i64* %6, align 8, !dbg !1164
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1164
  store i64 %exclusive_end, i64* %7, align 8, !dbg !1164
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1165
  %9 = load i64, i64* %8, align 8, !dbg !1165
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1165
  %11 = load i64, i64* %10, align 8, !dbg !1165
  %12 = insertvalue { i64, i64 } undef, i64 %9, 0, !dbg !1165
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1, !dbg !1165
  ret { i64, i64 } %13, !dbg !1165
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17hf87ff210abd12c3aE(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 !dbg !1166 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !1173, metadata !DIExpression()), !dbg !1182
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_2, metadata !1174, metadata !DIExpression()), !dbg !1182
  %4 = bitcast { i64*, i64* }* %_2 to i64**, !dbg !1182
  %5 = load i64*, i64** %4, align 8, !dbg !1182, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1, !dbg !1182
  %7 = load i64*, i64** %6, align 8, !dbg !1182, !nonnull !4
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h08ebe49c89567163E"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !dbg !1182, !range !935
  br label %bb1, !dbg !1182

bb1:                                              ; preds = %start
  ret i8 %8, !dbg !1182
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17h6fe693176a5fd9c3E(i8* %data, i64 %len) unnamed_addr #0 !dbg !1183 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1188, metadata !DIExpression()), !dbg !1190
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1189, metadata !DIExpression()), !dbg !1191
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf881a6b183a2fce5E"(i8* %data), !dbg !1192
  br label %bb1, !dbg !1192

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h50961207f671948aE({}* %_3, i64 %len), !dbg !1193
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !1193
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !1193
  br label %bb2, !dbg !1193

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0, !dbg !1194
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1, !dbg !1194
  ret { [0 x i8]*, i64 } %4, !dbg !1194
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha2ce96a294f7f29cE(i8* %data, i64 %len) unnamed_addr #0 !dbg !1195 {
start:
  %self.dbg.spill.i = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1199, metadata !DIExpression()), !dbg !1201
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1200, metadata !DIExpression()), !dbg !1202
  store i8* %data, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !1203, metadata !DIExpression()), !dbg !1211
  %0 = bitcast i8* %data to {}*, !dbg !1213
  br label %bb1, !dbg !1214

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts_mut
  %1 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h4cee035ebcf546b2E({}* %0, i64 %len), !dbg !1215
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !1215
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !1215
  br label %bb2, !dbg !1215

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !1216
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !1216
  ret { [0 x i8]*, i64 } %5, !dbg !1216
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h95cc251daa138a64E"(i8** %_1) unnamed_addr #0 !dbg !1217 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !1222, metadata !DIExpression()), !dbg !1225
  ret void, !dbg !1225
}

; core::ptr::drop_in_place<&u64>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h41c0d4987cacee14E"(i64** %_1) unnamed_addr #0 !dbg !1226 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1231, metadata !DIExpression()), !dbg !1234
  ret void, !dbg !1234
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17hed68b759066bd200E"(i64** %_1) unnamed_addr #0 !dbg !1235 {
start:
  %_1.dbg.spill = alloca i64**, align 8
  store i64** %_1, i64*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64*** %_1.dbg.spill, metadata !1240, metadata !DIExpression()), !dbg !1243
  ret void, !dbg !1243
}

; core::ptr::drop_in_place<&bv::storage::Address>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr45drop_in_place$LT$$RF$bv..storage..Address$GT$17hc8e043dc16a0c4a2E"({ i64, i64 }** %_1) unnamed_addr #0 !dbg !1244 {
start:
  %_1.dbg.spill = alloca { i64, i64 }**, align 8
  store { i64, i64 }** %_1, { i64, i64 }*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }*** %_1.dbg.spill, metadata !1249, metadata !DIExpression()), !dbg !1252
  ret void, !dbg !1252
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define zeroext i1 @_ZN4core3ptr4read17h416c49d38f6da509E(i8* %src) unnamed_addr #0 !dbg !1253 {
start:
  %self.dbg.spill.i1 = alloca i8*, align 8
  %slot.dbg.spill.i.i = alloca i8, align 1
  %self.dbg.spill.i = alloca i8, align 1
  %0 = alloca i8, align 1
  %src.dbg.spill = alloca i8*, align 8
  %tmp = alloca i8, align 1
  store i8* %src, i8** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %src.dbg.spill, metadata !1257, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !1258, metadata !DIExpression()), !dbg !1270
  %1 = bitcast i8* %0 to {}*, !dbg !1271
  %2 = load i8, i8* %0, align 1, !dbg !1277
  store i8 %2, i8* %tmp, align 1, !dbg !1278
  br label %bb1, !dbg !1278

bb1:                                              ; preds = %start
  store i8* %tmp, i8** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i1, metadata !1279, metadata !DIExpression()), !dbg !1285
  br label %bb2, !dbg !1287

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %tmp, i8* align 1 %src, i64 1, i1 false), !dbg !1288
  %_6 = load i8, i8* %tmp, align 1, !dbg !1289
  store i8 %_6, i8* %self.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill.i, metadata !1290, metadata !DIExpression()), !dbg !1295
  %_3.i = trunc i8 %_6 to i1, !dbg !1297
  %3 = zext i1 %_3.i to i8
  store i8 %3, i8* %slot.dbg.spill.i.i, align 1
  call void @llvm.dbg.declare(metadata i8* %slot.dbg.spill.i.i, metadata !1298, metadata !DIExpression()), !dbg !1304
  br label %bb3, !dbg !1289

bb3:                                              ; preds = %bb2
  ret i1 %_3.i, !dbg !1306
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr4read17h7d614dc675fd536eE(i64* %src) unnamed_addr #0 !dbg !1307 {
start:
  %self.dbg.spill.i1 = alloca i64*, align 8
  %slot.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %src.dbg.spill = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i64* %src, i64** %src.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %src.dbg.spill, metadata !1312, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !1313, metadata !DIExpression()), !dbg !1323
  %1 = bitcast i64* %0 to {}*, !dbg !1324
  %2 = load i64, i64* %0, align 8, !dbg !1329
  store i64 %2, i64* %tmp, align 8, !dbg !1330
  br label %bb1, !dbg !1330

bb1:                                              ; preds = %start
  store i64* %tmp, i64** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill.i1, metadata !1331, metadata !DIExpression()), !dbg !1338
  br label %bb2, !dbg !1340

bb2:                                              ; preds = %bb1
  %3 = bitcast i64* %tmp to i8*, !dbg !1341
  %4 = bitcast i64* %src to i8*, !dbg !1341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false), !dbg !1341
  %_6 = load i64, i64* %tmp, align 8, !dbg !1342
  store i64 %_6, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1343, metadata !DIExpression()), !dbg !1348
  store i64 %_6, i64* %slot.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %slot.dbg.spill.i.i, metadata !1350, metadata !DIExpression()), !dbg !1355
  br label %bb3, !dbg !1342

bb3:                                              ; preds = %bb2
  ret i64 %_6, !dbg !1357
}

; core::ptr::drop_in_place<core::alloc::layout::LayoutError>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h21156811bc7b8f57E"(%"std::alloc::LayoutError"* %_1) unnamed_addr #0 !dbg !1358 {
start:
  %_1.dbg.spill = alloca %"std::alloc::LayoutError"*, align 8
  store %"std::alloc::LayoutError"* %_1, %"std::alloc::LayoutError"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"** %_1.dbg.spill, metadata !1363, metadata !DIExpression()), !dbg !1366
  ret void, !dbg !1366
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define void @_ZN4core3ptr5write17h9af9d6b0f6d7fb2fE(i64* %dst, i64 %0) unnamed_addr #0 !dbg !1367 {
start:
  %dst.dbg.spill = alloca i64*, align 8
  %src = alloca i64, align 8
  store i64 %0, i64* %src, align 8
  store i64* %dst, i64** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.dbg.spill, metadata !1371, metadata !DIExpression()), !dbg !1373
  call void @llvm.dbg.declare(metadata i64* %src, metadata !1372, metadata !DIExpression()), !dbg !1374
  %1 = bitcast i64* %dst to i8*, !dbg !1375
  %2 = bitcast i64* %src to i8*, !dbg !1375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !dbg !1375
  ret void, !dbg !1376
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define void @_ZN4core3ptr5write17he658c7156b290fdaE(i8* %dst, i1 zeroext %0) unnamed_addr #0 !dbg !1377 {
start:
  %dst.dbg.spill = alloca i8*, align 8
  %src = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, i8* %src, align 1
  store i8* %dst, i8** %dst.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.dbg.spill, metadata !1381, metadata !DIExpression()), !dbg !1383
  call void @llvm.dbg.declare(metadata i8* %src, metadata !1382, metadata !DIExpression()), !dbg !1384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %dst, i8* align 1 %src, i64 1, i1 false), !dbg !1385
  ret void, !dbg !1386
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc9d96932e2f47dd5E"(i8* %ptr) unnamed_addr #0 !dbg !1387 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1399, metadata !DIExpression()), !dbg !1400
  store i8* %ptr, i8** %0, align 8, !dbg !1401
  %1 = load i8*, i8** %0, align 8, !dbg !1402, !nonnull !4
  ret i8* %1, !dbg !1402
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h17a3df7a1de66d23E"(i8* nonnull %self) unnamed_addr #0 !dbg !1403 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1412, metadata !DIExpression()), !dbg !1415
; call core::ptr::unique::Unique<T>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9be4a18b8b1d4657E"(i8* nonnull %self), !dbg !1416
  br label %bb1, !dbg !1416

bb1:                                              ; preds = %start
; call core::ptr::unique::Unique<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h257ef6d383e44eabE"(i8* %_3), !dbg !1417
  br label %bb2, !dbg !1417

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !1418
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9be4a18b8b1d4657E"(i8* nonnull %self) unnamed_addr #0 !dbg !1419 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1423, metadata !DIExpression()), !dbg !1424
  ret i8* %self, !dbg !1425
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3e95ebc468912652E"(i8* %self) unnamed_addr #0 !dbg !1426 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1430, metadata !DIExpression()), !dbg !1431
  br label %bb1, !dbg !1432

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h76e99f5e5b776b90E"(i8* %self, i8* null), !dbg !1433
  br label %bb2, !dbg !1433

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !1434
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h50961207f671948aE({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1435 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[bool]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1442, metadata !DIExpression()), !dbg !1447
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1443, metadata !DIExpression()), !dbg !1448
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1449
  store {}* %data_address, {}** %0, align 8, !dbg !1449
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1449
  store i64 %metadata, i64* %1, align 8, !dbg !1449
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_3 to { i8*, i64 }*, !dbg !1450
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1450
  %4 = load i8*, i8** %3, align 8, !dbg !1450
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1450
  %6 = load i64, i64* %5, align 8, !dbg !1450
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1450
  store i8* %4, i8** %7, align 8, !dbg !1450
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1450
  store i64 %6, i64* %8, align 8, !dbg !1450
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !1450
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1450
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1450
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1450
  %13 = load i64, i64* %12, align 8, !dbg !1450
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !1451
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !1451
  ret { [0 x i8]*, i64 } %15, !dbg !1451
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h4cee035ebcf546b2E({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !1452 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"std::ptr::metadata::PtrRepr<[bool]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !1456, metadata !DIExpression()), !dbg !1458
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !1457, metadata !DIExpression()), !dbg !1459
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !1460
  store {}* %data_address, {}** %0, align 8, !dbg !1460
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1460
  store i64 %metadata, i64* %1, align 8, !dbg !1460
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_3 to { i8*, i64 }*, !dbg !1461
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !1461
  %4 = load i8*, i8** %3, align 8, !dbg !1461
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !1461
  %6 = load i64, i64* %5, align 8, !dbg !1461
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !1461
  store i8* %4, i8** %7, align 8, !dbg !1461
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !1461
  store i64 %6, i64* %8, align 8, !dbg !1461
  %9 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !1461
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !1461
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !1461
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !1461
  %13 = load i64, i64* %12, align 8, !dbg !1461
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !1462
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !1462
  ret { [0 x i8]*, i64 } %15, !dbg !1462
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h4498fccf1851f19bE([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1463 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"std::ptr::metadata::PtrRepr<[bool]>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1467, metadata !DIExpression()), !dbg !1468
  %2 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_2 to { [0 x i8]*, i64 }*, !dbg !1469
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !1469
  store [0 x i8]* %ptr.0, [0 x i8]** %3, align 8, !dbg !1469
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !1469
  store i64 %ptr.1, i64* %4, align 8, !dbg !1469
  %5 = bitcast %"std::ptr::metadata::PtrRepr<[bool]>"* %_2 to { i8*, i64 }*, !dbg !1469
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !1469
  %7 = load i64, i64* %6, align 8, !dbg !1469
  ret i64 %7, !dbg !1470
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0f39f9776b3ff334E"([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !1471 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca { i8*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !1480, metadata !DIExpression()), !dbg !1481
  %3 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !1482
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 0, !dbg !1482
  store [0 x i8]* %ptr.0, [0 x i8]** %4, align 8, !dbg !1482
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %3, i32 0, i32 1, !dbg !1482
  store i64 %ptr.1, i64* %5, align 8, !dbg !1482
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !1483
  %7 = load i8*, i8** %6, align 8, !dbg !1483, !nonnull !4
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !1483
  %9 = load i64, i64* %8, align 8, !dbg !1483
  %10 = insertvalue { i8*, i64 } undef, i8* %7, 0, !dbg !1483
  %11 = insertvalue { i8*, i64 } %10, i64 %9, 1, !dbg !1483
  ret { i8*, i64 } %11, !dbg !1483
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h96a8ed661b0abefeE"(i8* %ptr) unnamed_addr #0 !dbg !1484 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1491, metadata !DIExpression()), !dbg !1492
  store i8* %ptr, i8** %0, align 8, !dbg !1493
  %1 = load i8*, i8** %0, align 8, !dbg !1494, !nonnull !4
  ret i8* %1, !dbg !1494
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hfad105d03ddaea6bE"(i8* %ptr) unnamed_addr #0 !dbg !1495 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !1514, metadata !DIExpression()), !dbg !1515
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_3 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h9f910b821c2973acE"(i8* %ptr), !dbg !1516
  br label %bb1, !dbg !1516

bb1:                                              ; preds = %start
  %_2 = xor i1 %_3, true, !dbg !1517
  br i1 %_2, label %bb2, label %bb4, !dbg !1517

bb4:                                              ; preds = %bb1
  %1 = bitcast i8** %0 to {}**, !dbg !1518
  store {}* null, {}** %1, align 8, !dbg !1518
  br label %bb5, !dbg !1519

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9c300abf5c57abaE"(i8* %ptr), !dbg !1520
  br label %bb3, !dbg !1520

bb3:                                              ; preds = %bb2
  store i8* %_5, i8** %0, align 8, !dbg !1521
  br label %bb5, !dbg !1519

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8*, i8** %0, align 8, !dbg !1522
  ret i8* %2, !dbg !1522
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe97c25a0260464bE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1523 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1527, metadata !DIExpression()), !dbg !1530
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf74a1babd57275a2E"(i8* nonnull %self.0, i64 %self.1), !dbg !1531
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1531
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1531
  br label %bb1, !dbg !1531

bb1:                                              ; preds = %start
  %_2 = bitcast [0 x i8]* %_3.0 to i8*, !dbg !1531
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %3 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h96a8ed661b0abefeE"(i8* %_2), !dbg !1532
  br label %bb2, !dbg !1532

bb2:                                              ; preds = %bb1
  ret i8* %3, !dbg !1533
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4fc818808fb581c5E"(i8* nonnull %self) unnamed_addr #0 !dbg !1534 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1538, metadata !DIExpression()), !dbg !1539
  ret i8* %self, !dbg !1540
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf74a1babd57275a2E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1541 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1545, metadata !DIExpression()), !dbg !1546
  %_2.0 = bitcast i8* %self.0 to [0 x i8]*, !dbg !1547
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_2.0, 0, !dbg !1548
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !1548
  ret { [0 x i8]*, i64 } %3, !dbg !1548
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hd67808fc29ab1531E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1549 {
start:
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1553, metadata !DIExpression()), !dbg !1554
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h16585ef7014d7bb8E"(i8* nonnull %self.0, i64 %self.1), !dbg !1555
  br label %bb1, !dbg !1555

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull %_2), !dbg !1555
  br label %bb2, !dbg !1555

bb2:                                              ; preds = %bb1
  ret i8* %2, !dbg !1556
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h16585ef7014d7bb8E"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1557 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1561, metadata !DIExpression()), !dbg !1562
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf74a1babd57275a2E"(i8* nonnull %self.0, i64 %self.1), !dbg !1563
  %_3.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1563
  %_3.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1563
  br label %bb1, !dbg !1563

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_3.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_3.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1564, metadata !DIExpression()), !dbg !1569
  %5 = bitcast [0 x i8]* %_3.0 to i8*, !dbg !1571
  br label %bb2, !dbg !1563

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %6 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9c300abf5c57abaE"(i8* %5), !dbg !1572
  br label %bb3, !dbg !1572

bb3:                                              ; preds = %bb2
  ret i8* %6, !dbg !1573
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h24c6436c21aecb1cE"(i8* nonnull %data, i64 %len) unnamed_addr #0 !dbg !1574 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !1578, metadata !DIExpression()), !dbg !1580
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1579, metadata !DIExpression()), !dbg !1581
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull %data), !dbg !1582
  br label %bb1, !dbg !1582

bb1:                                              ; preds = %start
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hdb2d850eec0185abE(i8* %_4, i64 %len), !dbg !1583
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !1583
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !1583
  br label %bb2, !dbg !1583

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { i8*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0f39f9776b3ff334E"([0 x i8]* %_3.0, i64 %_3.1), !dbg !1584
  %2 = extractvalue { i8*, i64 } %1, 0, !dbg !1584
  %3 = extractvalue { i8*, i64 } %1, 1, !dbg !1584
  br label %bb3, !dbg !1584

bb3:                                              ; preds = %bb2
  %4 = insertvalue { i8*, i64 } undef, i8* %2, 0, !dbg !1585
  %5 = insertvalue { i8*, i64 } %4, i64 %3, 1, !dbg !1585
  ret { i8*, i64 } %5, !dbg !1585
}

; core::ptr::non_null::NonNull<[T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17hff0f99f4b5231b1aE"(i8* nonnull %self.0, i64 %self.1) unnamed_addr #0 !dbg !1586 {
start:
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self.dbg.spill, metadata !1590, metadata !DIExpression()), !dbg !1591
; call core::ptr::non_null::NonNull<T>::as_ptr
  %2 = call { [0 x i8]*, i64 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf74a1babd57275a2E"(i8* nonnull %self.0, i64 %self.1), !dbg !1592
  %_2.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1592
  %_2.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1592
  br label %bb1, !dbg !1592

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %_2.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %_2.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1593, metadata !DIExpression()) #12, !dbg !1598
; call core::ptr::metadata::metadata
  %5 = call i64 @_ZN4core3ptr8metadata8metadata17h0cbd16dff4c04a46E([0 x i8]* %_2.0, i64 %_2.1) #12, !dbg !1600
  br label %bb2, !dbg !1592

bb2:                                              ; preds = %bb1
  ret i64 %5, !dbg !1601
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nounwind
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf881a6b183a2fce5E"(i8* %self) unnamed_addr #0 !dbg !1602 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1606, metadata !DIExpression()), !dbg !1607
  %0 = bitcast i8* %self to {}*, !dbg !1608
  ret {}* %0, !dbg !1609
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd2763a918c406633E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !1610 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1613, metadata !DIExpression()), !dbg !1614
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h4498fccf1851f19bE([0 x i8]* %self.0, i64 %self.1), !dbg !1615
  br label %bb1, !dbg !1615

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !1616
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hcf4713784bb3b0a7E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !1617 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1621, metadata !DIExpression()), !dbg !1622
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !1623
  ret i8* %2, !dbg !1624
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17hb3521c5c51ca708dE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !1625 {
start:
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !1628, metadata !DIExpression()), !dbg !1631
; call <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next
  %0 = call { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$9spec_next17hb5be16b40906cf2aE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self), !dbg !1632
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1632
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1632
  br label %bb1, !dbg !1632

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1633
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1633
  ret { i64, i64 } %4, !dbg !1633
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive<A>>::next_back
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17h97b383ec5907ee62E"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !1634 {
start:
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !1637, metadata !DIExpression()), !dbg !1638
; call <core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$14spec_next_back17h081f7f4a861839bdE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self), !dbg !1639
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !1639
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !1639
  br label %bb1, !dbg !1639

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !1640
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !1640
  ret { i64, i64 } %4, !dbg !1640
}

; core::alloc::layout::size_align
; Function Attrs: nounwind
define { i64, i64 } @_ZN4core5alloc6layout10size_align17h36a0ec7b55639ee2E() unnamed_addr #1 !dbg !1641 {
start:
  %0 = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  br label %bb1, !dbg !1649

bb1:                                              ; preds = %start
  store i64 1, i64* %0, align 8, !dbg !1650
  %2 = load i64, i64* %0, align 8, !dbg !1650
  br label %bb2, !dbg !1655

bb2:                                              ; preds = %bb1
  %3 = bitcast { i64, i64 }* %1 to i64*, !dbg !1656
  store i64 1, i64* %3, align 8, !dbg !1656
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1656
  store i64 %2, i64* %4, align 8, !dbg !1656
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1657
  %6 = load i64, i64* %5, align 8, !dbg !1657
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1657
  %8 = load i64, i64* %7, align 8, !dbg !1657
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !1657
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !1657
  ret { i64, i64 } %10, !dbg !1657
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h048abb8da252f2baE({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1658 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %pad.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1663, metadata !DIExpression()), !dbg !1668
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1669
  br label %bb1, !dbg !1669

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::padding_needed_for
  %pad = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hb64fca9ab1a52759E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_4), !dbg !1670
  store i64 %pad, i64* %pad.dbg.spill, align 8, !dbg !1670
  call void @llvm.dbg.declare(metadata i64* %pad.dbg.spill, metadata !1664, metadata !DIExpression()), !dbg !1671
  br label %bb2, !dbg !1670

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::size
  %_7 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1672
  br label %bb3, !dbg !1672

bb3:                                              ; preds = %bb2
  %new_size = add i64 %_7, %pad, !dbg !1672
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !1672
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !1666, metadata !DIExpression()), !dbg !1673
; call core::alloc::layout::Layout::align
  %_12 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1674
  br label %bb4, !dbg !1674

bb4:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h305eb198d945f425E(i64 %new_size, i64 %_12), !dbg !1675
  %_10.0 = extractvalue { i64, i64 } %0, 0, !dbg !1675
  %_10.1 = extractvalue { i64, i64 } %0, 1, !dbg !1675
  br label %bb5, !dbg !1675

bb5:                                              ; preds = %bb4
; call core::result::Result<T,E>::unwrap
  %1 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he128bd3c53d5c5e4E"(i64 %_10.0, i64 %_10.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1059 to %"std::panic::Location"*)), !dbg !1675
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !1675
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !1675
  br label %bb6, !dbg !1675

bb6:                                              ; preds = %bb5
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !1676
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !1676
  ret { i64, i64 } %5, !dbg !1676
}

; core::alloc::layout::Layout::from_size_align
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout15from_size_align17h305eb198d945f425E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1677 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %1 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1681, metadata !DIExpression()), !dbg !1683
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1682, metadata !DIExpression()), !dbg !1684
  store i64 %align, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1685, metadata !DIExpression()) #12, !dbg !1690
  store i64 %align, i64* %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i.i, metadata !1692, metadata !DIExpression()) #12, !dbg !1697
  %2 = call i64 @llvm.ctpop.i64(i64 %align) #12, !dbg !1699
  store i64 %2, i64* %0, align 8, !dbg !1699
  %_2.i.i = load i64, i64* %0, align 8, !dbg !1699
  %3 = trunc i64 %_2.i.i to i32, !dbg !1699
  %4 = icmp eq i32 %3, 1, !dbg !1700
  br label %bb1, !dbg !1701

bb1:                                              ; preds = %start
  %_3 = xor i1 %4, true, !dbg !1702
  br i1 %_3, label %bb2, label %bb3, !dbg !1702

bb3:                                              ; preds = %bb1
  %_9 = sub i64 %align, 1, !dbg !1703
  %_8 = sub i64 -1, %_9, !dbg !1704
  %_6 = icmp ugt i64 %size, %_8, !dbg !1705
  br i1 %_6, label %bb4, label %bb5, !dbg !1705

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1706
  store i64 0, i64* %5, align 8, !dbg !1706
  br label %bb7, !dbg !1707

bb7:                                              ; preds = %bb6, %bb4, %bb2
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1710
  %7 = load i64, i64* %6, align 8, !dbg !1710
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1710
  %9 = load i64, i64* %8, align 8, !dbg !1710
  %10 = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !1710
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1, !dbg !1710
  ret { i64, i64 } %11, !dbg !1710

bb5:                                              ; preds = %bb3
; call core::alloc::layout::Layout::from_size_align_unchecked
  %12 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E(i64 %size, i64 %align), !dbg !1711
  %_11.0 = extractvalue { i64, i64 } %12, 0, !dbg !1711
  %_11.1 = extractvalue { i64, i64 } %12, 1, !dbg !1711
  br label %bb6, !dbg !1711

bb4:                                              ; preds = %bb3
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1712
  store i64 0, i64* %13, align 8, !dbg !1712
  br label %bb7, !dbg !1707

bb6:                                              ; preds = %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !1713
  store i64 %_11.0, i64* %14, align 8, !dbg !1713
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !1713
  store i64 %_11.1, i64* %15, align 8, !dbg !1713
  br label %bb7, !dbg !1710
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hb64fca9ab1a52759E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %align) unnamed_addr #0 !dbg !1714 {
start:
  %rhs.dbg.spill.i5 = alloca i64, align 8
  %self.dbg.spill.i6 = alloca i64, align 8
  %rhs.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i64, align 8
  %rhs.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i2 = alloca i64, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %len_rounded_up.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1718, metadata !DIExpression()), !dbg !1724
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1719, metadata !DIExpression()), !dbg !1725
; call core::alloc::layout::Layout::size
  %len = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1726
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !1726
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !1720, metadata !DIExpression()), !dbg !1727
  br label %bb1, !dbg !1726

bb1:                                              ; preds = %start
  store i64 %len, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1728, metadata !DIExpression()), !dbg !1732
  store i64 %align, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1731, metadata !DIExpression()), !dbg !1734
  %0 = add i64 %len, %align, !dbg !1735
  br label %bb2, !dbg !1736

bb2:                                              ; preds = %bb1
  store i64 %0, i64* %self.dbg.spill.i6, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i6, metadata !1737, metadata !DIExpression()), !dbg !1741
  store i64 1, i64* %rhs.dbg.spill.i5, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i5, metadata !1740, metadata !DIExpression()), !dbg !1743
  %1 = sub i64 %0, 1, !dbg !1744
  br label %bb3, !dbg !1736

bb3:                                              ; preds = %bb2
  store i64 %align, i64* %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i4, metadata !1737, metadata !DIExpression()), !dbg !1745
  store i64 1, i64* %rhs.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i3, metadata !1740, metadata !DIExpression()), !dbg !1747
  %2 = sub i64 %align, 1, !dbg !1748
  br label %bb4, !dbg !1749

bb4:                                              ; preds = %bb3
  %_10 = xor i64 %2, -1, !dbg !1750
  %len_rounded_up = and i64 %1, %_10, !dbg !1736
  store i64 %len_rounded_up, i64* %len_rounded_up.dbg.spill, align 8, !dbg !1736
  call void @llvm.dbg.declare(metadata i64* %len_rounded_up.dbg.spill, metadata !1722, metadata !DIExpression()), !dbg !1751
  store i64 %len_rounded_up, i64* %self.dbg.spill.i2, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i2, metadata !1737, metadata !DIExpression()), !dbg !1752
  store i64 %len, i64* %rhs.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i1, metadata !1740, metadata !DIExpression()), !dbg !1754
  %3 = sub i64 %len_rounded_up, %len, !dbg !1755
  br label %bb5, !dbg !1756

bb5:                                              ; preds = %bb4
  ret i64 %3, !dbg !1757
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E(i64 %size, i64 %align) unnamed_addr #0 !dbg !1758 {
start:
  %align.dbg.spill = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %size, i64* %size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1762, metadata !DIExpression()), !dbg !1764
  store i64 %align, i64* %align.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1763, metadata !DIExpression()), !dbg !1765
; call core::num::nonzero::NonZeroUsize::new_unchecked
  %_4 = call i64 @_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha4176e00949ef5bbE(i64 %align), !dbg !1766, !range !1106
  br label %bb1, !dbg !1766

bb1:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !1767
  store i64 %size, i64* %1, align 8, !dbg !1767
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1767
  store i64 %_4, i64* %2, align 8, !dbg !1767
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1768
  %4 = load i64, i64* %3, align 8, !dbg !1768
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1768
  %6 = load i64, i64* %5, align 8, !dbg !1768, !range !1106
  %7 = insertvalue { i64, i64 } undef, i64 %4, 0, !dbg !1768
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !1768
  ret { i64, i64 } %8, !dbg !1768
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h16dd7fccd6be8139E() unnamed_addr #0 !dbg !1769 {
start:
  %align.dbg.spill = alloca i64, align 8, !dbg !1776
  %size.dbg.spill = alloca i64, align 8, !dbg !1776
; call core::alloc::layout::size_align
  %0 = call { i64, i64 } @_ZN4core5alloc6layout10size_align17h36a0ec7b55639ee2E(), !dbg !1776
  %_3.0 = extractvalue { i64, i64 } %0, 0, !dbg !1776
  %_3.1 = extractvalue { i64, i64 } %0, 1, !dbg !1776
  br label %bb1, !dbg !1776

bb1:                                              ; preds = %start
  store i64 %_3.0, i64* %size.dbg.spill, align 8, !dbg !1777
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !1773, metadata !DIExpression()), !dbg !1778
  store i64 %_3.1, i64* %align.dbg.spill, align 8, !dbg !1779
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !1775, metadata !DIExpression()), !dbg !1780
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E(i64 %_3.0, i64 %_3.1), !dbg !1781
  %2 = extractvalue { i64, i64 } %1, 0, !dbg !1781
  %3 = extractvalue { i64, i64 } %1, 1, !dbg !1781
  br label %bb2, !dbg !1781

bb2:                                              ; preds = %bb1
  %4 = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !1782
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !1782
  ret { i64, i64 } %5, !dbg !1782
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1783 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1787, metadata !DIExpression()), !dbg !1788
  %0 = bitcast { i64, i64 }* %self to i64*, !dbg !1789
  %1 = load i64, i64* %0, align 8, !dbg !1789
  ret i64 %1, !dbg !1790
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nounwind
define internal i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1791 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1793, metadata !DIExpression()), !dbg !1794
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !1795
  %_2 = load i64, i64* %0, align 8, !dbg !1795, !range !1106
; call core::num::nonzero::NonZeroUsize::get
  %1 = call i64 @_ZN4core3num7nonzero12NonZeroUsize3get17h218dc7b2f08e5dc5E(i64 %_2), !dbg !1795
  br label %bb1, !dbg !1795

bb1:                                              ; preds = %start
  ret i64 %1, !dbg !1796
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nounwind
define { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h953855d8a6ad270aE(i64 %n) unnamed_addr #0 !dbg !1797 {
start:
  %offset.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %val = alloca { { i64, i64 }, i64 }, align 8
  %_8 = alloca { i64, i64 }, align 8
  %_6 = alloca %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", align 8
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1801, metadata !DIExpression()), !dbg !1817
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !1802, metadata !DIExpression()), !dbg !1818
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !1805, metadata !DIExpression()), !dbg !1819
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %val, metadata !1807, metadata !DIExpression()), !dbg !1820
; call core::alloc::layout::Layout::new
  %1 = call { i64, i64 } @_ZN4core5alloc6layout6Layout3new17h16dd7fccd6be8139E(), !dbg !1821
  store { i64, i64 } %1, { i64, i64 }* %_8, align 8, !dbg !1821
  br label %bb1, !dbg !1821

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h46917801f219027dE(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %_6, { i64, i64 }* align 8 dereferenceable(16) %_8, i64 %n), !dbg !1821
  br label %bb2, !dbg !1821

bb2:                                              ; preds = %bb1
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hee81a03be240d715E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %_5, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %_6), !dbg !1821
  br label %bb3, !dbg !1821

bb3:                                              ; preds = %bb2
  %2 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5, i32 0, i32 1, !dbg !1821
  %3 = load i64, i64* %2, align 8, !dbg !1821
  %4 = icmp eq i64 %3, 0, !dbg !1821
  %_10 = select i1 %4, i64 1, i64 0, !dbg !1821
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !1821

bb5:                                              ; preds = %bb3
  unreachable, !dbg !1821

bb4:                                              ; preds = %bb3
  %5 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !1821
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %5 to { { i64, i64 }, i64 }*, !dbg !1821
  %7 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !1821
  %8 = bitcast { { i64, i64 }, i64 }* %6 to i8*, !dbg !1821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !1821
  %9 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !1820
  %10 = bitcast { { i64, i64 }, i64 }* %val to i8*, !dbg !1820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false), !dbg !1820
  %11 = bitcast { { i64, i64 }, i64 }* %_4 to { i64, i64 }*, !dbg !1822
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 0, !dbg !1822
  %13 = load i64, i64* %12, align 8, !dbg !1822
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i32 0, i32 1, !dbg !1822
  %15 = load i64, i64* %14, align 8, !dbg !1822, !range !1106
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !1822
  store i64 %13, i64* %16, align 8, !dbg !1822
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !1822
  store i64 %15, i64* %17, align 8, !dbg !1822
  %18 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_4, i32 0, i32 1, !dbg !1823
  %offset = load i64, i64* %18, align 8, !dbg !1823
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !1823
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !1804, metadata !DIExpression()), !dbg !1824
; call core::alloc::layout::Layout::pad_to_align
  %19 = call { i64, i64 } @_ZN4core5alloc6layout6Layout12pad_to_align17h048abb8da252f2baE({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !1825
  %_17.0 = extractvalue { i64, i64 } %19, 0, !dbg !1825
  %_17.1 = extractvalue { i64, i64 } %19, 1, !dbg !1825
  br label %bb8, !dbg !1825

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call { i64, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94bbcf75afee15aeE"(), !dbg !1826
  store { i64, i64 } %20, { i64, i64 }* %0, align 8, !dbg !1826
  br label %bb7, !dbg !1826

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !1827

bb9:                                              ; preds = %bb8, %bb7
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1827
  %22 = load i64, i64* %21, align 8, !dbg !1827
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1827
  %24 = load i64, i64* %23, align 8, !dbg !1827
  %25 = insertvalue { i64, i64 } undef, i64 %22, 0, !dbg !1827
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1, !dbg !1827
  ret { i64, i64 } %26, !dbg !1827

bb8:                                              ; preds = %bb4
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !1828
  store i64 %_17.0, i64* %27, align 8, !dbg !1828
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !1828
  store i64 %_17.1, i64* %28, align 8, !dbg !1828
  br label %bb9, !dbg !1827
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout6repeat17h46917801f219027dE(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0, { i64, i64 }* align 8 dereferenceable(16) %self, i64 %n) unnamed_addr #0 !dbg !1829 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %padded_size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_21 = alloca { { i64, i64 }, i64 }, align 8
  %_11 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1833, metadata !DIExpression()), !dbg !1843
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1834, metadata !DIExpression()), !dbg !1844
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %residual.dbg.spill, metadata !1839, metadata !DIExpression()), !dbg !1845
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1846
  br label %bb1, !dbg !1846

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_8 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1847
  br label %bb2, !dbg !1847

bb2:                                              ; preds = %bb1
; call core::alloc::layout::Layout::padding_needed_for
  %_6 = call i64 @_ZN4core5alloc6layout6Layout18padding_needed_for17hb64fca9ab1a52759E({ i64, i64 }* align 8 dereferenceable(16) %self, i64 %_8), !dbg !1848
  br label %bb3, !dbg !1848

bb3:                                              ; preds = %bb2
  %padded_size = add i64 %_4, %_6, !dbg !1846
  store i64 %padded_size, i64* %padded_size.dbg.spill, align 8, !dbg !1846
  call void @llvm.dbg.declare(metadata i64* %padded_size.dbg.spill, metadata !1835, metadata !DIExpression()), !dbg !1849
; call core::num::<impl usize>::checked_mul
  %1 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h576c517f6fef7a16E"(i64 %padded_size, i64 %n), !dbg !1850
  %_13.0 = extractvalue { i64, i64 } %1, 0, !dbg !1850
  %_13.1 = extractvalue { i64, i64 } %1, 1, !dbg !1850
  br label %bb4, !dbg !1850

bb4:                                              ; preds = %bb3
; call core::option::Option<T>::ok_or
  %2 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17ha70ed32c01f32cf6E"(i64 %_13.0, i64 %_13.1), !dbg !1850
  %_12.0 = extractvalue { i64, i64 } %2, 0, !dbg !1850
  %_12.1 = extractvalue { i64, i64 } %2, 1, !dbg !1850
  br label %bb5, !dbg !1850

bb5:                                              ; preds = %bb4
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7099560655e1fba1E"(i64 %_12.0, i64 %_12.1), !dbg !1850
  store { i64, i64 } %3, { i64, i64 }* %_11, align 8, !dbg !1850
  br label %bb6, !dbg !1850

bb6:                                              ; preds = %bb5
  %4 = bitcast { i64, i64 }* %_11 to i64*, !dbg !1850
  %_17 = load i64, i64* %4, align 8, !dbg !1850, !range !338
  switch i64 %_17, label %bb8 [
    i64 0, label %bb7
    i64 1, label %bb9
  ], !dbg !1850

bb8:                                              ; preds = %bb6
  unreachable, !dbg !1850

bb7:                                              ; preds = %bb6
  %5 = bitcast { i64, i64 }* %_11 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !1850
  %6 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %5, i32 0, i32 1, !dbg !1850
  %val = load i64, i64* %6, align 8, !dbg !1850
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1850
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1841, metadata !DIExpression()), !dbg !1851
  store i64 %val, i64* %alloc_size.dbg.spill, align 8, !dbg !1851
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !1837, metadata !DIExpression()), !dbg !1852
; call core::alloc::layout::Layout::align
  %_24 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1853
  br label %bb11, !dbg !1853

bb9:                                              ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbdf056a6c23e6586E"(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture sret(%"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>") dereferenceable(24) %0), !dbg !1854
  br label %bb10, !dbg !1854

bb10:                                             ; preds = %bb9
  br label %bb13, !dbg !1855

bb13:                                             ; preds = %bb12, %bb10
  ret void, !dbg !1855

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::from_size_align_unchecked
  %7 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E(i64 %val, i64 %_24), !dbg !1856
  %_22.0 = extractvalue { i64, i64 } %7, 0, !dbg !1856
  %_22.1 = extractvalue { i64, i64 } %7, 1, !dbg !1856
  br label %bb12, !dbg !1856

bb12:                                             ; preds = %bb11
  %8 = bitcast { { i64, i64 }, i64 }* %_21 to { i64, i64 }*, !dbg !1857
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !1857
  store i64 %_22.0, i64* %9, align 8, !dbg !1857
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !1857
  store i64 %_22.1, i64* %10, align 8, !dbg !1857
  %11 = getelementptr inbounds { { i64, i64 }, i64 }, { { i64, i64 }, i64 }* %_21, i32 0, i32 1, !dbg !1857
  store i64 %padded_size, i64* %11, align 8, !dbg !1857
  %12 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %0 to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !1858
  %13 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %12 to { { i64, i64 }, i64 }*, !dbg !1858
  %14 = bitcast { { i64, i64 }, i64 }* %13 to i8*, !dbg !1858
  %15 = bitcast { { i64, i64 }, i64 }* %_21 to i8*, !dbg !1858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !1858
  br label %bb13, !dbg !1855
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nounwind
define internal nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h29e0235ef9518cb9E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !1859 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !1863, metadata !DIExpression()), !dbg !1864
; call core::alloc::layout::Layout::align
  %_3 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !1865
  br label %bb1, !dbg !1865

bb1:                                              ; preds = %start
  %_2 = inttoptr i64 %_3 to i8*, !dbg !1865
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %0 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9c300abf5c57abaE"(i8* %_2), !dbg !1866
  br label %bb2, !dbg !1866

bb2:                                              ; preds = %bb1
  ret i8* %0, !dbg !1867
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17h1c211bccca8199c2E({}* nonnull align 1 %_1) unnamed_addr #0 !dbg !1868 {
start:
  %_1.dbg.spill = alloca {}*, align 8
  store {}* %_1, {}** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_1.dbg.spill, metadata !1876, metadata !DIExpression()), !dbg !1879
  ret void, !dbg !1879
}

; core::clone::impls::<impl core::clone::Clone for u64>::clone
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %self) unnamed_addr #0 !dbg !1880 {
start:
  %self.dbg.spill = alloca i64*, align 8
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !1886, metadata !DIExpression()), !dbg !1887
  %0 = load i64, i64* %self, align 8, !dbg !1888
  ret i64 %0, !dbg !1889
}

; core::clone::impls::<impl core::clone::Clone for bool>::clone
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$bool$GT$5clone17hc458405b49b21808E"(i8* align 1 dereferenceable(1) %self) unnamed_addr #0 !dbg !1890 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !1896, metadata !DIExpression()), !dbg !1897
  %0 = load i8, i8* %self, align 1, !dbg !1898, !range !978
  %1 = trunc i8 %0 to i1, !dbg !1898
  ret i1 %1, !dbg !1899
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0be4a3e6e3d05d55E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1900 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1905, metadata !DIExpression()), !dbg !1909
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1906, metadata !DIExpression()), !dbg !1910
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15d56497395e1855E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1911
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1911
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1911
  br label %bb1, !dbg !1911

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1912
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1912
  ret { [0 x i8]*, i64 } %7, !dbg !1912
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3978143dcc3cca1eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1913 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1917, metadata !DIExpression()), !dbg !1921
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1918, metadata !DIExpression()), !dbg !1922
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15e82f39403ea56dE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1923
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1923
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1923
  br label %bb1, !dbg !1923

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1924
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1924
  ret { [0 x i8]*, i64 } %7, !dbg !1924
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h83389c579e9f629cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1925 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1929, metadata !DIExpression()), !dbg !1933
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1930, metadata !DIExpression()), !dbg !1934
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfd20876303f79b2bE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1935
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1935
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1935
  br label %bb1, !dbg !1935

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !1936
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !1936
  ret { [0 x i8]*, i64 } %7, !dbg !1936
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8db56019e1474894E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1937 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1941, metadata !DIExpression()), !dbg !1945
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill, metadata !1942, metadata !DIExpression()), !dbg !1946
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hedc7be578077d5c3E"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1947
  %6 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1947
  %7 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1947
  br label %bb1, !dbg !1947

bb1:                                              ; preds = %start
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0, !dbg !1948
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %7, 1, !dbg !1948
  ret { [0 x i8]*, i64 } %9, !dbg !1948
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1751a9fd87524dabE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1949 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1954, metadata !DIExpression()), !dbg !1956
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1955, metadata !DIExpression()), !dbg !1957
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4a9a22fc093cdcf9E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1958
  %_4.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1958
  %_4.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1958
  br label %bb1, !dbg !1958

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !1959
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_4.1, 1, !dbg !1959
  ret { [0 x i8]*, i64 } %5, !dbg !1959
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5d5b828fe4bb4643E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index.0, i64 %index.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1960 {
start:
  %index.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1964, metadata !DIExpression()), !dbg !1966
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 0
  store i64 %index.0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %index.dbg.spill, i32 0, i32 1
  store i64 %index.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %index.dbg.spill, metadata !1965, metadata !DIExpression()), !dbg !1967
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h537bc549b739c8bdE"(i64 %index.0, i64 %index.1, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1968
  %_4.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1968
  %_4.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1968
  br label %bb1, !dbg !1968

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !1969
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %_4.1, 1, !dbg !1969
  ret { [0 x i8]*, i64 } %7, !dbg !1969
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8a9535dd529280f7E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1970 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1974, metadata !DIExpression()), !dbg !1976
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1975, metadata !DIExpression()), !dbg !1977
; call <core::ops::range::RangeToInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd4560bfaae627711E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1978
  %_4.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1978
  %_4.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1978
  br label %bb1, !dbg !1978

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !1979
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_4.1, 1, !dbg !1979
  ret { [0 x i8]*, i64 } %5, !dbg !1979
}

; core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h9608ef68fd8d20caE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !1980 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1984, metadata !DIExpression()), !dbg !1986
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !1985, metadata !DIExpression()), !dbg !1987
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h79188cab2ad3be78E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !1988
  %_4.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !1988
  %_4.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !1988
  br label %bb1, !dbg !1988

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_4.0, 0, !dbg !1989
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_4.1, 1, !dbg !1989
  ret { [0 x i8]*, i64 } %5, !dbg !1989
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h31e1addddddbd2ccE"(i8* %0) unnamed_addr #0 !dbg !1990 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %err.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_7 = alloca i8, align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !2008, metadata !DIExpression()), !dbg !2012
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %err.dbg.spill, metadata !2009, metadata !DIExpression()), !dbg !2013
  store i8 0, i8* %_7, align 1, !dbg !2014
  store i8 1, i8* %_7, align 1, !dbg !2014
  %2 = bitcast i8** %self to {}**, !dbg !2014
  %3 = load {}*, {}** %2, align 8, !dbg !2014
  %4 = icmp eq {}* %3, null, !dbg !2014
  %_3 = select i1 %4, i64 0, i64 1, !dbg !2014
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2015

bb2:                                              ; preds = %start
  unreachable, !dbg !2014

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2016
  %5 = bitcast i8** %1 to %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"*, !dbg !2017
  %6 = bitcast %"std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>::Err"* %5 to %"std::alloc::AllocError"*, !dbg !2017
  %7 = bitcast i8** %1 to {}**, !dbg !2017
  store {}* null, {}** %7, align 8, !dbg !2017
  br label %bb4, !dbg !2018

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !2019, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !2019
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !2010, metadata !DIExpression()), !dbg !2020
  store i8* %v, i8** %1, align 8, !dbg !2021
  br label %bb4, !dbg !2022

bb4:                                              ; preds = %bb1, %bb3
  %8 = load i8, i8* %_7, align 1, !dbg !2023, !range !978
  %9 = trunc i8 %8 to i1, !dbg !2023
  br i1 %9, label %bb6, label %bb5, !dbg !2023

bb5:                                              ; preds = %bb6, %bb4
  %10 = load i8*, i8** %1, align 8, !dbg !2024
  ret i8* %10, !dbg !2024

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2023
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h8c6e6ca43fdffaacE"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2, i64 %err.0, i64 %err.1) unnamed_addr #0 !dbg !2025 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca { i64, i64 }, align 8
  %_7 = alloca i8, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2042, metadata !DIExpression()), !dbg !2046
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 0
  store i64 %err.0, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %err.dbg.spill, i32 0, i32 1
  store i64 %err.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %err.dbg.spill, metadata !2043, metadata !DIExpression()), !dbg !2047
  store i8 0, i8* %_7, align 1, !dbg !2048
  store i8 1, i8* %_7, align 1, !dbg !2048
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2048
  %_3 = load i64, i64* %7, align 8, !dbg !2048, !range !338
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2049

bb2:                                              ; preds = %start
  unreachable, !dbg !2048

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2050
  %8 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !2051
  %9 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !2051
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !2051
  store i64 %err.0, i64* %10, align 8, !dbg !2051
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !2051
  store i64 %err.1, i64* %11, align 8, !dbg !2051
  %12 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2051
  store i64 1, i64* %12, align 8, !dbg !2051
  br label %bb4, !dbg !2052

bb3:                                              ; preds = %start
  %13 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2053
  %14 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %13, i32 0, i32 1, !dbg !2053
  %v = load i64, i64* %14, align 8, !dbg !2053
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2053
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2044, metadata !DIExpression()), !dbg !2054
  %15 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2055
  %16 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %15, i32 0, i32 1, !dbg !2055
  store i64 %v, i64* %16, align 8, !dbg !2055
  %17 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2055
  store i64 0, i64* %17, align 8, !dbg !2055
  br label %bb4, !dbg !2056

bb4:                                              ; preds = %bb1, %bb3
  %18 = load i8, i8* %_7, align 1, !dbg !2057, !range !978
  %19 = trunc i8 %18 to i1, !dbg !2057
  br i1 %19, label %bb6, label %bb5, !dbg !2057

bb5:                                              ; preds = %bb6, %bb4
  ret void, !dbg !2058

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2057
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17ha70ed32c01f32cf6E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2059 {
start:
  %v.dbg.spill = alloca i64, align 8
  %err.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_7 = alloca i8, align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2076, metadata !DIExpression()), !dbg !2080
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %err.dbg.spill, metadata !2077, metadata !DIExpression()), !dbg !2081
  store i8 0, i8* %_7, align 1, !dbg !2082
  store i8 1, i8* %_7, align 1, !dbg !2082
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !2082
  %_3 = load i64, i64* %5, align 8, !dbg !2082, !range !338
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2083

bb2:                                              ; preds = %start
  unreachable, !dbg !2082

bb1:                                              ; preds = %start
  store i8 0, i8* %_7, align 1, !dbg !2084
  %6 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Err"*, !dbg !2085
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Err", %"std::result::Result<usize, std::alloc::LayoutError>::Err"* %6, i32 0, i32 1, !dbg !2085
  %8 = bitcast { i64, i64 }* %2 to i64*, !dbg !2085
  store i64 1, i64* %8, align 8, !dbg !2085
  br label %bb4, !dbg !2086

bb3:                                              ; preds = %start
  %9 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2087
  %10 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %9, i32 0, i32 1, !dbg !2087
  %v = load i64, i64* %10, align 8, !dbg !2087
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !2087
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !2078, metadata !DIExpression()), !dbg !2088
  %11 = bitcast { i64, i64 }* %2 to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !2089
  %12 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %11, i32 0, i32 1, !dbg !2089
  store i64 %v, i64* %12, align 8, !dbg !2089
  %13 = bitcast { i64, i64 }* %2 to i64*, !dbg !2089
  store i64 0, i64* %13, align 8, !dbg !2089
  br label %bb4, !dbg !2090

bb4:                                              ; preds = %bb1, %bb3
  %14 = load i8, i8* %_7, align 1, !dbg !2091, !range !978
  %15 = trunc i8 %14 to i1, !dbg !2091
  br i1 %15, label %bb6, label %bb5, !dbg !2091

bb5:                                              ; preds = %bb6, %bb4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !2092
  %17 = load i64, i64* %16, align 8, !dbg !2092, !range !338
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !2092
  %19 = load i64, i64* %18, align 8, !dbg !2092
  %20 = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !2092
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1, !dbg !2092
  ret { i64, i64 } %21, !dbg !2092

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !2091
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h5984e025ace1e275E"(i64 %0, i64 %1, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 !dbg !2093 {
start:
  %val.dbg.spill = alloca i64, align 8
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2097, metadata !DIExpression()), !dbg !2101
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !2098, metadata !DIExpression()), !dbg !2102
  %7 = bitcast { i64, i64 }* %self to i64*, !dbg !2103
  %_3 = load i64, i64* %7, align 8, !dbg !2103, !range !338
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2104

bb2:                                              ; preds = %start
  unreachable, !dbg !2103

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hc7542e6963b38cc8E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2105
  unreachable, !dbg !2105

bb3:                                              ; preds = %start
  %8 = bitcast { i64, i64 }* %self to %"std::option::Option<usize>::Some"*, !dbg !2106
  %9 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %8, i32 0, i32 1, !dbg !2106
  %val = load i64, i64* %9, align 8, !dbg !2106
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2106
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2099, metadata !DIExpression()), !dbg !2107
  ret i64 %val, !dbg !2108
}

; core::option::Option<T>::expect
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$6expect17h7cba6b55af8f9671E"(%"std::option::Option<(u64, u64)>"* noalias nocapture dereferenceable(24) %self, [0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2109 {
start:
  %val.dbg.spill = alloca { i64, i64 }, align 8, !dbg !2133
  %msg.dbg.spill = alloca { [0 x i8]*, i64 }, align 8, !dbg !2133
  call void @llvm.dbg.declare(metadata %"std::option::Option<(u64, u64)>"* %self, metadata !2129, metadata !DIExpression()), !dbg !2133
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 0
  store [0 x i8]* %msg.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %msg.dbg.spill, i32 0, i32 1
  store i64 %msg.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %msg.dbg.spill, metadata !2130, metadata !DIExpression()), !dbg !2134
  %3 = bitcast %"std::option::Option<(u64, u64)>"* %self to i64*, !dbg !2135
  %_3 = load i64, i64* %3, align 8, !dbg !2135, !range !338
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2136

bb2:                                              ; preds = %start
  unreachable, !dbg !2135

bb1:                                              ; preds = %start
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17hc7542e6963b38cc8E([0 x i8]* nonnull align 1 %msg.0, i64 %msg.1, %"std::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2137
  unreachable, !dbg !2137

bb3:                                              ; preds = %start
  %4 = bitcast %"std::option::Option<(u64, u64)>"* %self to %"std::option::Option<(u64, u64)>::Some"*, !dbg !2138
  %5 = getelementptr inbounds %"std::option::Option<(u64, u64)>::Some", %"std::option::Option<(u64, u64)>::Some"* %4, i32 0, i32 1, !dbg !2138
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !2138
  %val.0 = load i64, i64* %6, align 8, !dbg !2138
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !2138
  %val.1 = load i64, i64* %7, align 8, !dbg !2138
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill, i32 0, i32 0, !dbg !2138
  store i64 %val.0, i64* %8, align 8, !dbg !2138
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill, i32 0, i32 1, !dbg !2138
  store i64 %val.1, i64* %9, align 8, !dbg !2138
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill, metadata !2131, metadata !DIExpression()), !dbg !2139
  %10 = insertvalue { i64, i64 } undef, i64 %val.0, 0, !dbg !2140
  %11 = insertvalue { i64, i64 } %10, i64 %val.1, 1, !dbg !2140
  ret { i64, i64 } %11, !dbg !2140
}

; core::result::Result<T,E>::unwrap
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he128bd3c53d5c5e4E"(i64 %0, i64 %1, %"std::panic::Location"* align 8 dereferenceable(24) %2) unnamed_addr #0 !dbg !2141 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e = alloca %"std::alloc::LayoutError", align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2145, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e, metadata !2148, metadata !DIExpression()), !dbg !2151
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2152
  %6 = load i64, i64* %5, align 8, !dbg !2152
  %7 = icmp eq i64 %6, 0, !dbg !2152
  %_2 = select i1 %7, i64 1, i64 0, !dbg !2152
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2153

bb2:                                              ; preds = %start
  unreachable, !dbg !2152

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2154
  %t.0 = load i64, i64* %8, align 8, !dbg !2154
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2154
  %t.1 = load i64, i64* %9, align 8, !dbg !2154, !range !1106
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2154
  store i64 %t.0, i64* %10, align 8, !dbg !2154
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2154
  store i64 %t.1, i64* %11, align 8, !dbg !2154
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2146, metadata !DIExpression()), !dbg !2155
  %12 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2156
  %13 = insertvalue { i64, i64 } %12, i64 %t.1, 1, !dbg !2156
  ret { i64, i64 } %13, !dbg !2156

bb1:                                              ; preds = %start
  %_6.0 = bitcast %"std::alloc::LayoutError"* %e to {}*, !dbg !2157
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1 bitcast (<{ [43 x i8] }>* @alloc1060 to [0 x i8]*), i64 43, {}* nonnull align 1 %_6.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.0 to [3 x i64]*), %"std::panic::Location"* align 8 dereferenceable(24) %2), !dbg !2158
  unreachable, !dbg !2158
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h01c030a1c9425b29E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %0, i64 %1, i64 %2) unnamed_addr #0 !dbg !2159 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::LayoutError" }, align 1
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !2179, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %op.dbg.spill, metadata !2180, metadata !DIExpression()), !dbg !2189
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !2183, metadata !DIExpression()), !dbg !2190
  store i8 0, i8* %_11, align 1, !dbg !2191
  store i8 1, i8* %_11, align 1, !dbg !2191
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2191
  %6 = load i64, i64* %5, align 8, !dbg !2191
  %7 = icmp eq i64 %6, 0, !dbg !2191
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2191
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2192

bb2:                                              ; preds = %start
  unreachable, !dbg !2191

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !2193
  %t.0 = load i64, i64* %8, align 8, !dbg !2193
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !2193
  %t.1 = load i64, i64* %9, align 8, !dbg !2193, !range !1106
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2193
  store i64 %t.0, i64* %10, align 8, !dbg !2193
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2193
  store i64 %t.1, i64* %11, align 8, !dbg !2193
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2181, metadata !DIExpression()), !dbg !2194
  %12 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !2195
  %13 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %12, i32 0, i32 1, !dbg !2195
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2195
  store i64 %t.0, i64* %14, align 8, !dbg !2195
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2195
  store i64 %t.1, i64* %15, align 8, !dbg !2195
  %16 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2195
  store i64 0, i64* %16, align 8, !dbg !2195
  br label %bb5, !dbg !2196

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2197
  %17 = bitcast { %"std::alloc::LayoutError" }* %_9 to %"std::alloc::LayoutError"*, !dbg !2197
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf908f8c73d0bd43fE"(), !dbg !2197
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2197
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2197
  br label %bb4, !dbg !2197

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !2198
  %20 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %19, i32 0, i32 1, !dbg !2198
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2198
  store i64 %_7.0, i64* %21, align 8, !dbg !2198
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2198
  store i64 %_7.1, i64* %22, align 8, !dbg !2198
  %23 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2198
  store i64 1, i64* %23, align 8, !dbg !2198
  br label %bb5, !dbg !2199

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2200, !range !978
  %25 = trunc i8 %24 to i1, !dbg !2200
  br i1 %25, label %bb7, label %bb6, !dbg !2200

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2201

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2200
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17he453e2481c596369E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !2202 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %t.dbg.spill = alloca {}, align 1
  %op.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %_11 = alloca i8, align 1
  %_9 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !2221, metadata !DIExpression()), !dbg !2229
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %op.dbg.spill, metadata !2222, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.declare(metadata {}* %t.dbg.spill, metadata !2223, metadata !DIExpression()), !dbg !2231
  store i8 0, i8* %_11, align 1, !dbg !2232
  store i8 1, i8* %_11, align 1, !dbg !2232
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !2232
  %_3 = load i64, i64* %1, align 8, !dbg !2232, !range !338
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2233

bb2:                                              ; preds = %start
  unreachable, !dbg !2232

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"*, !dbg !2234
  %3 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !2234
  %4 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2234
  store i64 0, i64* %4, align 8, !dbg !2234
  br label %bb5, !dbg !2235

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !2236
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !2236
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !2236
  %e.0 = load i64, i64* %7, align 8, !dbg !2236
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !2236
  %e.1 = load i64, i64* %8, align 8, !dbg !2236
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !2236
  store i64 %e.0, i64* %9, align 8, !dbg !2236
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !2236
  store i64 %e.1, i64* %10, align 8, !dbg !2236
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !2225, metadata !DIExpression()), !dbg !2237
  store i8 0, i8* %_11, align 1, !dbg !2238
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2238
  store i64 %e.0, i64* %11, align 8, !dbg !2238
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2238
  store i64 %e.1, i64* %12, align 8, !dbg !2238
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 0, !dbg !2238
  %14 = load i64, i64* %13, align 8, !dbg !2238
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_9, i32 0, i32 1, !dbg !2238
  %16 = load i64, i64* %15, align 8, !dbg !2238
; call alloc::raw_vec::handle_reserve::{{closure}}
  %17 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h9b49ae39cdd766b7E"(i64 %14, i64 %16), !dbg !2238
  %_7.0 = extractvalue { i64, i64 } %17, 0, !dbg !2238
  %_7.1 = extractvalue { i64, i64 } %17, 1, !dbg !2238
  br label %bb4, !dbg !2238

bb4:                                              ; preds = %bb1
  %18 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !2239
  %19 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %18, i32 0, i32 1, !dbg !2239
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !2239
  store i64 %_7.0, i64* %20, align 8, !dbg !2239
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !2239
  store i64 %_7.1, i64* %21, align 8, !dbg !2239
  %22 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %0 to i64*, !dbg !2239
  store i64 1, i64* %22, align 8, !dbg !2239
  br label %bb5, !dbg !2240

bb5:                                              ; preds = %bb3, %bb4
  %23 = load i8, i8* %_11, align 1, !dbg !2241, !range !978
  %24 = trunc i8 %23 to i1, !dbg !2241
  br i1 %24, label %bb7, label %bb6, !dbg !2241

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2242

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2241
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hfdf869cc5d5702ccE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %1, i64 %2, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 !dbg !2243 {
start:
  %t.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca { %"std::alloc::AllocError" }, align 1
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %2, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !2250, metadata !DIExpression()), !dbg !2258
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !2251, metadata !DIExpression()), !dbg !2259
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !2254, metadata !DIExpression()), !dbg !2260
  store i8 0, i8* %_11, align 1, !dbg !2261
  store i8 1, i8* %_11, align 1, !dbg !2261
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !2261
  %6 = load {}*, {}** %5, align 8, !dbg !2261
  %7 = icmp eq {}* %6, null, !dbg !2261
  %_3 = select i1 %7, i64 1, i64 0, !dbg !2261
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !2262

bb2:                                              ; preds = %start
  unreachable, !dbg !2261

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !2263
  %t.0 = load i8*, i8** %8, align 8, !dbg !2263, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2263
  %t.1 = load i64, i64* %9, align 8, !dbg !2263
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 0, !dbg !2263
  store i8* %t.0, i8** %10, align 8, !dbg !2263
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %t.dbg.spill, i32 0, i32 1, !dbg !2263
  store i64 %t.1, i64* %11, align 8, !dbg !2263
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %t.dbg.spill, metadata !2252, metadata !DIExpression()), !dbg !2264
  %12 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !2265
  %13 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %12, i32 0, i32 1, !dbg !2265
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0, !dbg !2265
  store i8* %t.0, i8** %14, align 8, !dbg !2265
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1, !dbg !2265
  store i64 %t.1, i64* %15, align 8, !dbg !2265
  %16 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2265
  store i64 0, i64* %16, align 8, !dbg !2265
  br label %bb5, !dbg !2266

bb1:                                              ; preds = %start
  store i8 0, i8* %_11, align 1, !dbg !2267
  %17 = bitcast { %"std::alloc::AllocError" }* %_9 to %"std::alloc::AllocError"*, !dbg !2267
; call alloc::raw_vec::finish_grow::{{closure}}
  %18 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc1e1a461dffa210aE"(i64* align 8 dereferenceable(16) %op), !dbg !2267
  %_7.0 = extractvalue { i64, i64 } %18, 0, !dbg !2267
  %_7.1 = extractvalue { i64, i64 } %18, 1, !dbg !2267
  br label %bb4, !dbg !2267

bb4:                                              ; preds = %bb1
  %19 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !2268
  %20 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %19, i32 0, i32 1, !dbg !2268
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !2268
  store i64 %_7.0, i64* %21, align 8, !dbg !2268
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !2268
  store i64 %_7.1, i64* %22, align 8, !dbg !2268
  %23 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %0 to i64*, !dbg !2268
  store i64 1, i64* %23, align 8, !dbg !2268
  br label %bb5, !dbg !2269

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !2270, !range !978
  %25 = trunc i8 %24 to i1, !dbg !2270
  br i1 %25, label %bb7, label %bb6, !dbg !2270

bb6:                                              ; preds = %bb7, %bb5
  ret void, !dbg !2271

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !2270
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha5a5014715615456E"() unnamed_addr #1 !dbg !2272 {
start:
  %t.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %t.dbg.spill, metadata !2278, metadata !DIExpression()), !dbg !2279
  ret void, !dbg !2280
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd88d581771ef8982E"(i64 %t.0, i64 %t.1) unnamed_addr #1 !dbg !2281 {
start:
  %t.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 0
  store i64 %t.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %t.dbg.spill, i32 0, i32 1
  store i64 %t.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %t.dbg.spill, metadata !2285, metadata !DIExpression()), !dbg !2288
  %2 = insertvalue { i64, i64 } undef, i64 %t.0, 0, !dbg !2289
  %3 = insertvalue { i64, i64 } %2, i64 %t.1, 1, !dbg !2289
  ret { i64, i64 } %3, !dbg !2289
}

; <T as core::convert::From<T>>::from
; Function Attrs: nounwind
define void @"_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he4383908b69e61b1E"() unnamed_addr #1 !dbg !2290 {
start:
  %t.dbg.spill = alloca %"std::alloc::AllocError", align 1
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %t.dbg.spill, metadata !2294, metadata !DIExpression()), !dbg !2297
  ret void, !dbg !2298
}

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
define { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h08cfa515d1644ebaE"(i64 %self.0, i64 %self.1) unnamed_addr #1 !dbg !2299 {
start:
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !2302, metadata !DIExpression()), !dbg !2306
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i64, i64 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h96a99ae44b831ab1E"(i64 %self.0, i64 %self.1), !dbg !2307
  %3 = extractvalue { i64, i64 } %2, 0, !dbg !2307
  %4 = extractvalue { i64, i64 } %2, 1, !dbg !2307
  br label %bb1, !dbg !2307

bb1:                                              ; preds = %start
  %5 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2308
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1, !dbg !2308
  ret { i64, i64 } %6, !dbg !2308
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h539509a173ce81a8E({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2309 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !2314, metadata !DIExpression()), !dbg !2315
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17had00e079f95a9eb0E"({ i64, i64 }* align 8 dereferenceable(16) %self), !dbg !2316
  %1 = extractvalue { i64, i64 } %0, 0, !dbg !2316
  %2 = extractvalue { i64, i64 } %0, 1, !dbg !2316
  br label %bb1, !dbg !2316

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !2317
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1, !dbg !2317
  ret { i64, i64 } %4, !dbg !2317
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4458ddfb2c9094c3E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2318 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2338, metadata !DIExpression()), !dbg !2341
  %_2 = bitcast %"std::vec::Vec<bool>"* %self to { i8*, i64 }*, !dbg !2342
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h698bdd8dcb7f722fE"({ i8*, i64 }* align 8 dereferenceable(16) %_2), !dbg !2342
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2342
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2339, metadata !DIExpression()), !dbg !2343
  br label %bb1, !dbg !2342

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3e95ebc468912652E"(i8* %ptr), !dbg !2344
  br label %bb2, !dbg !2344

bb2:                                              ; preds = %bb1
  %_4 = xor i1 %_5, true, !dbg !2345
  call void @llvm.assume(i1 %_4), !dbg !2346
  br label %bb3, !dbg !2346

bb3:                                              ; preds = %bb2
  ret i8* %ptr, !dbg !2347
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hf675dc307bacf4f2E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2348 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2353, metadata !DIExpression()), !dbg !2354
  %0 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2355
  %1 = load i64, i64* %0, align 8, !dbg !2355
  ret i64 %1, !dbg !2356
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nounwind
define i8 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h397e98b92c6900d5E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2357 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  %1 = alloca i8, align 1
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2372, metadata !DIExpression()), !dbg !2373
  %2 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2374
  %_2 = load i64, i64* %2, align 8, !dbg !2374
  %3 = icmp eq i64 %_2, 0, !dbg !2374
  br i1 %3, label %bb1, label %bb2, !dbg !2374

bb1:                                              ; preds = %start
  store i8 2, i8* %1, align 1, !dbg !2375
  br label %bb7, !dbg !2376

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2377
  %5 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2377
  %6 = load i64, i64* %5, align 8, !dbg !2377
  %7 = sub i64 %6, 1, !dbg !2377
  store i64 %7, i64* %4, align 8, !dbg !2377
; call alloc::vec::Vec<T,A>::as_ptr
  %_5 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hdcc31aa30150e3e8E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self), !dbg !2378
  br label %bb3, !dbg !2378

bb3:                                              ; preds = %bb2
; call alloc::vec::Vec<T,A>::len
  %_7 = call i64 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hf675dc307bacf4f2E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self), !dbg !2379
  br label %bb4, !dbg !2379

bb4:                                              ; preds = %bb3
  store i8* %_5, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !171, metadata !DIExpression()), !dbg !2380
  store i64 %_7, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !180, metadata !DIExpression()), !dbg !2382
  store i8* %_5, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !184, metadata !DIExpression()), !dbg !2383
  store i64 %_7, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !190, metadata !DIExpression()), !dbg !2385
  %8 = getelementptr inbounds i8, i8* %_5, i64 %_7, !dbg !2386
  store i8* %8, i8** %0, align 8, !dbg !2386
  %9 = load i8*, i8** %0, align 8, !dbg !2386
  br label %bb5, !dbg !2378

bb5:                                              ; preds = %bb4
; call core::ptr::read
  %_3 = call zeroext i1 @_ZN4core3ptr4read17h416c49d38f6da509E(i8* %9), !dbg !2387
  br label %bb6, !dbg !2387

bb6:                                              ; preds = %bb5
  %10 = zext i1 %_3 to i8, !dbg !2388
  store i8 %10, i8* %1, align 1, !dbg !2388
  br label %bb7, !dbg !2376

bb7:                                              ; preds = %bb1, %bb6
  %11 = load i8, i8* %1, align 1, !dbg !2389, !range !2390
  ret i8 %11, !dbg !2389
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6fb46a7a3785d933E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self, i1 zeroext %value) unnamed_addr #0 !dbg !2391 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i8*, align 8
  %self.dbg.spill.i = alloca { i8*, i64 }*, align 8
  %1 = alloca i64, align 8
  %end.dbg.spill = alloca i8*, align 8
  %value.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2395, metadata !DIExpression()), !dbg !2399
  %2 = zext i1 %value to i8
  store i8 %2, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !2396, metadata !DIExpression()), !dbg !2400
  %3 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2401
  %_4 = load i64, i64* %3, align 8, !dbg !2401
  %_6 = bitcast %"std::vec::Vec<bool>"* %self to { i8*, i64 }*, !dbg !2402
  store { i8*, i64 }* %_6, { i8*, i64 }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill.i, metadata !2403, metadata !DIExpression()), !dbg !2410
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_6, i32 0, i32 1, !dbg !2412
  %5 = load i64, i64* %4, align 8, !dbg !2412
  store i64 %5, i64* %1, align 8, !dbg !2412
  %6 = load i64, i64* %1, align 8, !dbg !2413
  br label %bb1, !dbg !2402

bb1:                                              ; preds = %start
  %_3 = icmp eq i64 %_4, %6, !dbg !2401
  br i1 %_3, label %bb2, label %bb4, !dbg !2401

bb4:                                              ; preds = %bb3, %bb1
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4458ddfb2c9094c3E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self), !dbg !2414
  br label %bb5, !dbg !2414

bb2:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1241b9d1ce11e0efE"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self, i64 1), !dbg !2415
  br label %bb3, !dbg !2415

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2416

bb5:                                              ; preds = %bb4
  %7 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2417
  %_12 = load i64, i64* %7, align 8, !dbg !2417
  store i8* %_10, i8** %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i1, metadata !223, metadata !DIExpression()), !dbg !2418
  store i64 %_12, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !229, metadata !DIExpression()), !dbg !2420
  store i8* %_10, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !233, metadata !DIExpression()), !dbg !2421
  store i64 %_12, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !238, metadata !DIExpression()), !dbg !2423
  %8 = getelementptr inbounds i8, i8* %_10, i64 %_12, !dbg !2424
  store i8* %8, i8** %0, align 8, !dbg !2424
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !2424
  store i8* %_3.i.i, i8** %end.dbg.spill, align 8, !dbg !2414
  call void @llvm.dbg.declare(metadata i8** %end.dbg.spill, metadata !2397, metadata !DIExpression()), !dbg !2425
  br label %bb6, !dbg !2414

bb6:                                              ; preds = %bb5
; call core::ptr::write
  call void @_ZN4core3ptr5write17he658c7156b290fdaE(i8* %_3.i.i, i1 zeroext %value), !dbg !2426
  br label %bb7, !dbg !2426

bb7:                                              ; preds = %bb6
  %9 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2427
  %10 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2427
  %11 = load i64, i64* %10, align 8, !dbg !2427
  %12 = add i64 %11, 1, !dbg !2427
  store i64 %12, i64* %9, align 8, !dbg !2427
  ret void, !dbg !2428
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hdcc31aa30150e3e8E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !2429 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2433, metadata !DIExpression()), !dbg !2436
  %_3 = bitcast %"std::vec::Vec<bool>"* %self to { i8*, i64 }*, !dbg !2437
; call alloc::raw_vec::RawVec<T,A>::ptr
  %ptr = call i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h698bdd8dcb7f722fE"({ i8*, i64 }* align 8 dereferenceable(16) %_3), !dbg !2437
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2437
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2434, metadata !DIExpression()), !dbg !2438
  br label %bb1, !dbg !2437

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3e95ebc468912652E"(i8* %ptr), !dbg !2439
  br label %bb2, !dbg !2439

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true, !dbg !2440
  call void @llvm.assume(i1 %_5), !dbg !2441
  br label %bb3, !dbg !2441

bb3:                                              ; preds = %bb2
  ret i8* %ptr, !dbg !2442
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nounwind
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1241b9d1ce11e0efE"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self, i64 %additional) unnamed_addr #1 !dbg !2443 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !2447, metadata !DIExpression()), !dbg !2449
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2448, metadata !DIExpression()), !dbg !2450
  %_4 = bitcast %"std::vec::Vec<bool>"* %self to { i8*, i64 }*, !dbg !2451
  %0 = getelementptr inbounds %"std::vec::Vec<bool>", %"std::vec::Vec<bool>"* %self, i32 0, i32 1, !dbg !2452
  %_5 = load i64, i64* %0, align 8, !dbg !2452
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17heca5afb0eba90d72E"({ i8*, i64 }* align 8 dereferenceable(16) %_4, i64 %_5, i64 %additional), !dbg !2451
  br label %bb1, !dbg !2451

bb1:                                              ; preds = %start
  ret void, !dbg !2453
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc12alloc_zeroed17h36cc8ceac3dc486fE(i64 %0, i64 %1) unnamed_addr #0 !dbg !2454 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2459, metadata !DIExpression()), !dbg !2460
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2461
  br label %bb1, !dbg !2461

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2462
  br label %bb2, !dbg !2462

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc_zeroed(i64 %_2, i64 %_4), !dbg !2463
  br label %bb3, !dbg !2463

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2464
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc5alloc17hc99aa5946a304424E(i64 %0, i64 %1) unnamed_addr #0 !dbg !2465 {
start:
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2467, metadata !DIExpression()), !dbg !2468
; call core::alloc::layout::Layout::size
  %_2 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2469
  br label %bb1, !dbg !2469

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_4 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2470
  br label %bb2, !dbg !2470

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_alloc(i64 %_2, i64 %_4), !dbg !2471
  br label %bb3, !dbg !2471

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2472
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3cd61ca2b5ad4fc1E(%"std::alloc::Global"* nonnull align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2473 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %size.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_15 = alloca i8*, align 8
  %raw_ptr = alloca i8*, align 8
  %2 = alloca { i8*, i64 }, align 8
  %layout = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2478, metadata !DIExpression()), !dbg !2491
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2479, metadata !DIExpression()), !dbg !2492
  %5 = zext i1 %zeroed to i8
  store i8 %5, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2480, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.declare(metadata i8** %raw_ptr, metadata !2483, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2487, metadata !DIExpression()), !dbg !2495
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2496
  br label %bb1, !dbg !2496

bb1:                                              ; preds = %start
  %6 = icmp eq i64 %_4, 0, !dbg !2497
  br i1 %6, label %bb3, label %bb2, !dbg !2497

bb3:                                              ; preds = %bb1
; call core::alloc::layout::Layout::dangling
  %_7 = call nonnull i8* @_ZN4core5alloc6layout6Layout8dangling17h29e0235ef9518cb9E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2498
  br label %bb4, !dbg !2498

bb2:                                              ; preds = %bb1
  store i64 %_4, i64* %size.dbg.spill, align 8, !dbg !2499
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2481, metadata !DIExpression()), !dbg !2500
  br i1 %zeroed, label %bb6, label %bb8, !dbg !2501

bb8:                                              ; preds = %bb2
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2502
  %_13.0 = load i64, i64* %7, align 8, !dbg !2502
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2502
  %_13.1 = load i64, i64* %8, align 8, !dbg !2502, !range !1106
; call alloc::alloc::alloc
  %9 = call i8* @_ZN5alloc5alloc5alloc17hc99aa5946a304424E(i64 %_13.0, i64 %_13.1), !dbg !2503
  store i8* %9, i8** %raw_ptr, align 8, !dbg !2503
  br label %bb9, !dbg !2503

bb6:                                              ; preds = %bb2
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2504
  %_12.0 = load i64, i64* %10, align 8, !dbg !2504
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2504
  %_12.1 = load i64, i64* %11, align 8, !dbg !2504, !range !1106
; call alloc::alloc::alloc_zeroed
  %12 = call i8* @_ZN5alloc5alloc12alloc_zeroed17h36cc8ceac3dc486fE(i64 %_12.0, i64 %_12.1), !dbg !2505
  store i8* %12, i8** %raw_ptr, align 8, !dbg !2505
  br label %bb7, !dbg !2505

bb7:                                              ; preds = %bb6
  br label %bb10, !dbg !2506

bb10:                                             ; preds = %bb9, %bb7
  %_18 = load i8*, i8** %raw_ptr, align 8, !dbg !2507
; call core::ptr::non_null::NonNull<T>::new
  %_17 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hfad105d03ddaea6bE"(i8* %_18), !dbg !2508
  br label %bb11, !dbg !2508

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !2506

bb11:                                             ; preds = %bb10
; call core::option::Option<T>::ok_or
  %_16 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h31e1addddddbd2ccE"(i8* %_17), !dbg !2508
  br label %bb12, !dbg !2508

bb12:                                             ; preds = %bb11
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29ca9301afe2ce77E"(i8* %_16), !dbg !2508
  store i8* %13, i8** %_15, align 8, !dbg !2508
  br label %bb13, !dbg !2508

bb13:                                             ; preds = %bb12
  %14 = bitcast i8** %_15 to {}**, !dbg !2508
  %15 = load {}*, {}** %14, align 8, !dbg !2508
  %16 = icmp eq {}* %15, null, !dbg !2508
  %_20 = select i1 %16, i64 1, i64 0, !dbg !2508
  switch i64 %_20, label %bb15 [
    i64 0, label %bb14
    i64 1, label %bb16
  ], !dbg !2508

bb15:                                             ; preds = %bb13
  unreachable, !dbg !2508

bb14:                                             ; preds = %bb13
  %val = load i8*, i8** %_15, align 8, !dbg !2508, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2508
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2489, metadata !DIExpression()), !dbg !2509
  store i8* %val, i8** %ptr.dbg.spill, align 8, !dbg !2509
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2485, metadata !DIExpression()), !dbg !2510
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %17 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h24c6436c21aecb1cE"(i8* nonnull %val, i64 %_4), !dbg !2511
  %_24.0 = extractvalue { i8*, i64 } %17, 0, !dbg !2511
  %_24.1 = extractvalue { i8*, i64 } %17, 1, !dbg !2511
  br label %bb18, !dbg !2511

bb16:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf8465f404833e91E"(), !dbg !2512
  store { i8*, i64 } %18, { i8*, i64 }* %2, align 8, !dbg !2512
  br label %bb17, !dbg !2512

bb17:                                             ; preds = %bb16
  br label %bb20, !dbg !2513

bb20:                                             ; preds = %bb19, %bb17
  %19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2513
  %20 = load i8*, i8** %19, align 8, !dbg !2513
  %21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2513
  %22 = load i64, i64* %21, align 8, !dbg !2513
  %23 = insertvalue { i8*, i64 } undef, i8* %20, 0, !dbg !2513
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1, !dbg !2513
  ret { i8*, i64 } %24, !dbg !2513

bb18:                                             ; preds = %bb14
  %25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2514
  store i8* %_24.0, i8** %25, align 8, !dbg !2514
  %26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2514
  store i64 %_24.1, i64* %26, align 8, !dbg !2514
  br label %bb19, !dbg !2515

bb19:                                             ; preds = %bb5, %bb18
  br label %bb20, !dbg !2513

bb4:                                              ; preds = %bb3
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h24c6436c21aecb1cE"(i8* nonnull %_7, i64 0), !dbg !2516
  %_6.0 = extractvalue { i8*, i64 } %27, 0, !dbg !2516
  %_6.1 = extractvalue { i8*, i64 } %27, 1, !dbg !2516
  br label %bb5, !dbg !2516

bb5:                                              ; preds = %bb4
  %28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2517
  store i8* %_6.0, i8** %28, align 8, !dbg !2517
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2517
  store i64 %_6.1, i64* %29, align 8, !dbg !2517
  br label %bb19, !dbg !2518
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hda0541a69333da36E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 !dbg !2519 {
start:
  %count.dbg.spill.i7 = alloca i64, align 8
  %val.dbg.spill.i = alloca i8, align 1
  %self.dbg.spill.i8 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %new_ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %old_size.dbg.spill5 = alloca i64, align 8
  %ptr.dbg.spill3 = alloca i8*, align 8
  %val.dbg.spill = alloca i8*, align 8
  %raw_ptr.dbg.spill = alloca i8*, align 8
  %new_size.dbg.spill = alloca i64, align 8
  %old_size.dbg.spill2 = alloca i64, align 8
  %old_size.dbg.spill = alloca i64*, align 8
  %residual.dbg.spill1 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %residual.dbg.spill = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %zeroed.dbg.spill = alloca i8, align 1
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %_53 = alloca { i8*, i64 }, align 8
  %_31 = alloca i8*, align 8
  %_6 = alloca i64, align 8
  %5 = alloca { i8*, i64 }, align 8
  %new_layout = alloca { i64, i64 }, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1
  store i64 %3, i64* %9, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2523, metadata !DIExpression()), !dbg !2549
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2524, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !2525, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !2526, metadata !DIExpression()), !dbg !2552
  %10 = zext i1 %zeroed to i8
  store i8 %10, i8* %zeroed.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %zeroed.dbg.spill, metadata !2527, metadata !DIExpression()), !dbg !2553
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill, metadata !2537, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %residual.dbg.spill1, metadata !2545, metadata !DIExpression()), !dbg !2555
; call core::alloc::layout::Layout::size
  %11 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2556
  store i64 %11, i64* %_6, align 8, !dbg !2556
  br label %bb1, !dbg !2556

bb1:                                              ; preds = %start
  %12 = load i64, i64* %_6, align 8, !dbg !2557
  %13 = icmp eq i64 %12, 0, !dbg !2557
  br i1 %13, label %bb2, label %bb4, !dbg !2557

bb2:                                              ; preds = %bb1
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2558
  %_9.0 = load i64, i64* %14, align 8, !dbg !2558
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2558
  %_9.1 = load i64, i64* %15, align 8, !dbg !2558, !range !1106
; call alloc::alloc::Global::alloc_impl
  %16 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3cd61ca2b5ad4fc1E(%"std::alloc::Global"* nonnull align 1 %self, i64 %_9.0, i64 %_9.1, i1 zeroext %zeroed), !dbg !2559
  store { i8*, i64 } %16, { i8*, i64 }* %5, align 8, !dbg !2559
  br label %bb3, !dbg !2559

bb4:                                              ; preds = %bb1
  store i64* %_6, i64** %old_size.dbg.spill, align 8, !dbg !2560
  call void @llvm.dbg.declare(metadata i64** %old_size.dbg.spill, metadata !2530, metadata !DIExpression()), !dbg !2561
; call core::alloc::layout::Layout::align
  %_14 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2562
  br label %bb5, !dbg !2562

bb5:                                              ; preds = %bb4
; call core::alloc::layout::Layout::align
  %_16 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2563
  br label %bb6, !dbg !2563

bb6:                                              ; preds = %bb5
  %_13 = icmp eq i64 %_14, %_16, !dbg !2562
  br i1 %_13, label %bb7, label %bb8, !dbg !2562

bb8:                                              ; preds = %bb6
  %old_size4 = load i64, i64* %_6, align 8, !dbg !2564
  store i64 %old_size4, i64* %old_size.dbg.spill5, align 8, !dbg !2564
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill5, metadata !2541, metadata !DIExpression()), !dbg !2565
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2566
  %_56.0 = load i64, i64* %17, align 8, !dbg !2566
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2566
  %_56.1 = load i64, i64* %18, align 8, !dbg !2566, !range !1106
; call alloc::alloc::Global::alloc_impl
  %19 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3cd61ca2b5ad4fc1E(%"std::alloc::Global"* nonnull align 1 %self, i64 %_56.0, i64 %_56.1, i1 zeroext %zeroed), !dbg !2567
  %_54.0 = extractvalue { i8*, i64 } %19, 0, !dbg !2567
  %_54.1 = extractvalue { i8*, i64 } %19, 1, !dbg !2567
  br label %bb26, !dbg !2567

bb7:                                              ; preds = %bb6
  %old_size = load i64, i64* %_6, align 8, !dbg !2560
  store i64 %old_size, i64* %old_size.dbg.spill2, align 8, !dbg !2560
  call void @llvm.dbg.declare(metadata i64* %old_size.dbg.spill2, metadata !2528, metadata !DIExpression()), !dbg !2561
; call core::alloc::layout::Layout::size
  %new_size = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2568
  store i64 %new_size, i64* %new_size.dbg.spill, align 8, !dbg !2568
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2531, metadata !DIExpression()), !dbg !2569
  br label %bb9, !dbg !2568

bb9:                                              ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_23 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2570
  br label %bb10, !dbg !2570

bb10:                                             ; preds = %bb9
  %_21 = icmp uge i64 %new_size, %_23, !dbg !2571
  call void @llvm.assume(i1 %_21), !dbg !2572
  br label %bb11, !dbg !2572

bb11:                                             ; preds = %bb10
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_26 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull %ptr), !dbg !2573
  br label %bb12, !dbg !2573

bb12:                                             ; preds = %bb11
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2574
  %_28.0 = load i64, i64* %20, align 8, !dbg !2574
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2574
  %_28.1 = load i64, i64* %21, align 8, !dbg !2574, !range !1106
; call alloc::alloc::realloc
  %raw_ptr = call i8* @_ZN5alloc5alloc7realloc17hbab7a46186789c8aE(i8* %_26, i64 %_28.0, i64 %_28.1, i64 %new_size), !dbg !2575
  store i8* %raw_ptr, i8** %raw_ptr.dbg.spill, align 8, !dbg !2575
  call void @llvm.dbg.declare(metadata i8** %raw_ptr.dbg.spill, metadata !2533, metadata !DIExpression()), !dbg !2576
  br label %bb13, !dbg !2575

bb13:                                             ; preds = %bb12
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hfad105d03ddaea6bE"(i8* %raw_ptr), !dbg !2577
  br label %bb14, !dbg !2577

bb14:                                             ; preds = %bb13
; call core::option::Option<T>::ok_or
  %_32 = call i8* @"_ZN4core6option15Option$LT$T$GT$5ok_or17h31e1addddddbd2ccE"(i8* %_33), !dbg !2577
  br label %bb15, !dbg !2577

bb15:                                             ; preds = %bb14
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %22 = call i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29ca9301afe2ce77E"(i8* %_32), !dbg !2577
  store i8* %22, i8** %_31, align 8, !dbg !2577
  br label %bb16, !dbg !2577

bb16:                                             ; preds = %bb15
  %23 = bitcast i8** %_31 to {}**, !dbg !2577
  %24 = load {}*, {}** %23, align 8, !dbg !2577
  %25 = icmp eq {}* %24, null, !dbg !2577
  %_36 = select i1 %25, i64 1, i64 0, !dbg !2577
  switch i64 %_36, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !2577

bb18:                                             ; preds = %bb16
  unreachable, !dbg !2577

bb17:                                             ; preds = %bb16
  %val = load i8*, i8** %_31, align 8, !dbg !2577, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2577
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2539, metadata !DIExpression()), !dbg !2578
  store i8* %val, i8** %ptr.dbg.spill3, align 8, !dbg !2578
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill3, metadata !2535, metadata !DIExpression()), !dbg !2579
  br i1 %zeroed, label %bb21, label %bb24, !dbg !2580

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %26 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf8465f404833e91E"(), !dbg !2581
  store { i8*, i64 } %26, { i8*, i64 }* %5, align 8, !dbg !2581
  br label %bb20, !dbg !2581

bb20:                                             ; preds = %bb19
  br label %bb37, !dbg !2582

bb37:                                             ; preds = %bb31, %bb20
  br label %bb38, !dbg !2584

bb24:                                             ; preds = %bb23, %bb17
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %27 = call { i8*, i64 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h24c6436c21aecb1cE"(i8* nonnull %val, i64 %new_size), !dbg !2585
  %_48.0 = extractvalue { i8*, i64 } %27, 0, !dbg !2585
  %_48.1 = extractvalue { i8*, i64 } %27, 1, !dbg !2585
  br label %bb25, !dbg !2585

bb21:                                             ; preds = %bb17
  store i8* %raw_ptr, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !2586, metadata !DIExpression()), !dbg !2592
  store i64 %old_size, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2591, metadata !DIExpression()), !dbg !2594
  store i8* %raw_ptr, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !2595, metadata !DIExpression()), !dbg !2601
  store i64 %old_size, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2600, metadata !DIExpression()), !dbg !2603
  %28 = getelementptr inbounds i8, i8* %raw_ptr, i64 %old_size, !dbg !2604
  store i8* %28, i8** %4, align 8, !dbg !2604
  %_3.i.i = load i8*, i8** %4, align 8, !dbg !2604
  br label %bb22, !dbg !2605

bb22:                                             ; preds = %bb21
  %_45 = sub i64 %new_size, %old_size, !dbg !2606
  store i8* %_3.i.i, i8** %self.dbg.spill.i8, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i8, metadata !2607, metadata !DIExpression()) #12, !dbg !2612
  store i8 0, i8* %val.dbg.spill.i, align 1
  call void @llvm.dbg.declare(metadata i8* %val.dbg.spill.i, metadata !2610, metadata !DIExpression()) #12, !dbg !2614
  store i64 %_45, i64* %count.dbg.spill.i7, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i7, metadata !2611, metadata !DIExpression()) #12, !dbg !2615
; call core::intrinsics::write_bytes
  call void @_ZN4core10intrinsics11write_bytes17hd767c011f63a829aE(i8* %_3.i.i, i8 0, i64 %_45) #12, !dbg !2616
  br label %bb23, !dbg !2605

bb23:                                             ; preds = %bb22
  br label %bb24, !dbg !2617

bb25:                                             ; preds = %bb24
  %29 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2618
  store i8* %_48.0, i8** %29, align 8, !dbg !2618
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2618
  store i64 %_48.1, i64* %30, align 8, !dbg !2618
  br label %bb36, !dbg !2619

bb36:                                             ; preds = %bb3, %bb35, %bb25
  br label %bb38, !dbg !2584

bb26:                                             ; preds = %bb8
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %31 = call { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c9c748e1807e59dE"(i8* %_54.0, i64 %_54.1), !dbg !2567
  store { i8*, i64 } %31, { i8*, i64 }* %_53, align 8, !dbg !2567
  br label %bb27, !dbg !2567

bb27:                                             ; preds = %bb26
  %32 = bitcast { i8*, i64 }* %_53 to {}**, !dbg !2567
  %33 = load {}*, {}** %32, align 8, !dbg !2567
  %34 = icmp eq {}* %33, null, !dbg !2567
  %_58 = select i1 %34, i64 1, i64 0, !dbg !2567
  switch i64 %_58, label %bb29 [
    i64 0, label %bb28
    i64 1, label %bb30
  ], !dbg !2567

bb29:                                             ; preds = %bb27
  unreachable, !dbg !2567

bb28:                                             ; preds = %bb27
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 0, !dbg !2567
  %val.0 = load i8*, i8** %35, align 8, !dbg !2567, !nonnull !4
  %36 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_53, i32 0, i32 1, !dbg !2567
  %val.1 = load i64, i64* %36, align 8, !dbg !2567
  %37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !2567
  store i8* %val.0, i8** %37, align 8, !dbg !2567
  %38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !2567
  store i64 %val.1, i64* %38, align 8, !dbg !2567
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !2547, metadata !DIExpression()), !dbg !2620
  %39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 0, !dbg !2620
  store i8* %val.0, i8** %39, align 8, !dbg !2620
  %40 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %new_ptr.dbg.spill, i32 0, i32 1, !dbg !2620
  store i64 %val.1, i64* %40, align 8, !dbg !2620
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %new_ptr.dbg.spill, metadata !2543, metadata !DIExpression()), !dbg !2621
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_64 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull %ptr), !dbg !2622
  br label %bb32, !dbg !2622

bb30:                                             ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = call { i8*, i64 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf8465f404833e91E"(), !dbg !2623
  store { i8*, i64 } %41, { i8*, i64 }* %5, align 8, !dbg !2623
  br label %bb31, !dbg !2623

bb31:                                             ; preds = %bb30
  br label %bb37, !dbg !2582

bb38:                                             ; preds = %bb36, %bb37
  %42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2584
  %43 = load i8*, i8** %42, align 8, !dbg !2584
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2584
  %45 = load i64, i64* %44, align 8, !dbg !2584
  %46 = insertvalue { i8*, i64 } undef, i8* %43, 0, !dbg !2584
  %47 = insertvalue { i8*, i64 } %46, i64 %45, 1, !dbg !2584
  ret { i8*, i64 } %47, !dbg !2584

bb32:                                             ; preds = %bb28
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_66 = call i8* @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hd67808fc29ab1531E"(i8* nonnull %val.0, i64 %val.1), !dbg !2624
  br label %bb33, !dbg !2624

bb33:                                             ; preds = %bb32
; call core::intrinsics::copy_nonoverlapping
  call void @_ZN4core10intrinsics19copy_nonoverlapping17h396eee5230c4bc4aE(i8* %_64, i8* %_66, i64 %old_size4), !dbg !2625
  br label %bb34, !dbg !2625

bb34:                                             ; preds = %bb33
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2626
  %_72.0 = load i64, i64* %48, align 8, !dbg !2626
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2626
  %_72.1 = load i64, i64* %49, align 8, !dbg !2626, !range !1106
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hb5dcd020ae9ba376E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %_72.0, i64 %_72.1), !dbg !2627
  br label %bb35, !dbg !2627

bb35:                                             ; preds = %bb34
  %50 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 0, !dbg !2628
  store i8* %val.0, i8** %50, align 8, !dbg !2628
  %51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2628
  store i64 %val.1, i64* %51, align 8, !dbg !2628
  br label %bb36, !dbg !2629

bb3:                                              ; preds = %bb2
  br label %bb36, !dbg !2630
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc5alloc7dealloc17heb0da81b37f5244dE(i8* %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !2631 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2635, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2636, metadata !DIExpression()), !dbg !2638
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2639
  br label %bb1, !dbg !2639

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_6 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2640
  br label %bb2, !dbg !2640

bb2:                                              ; preds = %bb1
  call void @__rust_dealloc(i8* %ptr, i64 %_4, i64 %_6), !dbg !2641
  br label %bb3, !dbg !2641

bb3:                                              ; preds = %bb2
  ret void, !dbg !2642
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nounwind
define internal i8* @_ZN5alloc5alloc7realloc17hbab7a46186789c8aE(i8* %ptr, i64 %0, i64 %1, i64 %new_size) unnamed_addr #0 !dbg !2643 {
start:
  %new_size.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2647, metadata !DIExpression()), !dbg !2650
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2648, metadata !DIExpression()), !dbg !2651
  store i64 %new_size, i64* %new_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %new_size.dbg.spill, metadata !2649, metadata !DIExpression()), !dbg !2652
; call core::alloc::layout::Layout::size
  %_5 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2653
  br label %bb1, !dbg !2653

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::align
  %_7 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2654
  br label %bb2, !dbg !2654

bb2:                                              ; preds = %bb1
  %4 = call i8* @__rust_realloc(i8* %ptr, i64 %_5, i64 %_7, i64 %new_size), !dbg !2655
  br label %bb3, !dbg !2655

bb3:                                              ; preds = %bb2
  ret i8* %4, !dbg !2656
}

; alloc::raw_vec::alloc_guard
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec11alloc_guard17h81c978058e88b617E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %alloc_size) unnamed_addr #0 !dbg !2657 {
start:
  %alloc_size.dbg.spill = alloca i64, align 8
  %_4 = alloca { i64, i64 }, align 8
  store i64 %alloc_size, i64* %alloc_size.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %alloc_size.dbg.spill, metadata !2661, metadata !DIExpression()), !dbg !2662
  br i1 false, label %bb1, label %bb3, !dbg !2663

bb3:                                              ; preds = %start
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !2664
  store i64 0, i64* %1, align 8, !dbg !2664
  br label %bb4, !dbg !2665

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !2666
  store i64 0, i64* %2, align 8, !dbg !2666
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 0, !dbg !2666
  %4 = load i64, i64* %3, align 8, !dbg !2666
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_4, i32 0, i32 1, !dbg !2666
  %6 = load i64, i64* %5, align 8, !dbg !2666
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h08cfa515d1644ebaE"(i64 %4, i64 %6), !dbg !2666
  %_3.0 = extractvalue { i64, i64 } %7, 0, !dbg !2666
  %_3.1 = extractvalue { i64, i64 } %7, 1, !dbg !2666
  br label %bb2, !dbg !2666

bb2:                                              ; preds = %bb1
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !2667
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %8, i32 0, i32 1, !dbg !2667
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !2667
  store i64 %_3.0, i64* %10, align 8, !dbg !2667
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !2667
  store i64 %_3.1, i64* %11, align 8, !dbg !2667
  %12 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !2667
  store i64 1, i64* %12, align 8, !dbg !2667
  br label %bb4, !dbg !2665

bb4:                                              ; preds = %bb3, %bb2
  ret void, !dbg !2668
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nounwind
define void @_ZN5alloc7raw_vec11finish_grow17hbbb78aa164b6c003E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %current_memory, %"std::alloc::Global"* nonnull align 1 %alloc) unnamed_addr #2 !dbg !2669 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill4 = alloca { i64, i64 }, align 8
  %val.dbg.spill1 = alloca { i64, i64 }, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %val.dbg.spill = alloca {}, align 1
  %alloc.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %_41 = alloca i64*, align 8
  %old_layout = alloca { i64, i64 }, align 8
  %memory = alloca { i8*, i64 }, align 8
  %_14 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_13 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>", align 8
  %_6 = alloca %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>", align 8
  %new_layout = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !2690, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory, metadata !2691, metadata !DIExpression()), !dbg !2717
  store %"std::alloc::Global"* %alloc, %"std::alloc::Global"** %alloc.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %alloc.dbg.spill, metadata !2692, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout, metadata !2693, metadata !DIExpression()), !dbg !2719
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !2701, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %memory, metadata !2703, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout, metadata !2707, metadata !DIExpression()), !dbg !2722
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h01c030a1c9425b29E"(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>") dereferenceable(24) %_6, i64 %new_layout.0, i64 %new_layout.1), !dbg !2723
  br label %bb1, !dbg !2723

bb1:                                              ; preds = %start
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfc83705232c58ea3E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %_5, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_6), !dbg !2723
  br label %bb2, !dbg !2723

bb2:                                              ; preds = %bb1
  %3 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to i64*, !dbg !2723
  %_9 = load i64, i64* %3, align 8, !dbg !2723, !range !338
  switch i64 %_9, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2723

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2723

bb3:                                              ; preds = %bb2
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !2723
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %4, i32 0, i32 1, !dbg !2723
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !2723
  %val.0 = load i64, i64* %6, align 8, !dbg !2723
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !2723
  %val.1 = load i64, i64* %7, align 8, !dbg !2723, !range !1106
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 0, !dbg !2723
  store i64 %val.0, i64* %8, align 8, !dbg !2723
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %val.dbg.spill1, i32 0, i32 1, !dbg !2723
  store i64 %val.1, i64* %9, align 8, !dbg !2723
  call void @llvm.dbg.declare(metadata { i64, i64 }* %val.dbg.spill1, metadata !2697, metadata !DIExpression()), !dbg !2724
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2724
  store i64 %val.0, i64* %10, align 8, !dbg !2724
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2724
  store i64 %val.1, i64* %11, align 8, !dbg !2724
; call core::alloc::layout::Layout::size
  %_15 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2725
  br label %bb7, !dbg !2725

bb5:                                              ; preds = %bb2
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %_5 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !2726
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %12, i32 0, i32 1, !dbg !2726
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2726
  %residual.0 = load i64, i64* %14, align 8, !dbg !2726
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2726
  %residual.1 = load i64, i64* %15, align 8, !dbg !2726
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !2726
  store i64 %residual.0, i64* %16, align 8, !dbg !2726
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !2726
  store i64 %residual.1, i64* %17, align 8, !dbg !2726
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !2695, metadata !DIExpression()), !dbg !2727
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4cea48849ed67474E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !2728
  br label %bb6, !dbg !2728

bb6:                                              ; preds = %bb5
  br label %bb23, !dbg !2729

bb23:                                             ; preds = %bb13, %bb6
  br label %bb24, !dbg !2731

bb7:                                              ; preds = %bb3
; call alloc::raw_vec::alloc_guard
  call void @_ZN5alloc7raw_vec11alloc_guard17h81c978058e88b617E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_14, i64 %_15), !dbg !2732
  br label %bb8, !dbg !2732

bb8:                                              ; preds = %bb7
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf69c3a4752c71cb0E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %_13, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_14), !dbg !2732
  br label %bb9, !dbg !2732

bb9:                                              ; preds = %bb8
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to i64*, !dbg !2732
  %_17 = load i64, i64* %18, align 8, !dbg !2732, !range !338
  switch i64 %_17, label %bb11 [
    i64 0, label %bb10
    i64 1, label %bb12
  ], !dbg !2732

bb11:                                             ; preds = %bb9
  unreachable, !dbg !2732

bb10:                                             ; preds = %bb9
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to {}**, !dbg !2733
  %20 = load {}*, {}** %19, align 8, !dbg !2733
  %21 = icmp eq {}* %20, null, !dbg !2733
  %_22 = select i1 %21, i64 0, i64 1, !dbg !2733
  %22 = icmp eq i64 %_22, 1, !dbg !2733
  br i1 %22, label %bb15, label %bb14, !dbg !2733

bb12:                                             ; preds = %bb9
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %_13 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !2734
  %24 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %23, i32 0, i32 1, !dbg !2734
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 0, !dbg !2734
  %residual.02 = load i64, i64* %25, align 8, !dbg !2734
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i32 0, i32 1, !dbg !2734
  %residual.13 = load i64, i64* %26, align 8, !dbg !2734
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 0, !dbg !2734
  store i64 %residual.02, i64* %27, align 8, !dbg !2734
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill4, i32 0, i32 1, !dbg !2734
  store i64 %residual.13, i64* %28, align 8, !dbg !2734
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill4, metadata !2699, metadata !DIExpression()), !dbg !2735
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc0c7e49ea4c85f66E"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.02, i64 %residual.13), !dbg !2736
  br label %bb13, !dbg !2736

bb13:                                             ; preds = %bb12
  br label %bb23, !dbg !2737

bb24:                                             ; preds = %bb22, %bb23
  ret void, !dbg !2731

bb15:                                             ; preds = %bb10
  %29 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !2739
  %30 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %29 to { i8*, { i64, i64 } }*, !dbg !2739
  %31 = bitcast { i8*, { i64, i64 } }* %30 to i8**, !dbg !2739
  %ptr = load i8*, i8** %31, align 8, !dbg !2739, !nonnull !4
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2739
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2705, metadata !DIExpression()), !dbg !2740
  %32 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %current_memory to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !2741
  %33 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %32 to { i8*, { i64, i64 } }*, !dbg !2741
  %34 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %33, i32 0, i32 1, !dbg !2741
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 0, !dbg !2741
  %36 = load i64, i64* %35, align 8, !dbg !2741
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i32 0, i32 1, !dbg !2741
  %38 = load i64, i64* %37, align 8, !dbg !2741, !range !1106
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2741
  store i64 %36, i64* %39, align 8, !dbg !2741
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2741
  store i64 %38, i64* %40, align 8, !dbg !2741
; call core::alloc::layout::Layout::align
  %_30 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %old_layout), !dbg !2742
  br label %bb16, !dbg !2742

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2743
  %_39.0 = load i64, i64* %41, align 8, !dbg !2743
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2743
  %_39.1 = load i64, i64* %42, align 8, !dbg !2743, !range !1106
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %43 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h84e35486521aacf0E"(%"std::alloc::Global"* nonnull align 1 %alloc, i64 %_39.0, i64 %_39.1), !dbg !2744
  store { i8*, i64 } %43, { i8*, i64 }* %memory, align 8, !dbg !2744
  br label %bb20, !dbg !2744

bb20:                                             ; preds = %bb14
  br label %bb21, !dbg !2745

bb21:                                             ; preds = %bb19, %bb20
  %44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 0, !dbg !2746
  %_40.0 = load i8*, i8** %44, align 8, !dbg !2746
  %45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %memory, i32 0, i32 1, !dbg !2746
  %_40.1 = load i64, i64* %45, align 8, !dbg !2746
  %46 = bitcast i64** %_41 to { i64, i64 }**, !dbg !2747
  store { i64, i64 }* %new_layout, { i64, i64 }** %46, align 8, !dbg !2747
  %47 = load i64*, i64** %_41, align 8, !dbg !2746, !nonnull !4
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hfdf869cc5d5702ccE"(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %0, i8* %_40.0, i64 %_40.1, i64* align 8 dereferenceable(16) %47), !dbg !2746
  br label %bb22, !dbg !2746

bb16:                                             ; preds = %bb15
; call core::alloc::layout::Layout::align
  %_32 = call i64 @_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E({ i64, i64 }* align 8 dereferenceable(16) %new_layout), !dbg !2748
  br label %bb17, !dbg !2748

bb17:                                             ; preds = %bb16
  %_29 = icmp eq i64 %_30, %_32, !dbg !2742
  call void @llvm.assume(i1 %_29), !dbg !2749
  br label %bb18, !dbg !2749

bb18:                                             ; preds = %bb17
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 0, !dbg !2750
  %_36.0 = load i64, i64* %48, align 8, !dbg !2750
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout, i32 0, i32 1, !dbg !2750
  %_36.1 = load i64, i64* %49, align 8, !dbg !2750, !range !1106
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 0, !dbg !2751
  %_37.0 = load i64, i64* %50, align 8, !dbg !2751
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout, i32 0, i32 1, !dbg !2751
  %_37.1 = load i64, i64* %51, align 8, !dbg !2751, !range !1106
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %52 = call { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6632653361e170bE"(%"std::alloc::Global"* nonnull align 1 %alloc, i8* nonnull %ptr, i64 %_36.0, i64 %_36.1, i64 %_37.0, i64 %_37.1), !dbg !2752
  store { i8*, i64 } %52, { i8*, i64 }* %memory, align 8, !dbg !2752
  br label %bb19, !dbg !2752

bb19:                                             ; preds = %bb18
  br label %bb21, !dbg !2745

bb22:                                             ; preds = %bb21
  br label %bb24, !dbg !2731
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc1e1a461dffa210aE"(i64* align 8 dereferenceable(16) %_1) unnamed_addr #0 !dbg !2753 {
start:
  %_2.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %0 = bitcast i64** %_1.dbg.spill to { i64, i64 }**
  %1 = load { i64, i64 }*, { i64, i64 }** %0, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !2757, metadata !DIExpression(DW_OP_deref)), !dbg !2759
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %_2.dbg.spill, metadata !2758, metadata !DIExpression()), !dbg !2760
  %2 = bitcast i64* %_1 to { i64, i64 }*, !dbg !2761
  %3 = bitcast i64* %_1 to { i64, i64 }*, !dbg !2761
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !2761
  %_4.0 = load i64, i64* %4, align 8, !dbg !2761
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !2761
  %_4.1 = load i64, i64* %5, align 8, !dbg !2761, !range !1106
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !2762
  store i64 %_4.0, i64* %6, align 8, !dbg !2762
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2762
  store i64 %_4.1, i64* %7, align 8, !dbg !2762
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !2762
  %9 = load i64, i64* %8, align 8, !dbg !2762
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !2762
  %11 = load i64, i64* %10, align 8, !dbg !2762
; call <T as core::convert::Into<U>>::into
  %12 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h08cfa515d1644ebaE"(i64 %9, i64 %11), !dbg !2762
  %13 = extractvalue { i64, i64 } %12, 0, !dbg !2762
  %14 = extractvalue { i64, i64 } %12, 1, !dbg !2762
  br label %bb1, !dbg !2762

bb1:                                              ; preds = %start
  %15 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !2763
  %16 = insertvalue { i64, i64 } %15, i64 %14, 1, !dbg !2763
  ret { i64, i64 } %16, !dbg !2763
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf908f8c73d0bd43fE"() unnamed_addr #0 !dbg !2764 {
start:
  %_2.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]", align 1
  %0 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]"* %_1.dbg.spill, metadata !2768, metadata !DIExpression()), !dbg !2770
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %_2.dbg.spill, metadata !2769, metadata !DIExpression()), !dbg !2771
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2772
  store i64 0, i64* %1, align 8, !dbg !2772
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !2773
  %3 = load i64, i64* %2, align 8, !dbg !2773
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !2773
  %5 = load i64, i64* %4, align 8, !dbg !2773
  %6 = insertvalue { i64, i64 } undef, i64 %3, 0, !dbg !2773
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1, !dbg !2773
  ret { i64, i64 } %7, !dbg !2773
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec14handle_reserve17hc650e120b1fbb9b7E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %result) unnamed_addr #0 !dbg !2774 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %_3 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  %_2 = alloca %"std::result::Result<(), std::collections::TryReserveErrorKind>", align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %result, metadata !2778, metadata !DIExpression()), !dbg !2781
  %0 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %_3 to i8*, !dbg !2782
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %result to i8*, !dbg !2782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false), !dbg !2782
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17he453e2481c596369E"(%"std::result::Result<(), std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveErrorKind>") dereferenceable(24) %_2, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_3), !dbg !2782
  br label %bb1, !dbg !2782

bb1:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to i64*, !dbg !2782
  %_6 = load i64, i64* %2, align 8, !dbg !2782, !range !338
  switch i64 %_6, label %bb4 [
    i64 0, label %bb2
    i64 1, label %bb3
  ], !dbg !2783

bb4:                                              ; preds = %bb3, %bb1
  unreachable, !dbg !2782

bb2:                                              ; preds = %bb1
  ret void, !dbg !2784

bb3:                                              ; preds = %bb1
  %3 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !2782
  %4 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %3, i32 0, i32 1, !dbg !2782
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i32 0, i32 1, !dbg !2782
  %6 = load i64, i64* %5, align 8, !dbg !2782
  %7 = icmp eq i64 %6, 0, !dbg !2782
  %_5 = select i1 %7, i64 0, i64 1, !dbg !2782
  switch i64 %_5, label %bb4 [
    i64 0, label %bb5
    i64 1, label %bb6
  ], !dbg !2783

bb5:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17he8700ca29a42fb1cE(), !dbg !2785
  unreachable, !dbg !2785

bb6:                                              ; preds = %bb3
  %8 = bitcast %"std::result::Result<(), std::collections::TryReserveErrorKind>"* %_2 to %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"*, !dbg !2786
  %9 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err", %"std::result::Result<(), std::collections::TryReserveErrorKind>::Err"* %8, i32 0, i32 1, !dbg !2786
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !2786
  %layout.0 = load i64, i64* %10, align 8, !dbg !2786
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !2786
  %layout.1 = load i64, i64* %11, align 8, !dbg !2786, !range !1106
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2786
  store i64 %layout.0, i64* %12, align 8, !dbg !2786
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2786
  store i64 %layout.1, i64* %13, align 8, !dbg !2786
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2779, metadata !DIExpression()), !dbg !2787
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17hba238f19242600cdE(i64 %layout.0, i64 %layout.1), !dbg !2788
  unreachable, !dbg !2788
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h9b49ae39cdd766b7E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !2789 {
start:
  %_1.dbg.spill = alloca %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]", align 1
  %e = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata %"[closure@alloc::raw_vec::handle_reserve::{closure#0}]"* %_1.dbg.spill, metadata !2794, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e, metadata !2793, metadata !DIExpression()), !dbg !2796
; call alloc::collections::TryReserveError::kind
  %4 = call { i64, i64 } @_ZN5alloc11collections15TryReserveError4kind17h539509a173ce81a8E({ i64, i64 }* align 8 dereferenceable(16) %e), !dbg !2797
  %5 = extractvalue { i64, i64 } %4, 0, !dbg !2797
  %6 = extractvalue { i64, i64 } %4, 1, !dbg !2797
  br label %bb1, !dbg !2797

bb1:                                              ; preds = %start
  %7 = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !2798
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1, !dbg !2798
  ret { i64, i64 } %8, !dbg !2798
}

; alloc::raw_vec::RawVec<T,A>::needs_to_grow
; Function Attrs: nounwind
define zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17had2d43f97c011768E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !2799 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i1 = alloca i64, align 8
  %self.dbg.spill.i = alloca { i8*, i64 }*, align 8
  %0 = alloca i64, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2803, metadata !DIExpression()), !dbg !2806
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2804, metadata !DIExpression()), !dbg !2807
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2805, metadata !DIExpression()), !dbg !2808
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill.i, metadata !2403, metadata !DIExpression()), !dbg !2809
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2811
  %2 = load i64, i64* %1, align 8, !dbg !2811
  store i64 %2, i64* %0, align 8, !dbg !2811
  %3 = load i64, i64* %0, align 8, !dbg !2812
  br label %bb1, !dbg !2813

bb1:                                              ; preds = %start
  store i64 %3, i64* %self.dbg.spill.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i1, metadata !1737, metadata !DIExpression()), !dbg !2814
  store i64 %len, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !1740, metadata !DIExpression()), !dbg !2816
  %4 = sub i64 %3, %len, !dbg !2817
  br label %bb2, !dbg !2813

bb2:                                              ; preds = %bb1
  %5 = icmp ugt i64 %additional, %4, !dbg !2818
  ret i1 %5, !dbg !2819
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb8413c8d469ac08fE"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !2820 {
start:
  %1 = alloca i64, align 8
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %size.dbg.spill = alloca i64, align 8
  %align.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_13 = alloca { i8*, { i64, i64 } }, align 8
  %_2 = alloca i8, align 1
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2824, metadata !DIExpression()), !dbg !2831
  br label %bb4, !dbg !2832

bb4:                                              ; preds = %start
  %2 = icmp eq i64 1, 0, !dbg !2832
  br i1 %2, label %bb1, label %bb2, !dbg !2832

bb1:                                              ; preds = %bb4
  store i8 1, i8* %_2, align 1, !dbg !2832
  br label %bb3, !dbg !2832

bb2:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2833
  %_5 = load i64, i64* %3, align 8, !dbg !2833
  %_4 = icmp eq i64 %_5, 0, !dbg !2833
  %4 = zext i1 %_4 to i8, !dbg !2832
  store i8 %4, i8* %_2, align 1, !dbg !2832
  br label %bb3, !dbg !2832

bb3:                                              ; preds = %bb1, %bb2
  %5 = load i8, i8* %_2, align 1, !dbg !2832, !range !978
  %6 = trunc i8 %5 to i1, !dbg !2832
  br i1 %6, label %bb5, label %bb6, !dbg !2832

bb6:                                              ; preds = %bb3
  store i64 1, i64* %1, align 8, !dbg !2834
  %7 = load i64, i64* %1, align 8, !dbg !2834
  store i64 %7, i64* %align.dbg.spill, align 8, !dbg !2836
  call void @llvm.dbg.declare(metadata i64* %align.dbg.spill, metadata !2825, metadata !DIExpression()), !dbg !2837
  br label %bb7, !dbg !2836

bb5:                                              ; preds = %bb3
  %8 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to {}**, !dbg !2838
  store {}* null, {}** %8, align 8, !dbg !2838
  br label %bb12, !dbg !2839

bb12:                                             ; preds = %bb11, %bb5
  ret void, !dbg !2840

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !2841

bb8:                                              ; preds = %bb7
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2842
  %_9 = load i64, i64* %9, align 8, !dbg !2842
  %size = mul i64 1, %_9, !dbg !2841
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !2841
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !2827, metadata !DIExpression()), !dbg !2843
; call core::alloc::layout::Layout::from_size_align_unchecked
  %10 = call { i64, i64 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E(i64 %size, i64 %7), !dbg !2844
  %layout.0 = extractvalue { i64, i64 } %10, 0, !dbg !2844
  %layout.1 = extractvalue { i64, i64 } %10, 1, !dbg !2844
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0, !dbg !2844
  store i64 %layout.0, i64* %11, align 8, !dbg !2844
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1, !dbg !2844
  store i64 %layout.1, i64* %12, align 8, !dbg !2844
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !2829, metadata !DIExpression()), !dbg !2845
  br label %bb9, !dbg !2844

bb9:                                              ; preds = %bb8
  %13 = bitcast { i8*, i64 }* %self to i8**, !dbg !2846
  %_16 = load i8*, i8** %13, align 8, !dbg !2846, !nonnull !4
; call core::ptr::unique::Unique<T>::cast
  %_15 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h17a3df7a1de66d23E"(i8* nonnull %_16), !dbg !2846
  br label %bb10, !dbg !2846

bb10:                                             ; preds = %bb9
; call <T as core::convert::Into<U>>::into
  %_14 = call nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha6f354cd956067a1E"(i8* nonnull %_15), !dbg !2846
  br label %bb11, !dbg !2846

bb11:                                             ; preds = %bb10
  %14 = bitcast { i8*, { i64, i64 } }* %_13 to i8**, !dbg !2847
  store i8* %_14, i8** %14, align 8, !dbg !2847
  %15 = getelementptr inbounds { i8*, { i64, i64 } }, { i8*, { i64, i64 } }* %_13, i32 0, i32 1, !dbg !2847
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !2847
  store i64 %layout.0, i64* %16, align 8, !dbg !2847
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !2847
  store i64 %layout.1, i64* %17, align 8, !dbg !2847
  %18 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* %0 to %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"*, !dbg !2848
  %19 = bitcast %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>::Some"* %18 to { i8*, { i64, i64 } }*, !dbg !2848
  %20 = bitcast { i8*, { i64, i64 } }* %19 to i8*, !dbg !2848
  %21 = bitcast { i8*, { i64, i64 } }* %_13 to i8*, !dbg !2848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !2848
  br label %bb12, !dbg !2839
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h8be8d45b573286caE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, { i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #1 !dbg !2849 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %val.dbg.spill6 = alloca { i8*, i64 }, align 8
  %residual.dbg.spill5 = alloca { i64, i64 }, align 8
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %cap.dbg.spill2 = alloca i64, align 8
  %cap.dbg.spill = alloca i64, align 8
  %required_cap.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %residual.dbg.spill = alloca { i64, i64 }, align 8
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  %_30 = alloca %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>", align 8
  %_28 = alloca %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>", align 8
  %_27 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>", align 8
  %_13 = alloca { i64, i64 }, align 8
  %_9 = alloca %"std::result::Result<usize, std::collections::TryReserveErrorKind>", align 8
  %_8 = alloca %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>", align 8
  %_6 = alloca { i64, i64 }, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2854, metadata !DIExpression()), !dbg !2875
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2855, metadata !DIExpression()), !dbg !2876
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2856, metadata !DIExpression()), !dbg !2877
  br label %bb1, !dbg !2878

bb1:                                              ; preds = %start
  %1 = icmp eq i64 1, 0, !dbg !2878
  br i1 %1, label %bb2, label %bb4, !dbg !2878

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !2879
  store i64 0, i64* %2, align 8, !dbg !2879
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !2879
  %4 = load i64, i64* %3, align 8, !dbg !2879
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !2879
  %6 = load i64, i64* %5, align 8, !dbg !2879
; call <T as core::convert::Into<U>>::into
  %7 = call { i64, i64 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h08cfa515d1644ebaE"(i64 %4, i64 %6), !dbg !2879
  %_5.0 = extractvalue { i64, i64 } %7, 0, !dbg !2879
  %_5.1 = extractvalue { i64, i64 } %7, 1, !dbg !2879
  br label %bb3, !dbg !2879

bb4:                                              ; preds = %bb1
; call core::num::<impl usize>::checked_add
  %8 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h4471947358403de9E"(i64 %len, i64 %additional), !dbg !2880
  %_10.0 = extractvalue { i64, i64 } %8, 0, !dbg !2880
  %_10.1 = extractvalue { i64, i64 } %8, 1, !dbg !2880
  br label %bb5, !dbg !2880

bb5:                                              ; preds = %bb4
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2881
  store i64 0, i64* %9, align 8, !dbg !2881
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 0, !dbg !2880
  %11 = load i64, i64* %10, align 8, !dbg !2880
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_13, i32 0, i32 1, !dbg !2880
  %13 = load i64, i64* %12, align 8, !dbg !2880
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h8c6e6ca43fdffaacE"(%"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture sret(%"std::result::Result<usize, std::collections::TryReserveErrorKind>") dereferenceable(24) %_9, i64 %_10.0, i64 %_10.1, i64 %11, i64 %13), !dbg !2880
  br label %bb6, !dbg !2880

bb6:                                              ; preds = %bb5
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h77c5012d43a3ecadE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %_8, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %_9), !dbg !2880
  br label %bb7, !dbg !2880

bb7:                                              ; preds = %bb6
  %14 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to i64*, !dbg !2880
  %_14 = load i64, i64* %14, align 8, !dbg !2880, !range !338
  switch i64 %_14, label %bb9 [
    i64 0, label %bb8
    i64 1, label %bb10
  ], !dbg !2880

bb9:                                              ; preds = %bb7
  unreachable, !dbg !2880

bb8:                                              ; preds = %bb7
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !2880
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %15, i32 0, i32 1, !dbg !2880
  %val = load i64, i64* %16, align 8, !dbg !2880
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !2880
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !2861, metadata !DIExpression()), !dbg !2882
  store i64 %val, i64* %required_cap.dbg.spill, align 8, !dbg !2882
  call void @llvm.dbg.declare(metadata i64* %required_cap.dbg.spill, metadata !2857, metadata !DIExpression()), !dbg !2883
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2884
  %_20 = load i64, i64* %17, align 8, !dbg !2884
  %_19 = mul i64 %_20, 2, !dbg !2884
; call core::cmp::max
  %cap = call i64 @_ZN4core3cmp3max17h7c4db88abffc71acE(i64 %_19, i64 %val), !dbg !2885
  store i64 %cap, i64* %cap.dbg.spill, align 8, !dbg !2885
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill, metadata !2863, metadata !DIExpression()), !dbg !2886
  br label %bb12, !dbg !2885

bb10:                                             ; preds = %bb7
  %18 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %_8 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !2887
  %19 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %18, i32 0, i32 1, !dbg !2887
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !2887
  %residual.0 = load i64, i64* %20, align 8, !dbg !2887
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !2887
  %residual.1 = load i64, i64* %21, align 8, !dbg !2887
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 0, !dbg !2887
  store i64 %residual.0, i64* %22, align 8, !dbg !2887
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill, i32 0, i32 1, !dbg !2887
  store i64 %residual.1, i64* %23, align 8, !dbg !2887
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill, metadata !2859, metadata !DIExpression()), !dbg !2888
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h91e7ed57393c166aE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.0, i64 %residual.1), !dbg !2889
  br label %bb11, !dbg !2889

bb11:                                             ; preds = %bb10
  br label %bb23, !dbg !2890

bb23:                                             ; preds = %bb21, %bb11
  br label %bb24, !dbg !2890

bb12:                                             ; preds = %bb8
; call core::cmp::max
  %cap1 = call i64 @_ZN4core3cmp3max17h7c4db88abffc71acE(i64 8, i64 %cap), !dbg !2892
  store i64 %cap1, i64* %cap.dbg.spill2, align 8, !dbg !2892
  call void @llvm.dbg.declare(metadata i64* %cap.dbg.spill2, metadata !2865, metadata !DIExpression()), !dbg !2893
  br label %bb13, !dbg !2892

bb13:                                             ; preds = %bb12
; call core::alloc::layout::Layout::array
  %24 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array17h953855d8a6ad270aE(i64 %cap1), !dbg !2894
  %new_layout.0 = extractvalue { i64, i64 } %24, 0, !dbg !2894
  %new_layout.1 = extractvalue { i64, i64 } %24, 1, !dbg !2894
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0, !dbg !2894
  store i64 %new_layout.0, i64* %25, align 8, !dbg !2894
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1, !dbg !2894
  store i64 %new_layout.1, i64* %26, align 8, !dbg !2894
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !2867, metadata !DIExpression()), !dbg !2895
  br label %bb14, !dbg !2894

bb14:                                             ; preds = %bb13
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb8413c8d469ac08fE"(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture sret(%"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>") dereferenceable(24) %_30, { i8*, i64 }* align 8 dereferenceable(16) %self), !dbg !2896
  br label %bb15, !dbg !2896

bb15:                                             ; preds = %bb14
  %_33 = bitcast { i8*, i64 }* %self to %"std::alloc::Global"*, !dbg !2897
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17hbbb78aa164b6c003E(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>") dereferenceable(24) %_28, i64 %new_layout.0, i64 %new_layout.1, %"std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>"* noalias nocapture dereferenceable(24) %_30, %"std::alloc::Global"* nonnull align 1 %_33), !dbg !2898
  br label %bb16, !dbg !2898

bb16:                                             ; preds = %bb15
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8102a282bb5f570cE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %_27, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_28), !dbg !2898
  br label %bb17, !dbg !2898

bb17:                                             ; preds = %bb16
  %27 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to i64*, !dbg !2898
  %_34 = load i64, i64* %27, align 8, !dbg !2898, !range !338
  switch i64 %_34, label %bb19 [
    i64 0, label %bb18
    i64 1, label %bb20
  ], !dbg !2898

bb19:                                             ; preds = %bb17
  unreachable, !dbg !2898

bb18:                                             ; preds = %bb17
  %28 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !2898
  %29 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %28, i32 0, i32 1, !dbg !2898
  %30 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 0, !dbg !2898
  %val.0 = load i8*, i8** %30, align 8, !dbg !2898, !nonnull !4
  %31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %29, i32 0, i32 1, !dbg !2898
  %val.1 = load i64, i64* %31, align 8, !dbg !2898
  %32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 0, !dbg !2898
  store i8* %val.0, i8** %32, align 8, !dbg !2898
  %33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %val.dbg.spill6, i32 0, i32 1, !dbg !2898
  store i64 %val.1, i64* %33, align 8, !dbg !2898
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %val.dbg.spill6, metadata !2873, metadata !DIExpression()), !dbg !2899
  %34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0, !dbg !2899
  store i8* %val.0, i8** %34, align 8, !dbg !2899
  %35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1, !dbg !2899
  store i64 %val.1, i64* %35, align 8, !dbg !2899
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2869, metadata !DIExpression()), !dbg !2900
; call alloc::raw_vec::RawVec<T,A>::set_ptr
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h063dd788d55ce58cE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %val.0, i64 %val.1), !dbg !2901
  br label %bb22, !dbg !2901

bb20:                                             ; preds = %bb17
  %36 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %_27 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !2902
  %37 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %36, i32 0, i32 1, !dbg !2902
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 0, !dbg !2902
  %residual.03 = load i64, i64* %38, align 8, !dbg !2902
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %37, i32 0, i32 1, !dbg !2902
  %residual.14 = load i64, i64* %39, align 8, !dbg !2902
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 0, !dbg !2902
  store i64 %residual.03, i64* %40, align 8, !dbg !2902
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %residual.dbg.spill5, i32 0, i32 1, !dbg !2902
  store i64 %residual.14, i64* %41, align 8, !dbg !2902
  call void @llvm.dbg.declare(metadata { i64, i64 }* %residual.dbg.spill5, metadata !2871, metadata !DIExpression()), !dbg !2903
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6aebebef758041deE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %0, i64 %residual.03, i64 %residual.14), !dbg !2904
  br label %bb21, !dbg !2904

bb21:                                             ; preds = %bb20
  br label %bb23, !dbg !2905

bb24:                                             ; preds = %bb3, %bb22, %bb23
  ret void, !dbg !2907

bb22:                                             ; preds = %bb18
  %42 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !2908
  store i64 0, i64* %42, align 8, !dbg !2908
  br label %bb24, !dbg !2907

bb3:                                              ; preds = %bb2
  %43 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !2909
  %44 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %43, i32 0, i32 1, !dbg !2909
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 0, !dbg !2909
  store i64 %_5.0, i64* %45, align 8, !dbg !2909
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %44, i32 0, i32 1, !dbg !2909
  store i64 %_5.1, i64* %46, align 8, !dbg !2909
  %47 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %0 to i64*, !dbg !2909
  store i64 1, i64* %47, align 8, !dbg !2909
  br label %bb24, !dbg !2890
}

; alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
; Function Attrs: nounwind
define i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc65ab8c025986f37E"(i64 %excess) unnamed_addr #1 !dbg !2910 {
start:
  %excess.dbg.spill = alloca i64, align 8
  store i64 %excess, i64* %excess.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %excess.dbg.spill, metadata !2914, metadata !DIExpression()), !dbg !2922
  br label %bb1, !dbg !2923

bb1:                                              ; preds = %start
  %_7 = icmp eq i64 1, 0, !dbg !2924
  %0 = call i1 @llvm.expect.i1(i1 %_7, i1 false), !dbg !2924
  br i1 %0, label %panic, label %bb2, !dbg !2924

bb2:                                              ; preds = %bb1
  %1 = udiv i64 %excess, 1, !dbg !2924
  ret i64 %1, !dbg !2925

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([25 x i8]* @str.1 to [0 x i8]*), i64 25, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1065 to %"std::panic::Location"*)), !dbg !2924
  unreachable, !dbg !2924
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h698bdd8dcb7f722fE"({ i8*, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2926 {
start:
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2930, metadata !DIExpression()), !dbg !2931
  %0 = bitcast { i8*, i64 }* %self to i8**, !dbg !2932
  %_2 = load i8*, i8** %0, align 8, !dbg !2932, !nonnull !4
; call core::ptr::unique::Unique<T>::as_ptr
  %1 = call i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9be4a18b8b1d4657E"(i8* nonnull %_2), !dbg !2932
  br label %bb1, !dbg !2932

bb1:                                              ; preds = %start
  ret i8* %1, !dbg !2933
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17heca5afb0eba90d72E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional) unnamed_addr #0 !dbg !2934 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2938, metadata !DIExpression()), !dbg !2941
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2939, metadata !DIExpression()), !dbg !2942
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2940, metadata !DIExpression()), !dbg !2943
; call alloc::raw_vec::RawVec<T,A>::needs_to_grow
  %_4 = call zeroext i1 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17had2d43f97c011768E"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !2944
  br label %bb1, !dbg !2944

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb4, !dbg !2944

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !2945

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hc345d6d28bdb066cE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i64 %len, i64 %additional), !dbg !2946
  br label %bb3, !dbg !2946

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2947
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hc345d6d28bdb066cE"({ i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional) unnamed_addr #3 !dbg !2948 {
start:
  %additional.dbg.spill = alloca i64, align 8
  %len.dbg.spill = alloca i64, align 8
  %slf.dbg.spill = alloca { i8*, i64 }*, align 8
  %_5 = alloca %"std::result::Result<(), std::collections::TryReserveError>", align 8
  store { i8*, i64 }* %slf, { i8*, i64 }** %slf.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %slf.dbg.spill, metadata !2952, metadata !DIExpression()), !dbg !2955
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2953, metadata !DIExpression()), !dbg !2956
  store i64 %additional, i64* %additional.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %additional.dbg.spill, metadata !2954, metadata !DIExpression()), !dbg !2957
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h8be8d45b573286caE"(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture sret(%"std::result::Result<(), std::collections::TryReserveError>") dereferenceable(24) %_5, { i8*, i64 }* align 8 dereferenceable(16) %slf, i64 %len, i64 %additional), !dbg !2958
  br label %bb1, !dbg !2958

bb1:                                              ; preds = %start
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17hc650e120b1fbb9b7E(%"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %_5), !dbg !2959
  br label %bb2, !dbg !2959

bb2:                                              ; preds = %bb1
  ret void, !dbg !2960
}

; alloc::raw_vec::RawVec<T,A>::set_ptr
; Function Attrs: nounwind
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h063dd788d55ce58cE"({ i8*, i64 }* align 8 dereferenceable(16) %self, i8* nonnull %ptr.0, i64 %ptr.1) unnamed_addr #1 !dbg !2961 {
start:
  %ptr.dbg.spill = alloca { i8*, i64 }, align 8
  %self.dbg.spill = alloca { i8*, i64 }*, align 8
  store { i8*, i64 }* %self, { i8*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }** %self.dbg.spill, metadata !2965, metadata !DIExpression()), !dbg !2967
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store i8* %ptr.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %ptr.dbg.spill, metadata !2966, metadata !DIExpression()), !dbg !2968
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe97c25a0260464bE"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !2969
  br label %bb1, !dbg !2969

bb1:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4fc818808fb581c5E"(i8* nonnull %_5), !dbg !2969
  br label %bb2, !dbg !2969

bb2:                                              ; preds = %bb1
; call core::ptr::unique::Unique<T>::new_unchecked
  %_3 = call nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc9d96932e2f47dd5E"(i8* %_4), !dbg !2970
  br label %bb3, !dbg !2970

bb3:                                              ; preds = %bb2
  %2 = bitcast { i8*, i64 }* %self to i8**, !dbg !2971
  store i8* %_3, i8** %2, align 8, !dbg !2971
; call core::ptr::non_null::NonNull<[T]>::len
  %_8 = call i64 @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17hff0f99f4b5231b1aE"(i8* nonnull %ptr.0, i64 %ptr.1), !dbg !2972
  br label %bb4, !dbg !2972

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::RawVec<T,A>::capacity_from_bytes
  %_7 = call i64 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc65ab8c025986f37E"(i64 %_8), !dbg !2973
  br label %bb5, !dbg !2973

bb5:                                              ; preds = %bb4
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !2974
  store i64 %_7, i64* %3, align 8, !dbg !2974
  ret void, !dbg !2975
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hb5dcd020ae9ba376E"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %0, i64 %1) unnamed_addr #0 !dbg !2976 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  %layout = alloca { i64, i64 }, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0
  store i64 %0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1
  store i64 %1, i64* %3, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2981, metadata !DIExpression()), !dbg !2984
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2982, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout, metadata !2983, metadata !DIExpression()), !dbg !2986
; call core::alloc::layout::Layout::size
  %_4 = call i64 @_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E({ i64, i64 }* align 8 dereferenceable(16) %layout), !dbg !2987
  br label %bb1, !dbg !2987

bb1:                                              ; preds = %start
  %4 = icmp eq i64 %_4, 0, !dbg !2987
  br i1 %4, label %bb5, label %bb2, !dbg !2987

bb5:                                              ; preds = %bb1
  br label %bb6, !dbg !2988

bb2:                                              ; preds = %bb1
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull %ptr), !dbg !2989
  br label %bb3, !dbg !2989

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 0, !dbg !2990
  %_8.0 = load i64, i64* %5, align 8, !dbg !2990
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout, i32 0, i32 1, !dbg !2990
  %_8.1 = load i64, i64* %6, align 8, !dbg !2990, !range !1106
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17heb0da81b37f5244dE(i8* %_6, i64 %_8.0, i64 %_8.1), !dbg !2991
  br label %bb4, !dbg !2991

bb4:                                              ; preds = %bb3
  br label %bb6, !dbg !2988

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !2992
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6632653361e170bE"(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 !dbg !2993 {
start:
  %new_layout.dbg.spill = alloca { i64, i64 }, align 8
  %old_layout.dbg.spill = alloca { i64, i64 }, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !2997, metadata !DIExpression()), !dbg !3001
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2998, metadata !DIExpression()), !dbg !3002
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 0
  store i64 %old_layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %old_layout.dbg.spill, i32 0, i32 1
  store i64 %old_layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %old_layout.dbg.spill, metadata !2999, metadata !DIExpression()), !dbg !3003
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 0
  store i64 %new_layout.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %new_layout.dbg.spill, i32 0, i32 1
  store i64 %new_layout.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %new_layout.dbg.spill, metadata !3000, metadata !DIExpression()), !dbg !3004
; call alloc::alloc::Global::grow_impl
  %4 = call { i8*, i64 } @_ZN5alloc5alloc6Global9grow_impl17hda0541a69333da36E(%"std::alloc::Global"* nonnull align 1 %self, i8* nonnull %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false), !dbg !3005
  %5 = extractvalue { i8*, i64 } %4, 0, !dbg !3005
  %6 = extractvalue { i8*, i64 } %4, 1, !dbg !3005
  br label %bb1, !dbg !3005

bb1:                                              ; preds = %start
  %7 = insertvalue { i8*, i64 } undef, i8* %5, 0, !dbg !3006
  %8 = insertvalue { i8*, i64 } %7, i64 %6, 1, !dbg !3006
  ret { i8*, i64 } %8, !dbg !3006
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h84e35486521aacf0E"(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 !dbg !3007 {
start:
  %layout.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca %"std::alloc::Global"*, align 8
  store %"std::alloc::Global"* %self, %"std::alloc::Global"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::alloc::Global"** %self.dbg.spill, metadata !3011, metadata !DIExpression()), !dbg !3013
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 0
  store i64 %layout.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %layout.dbg.spill, i32 0, i32 1
  store i64 %layout.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %layout.dbg.spill, metadata !3012, metadata !DIExpression()), !dbg !3014
; call alloc::alloc::Global::alloc_impl
  %2 = call { i8*, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h3cd61ca2b5ad4fc1E(%"std::alloc::Global"* nonnull align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false), !dbg !3015
  %3 = extractvalue { i8*, i64 } %2, 0, !dbg !3015
  %4 = extractvalue { i8*, i64 } %2, 1, !dbg !3015
  br label %bb1, !dbg !3015

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i64 } undef, i8* %3, 0, !dbg !3016
  %6 = insertvalue { i8*, i64 } %5, i64 %4, 1, !dbg !3016
  ret { i8*, i64 } %6, !dbg !3016
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hd396fa0e4196c08dE"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3017 {
start:
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3020, metadata !DIExpression()), !dbg !3021
  %0 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0, !dbg !3021
  %1 = load i64, i64* %0, align 8, !dbg !3021
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3021
  %3 = load i64, i64* %2, align 8, !dbg !3021, !range !1106
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !3022
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1, !dbg !3022
  ret { i64, i64 } %5, !dbg !3022
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfe8fe4e88735ca69E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3023 {
start:
  %v.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !3052, metadata !DIExpression()), !dbg !3055
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !3056
  %_2 = load i64, i64* %5, align 8, !dbg !3056, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3057

bb2:                                              ; preds = %start
  unreachable, !dbg !3056

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !3058
  store i64 1, i64* %6, align 8, !dbg !3058
  br label %bb4, !dbg !3059

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"std::option::Option<u64>::Some"*, !dbg !3060
  %8 = getelementptr inbounds %"std::option::Option<u64>::Some", %"std::option::Option<u64>::Some"* %7, i32 0, i32 1, !dbg !3060
  %v = load i64, i64* %8, align 8, !dbg !3060
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3060
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3053, metadata !DIExpression()), !dbg !3061
  %9 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"*, !dbg !3062
  %10 = getelementptr inbounds %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue", %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"* %9, i32 0, i32 1, !dbg !3062
  store i64 %v, i64* %10, align 8, !dbg !3062
  %11 = bitcast { i64, i64 }* %2 to i64*, !dbg !3062
  store i64 0, i64* %11, align 8, !dbg !3062
  br label %bb4, !dbg !3063

bb4:                                              ; preds = %bb1, %bb3
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3064
  %13 = load i64, i64* %12, align 8, !dbg !3064, !range !338
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3064
  %15 = load i64, i64* %14, align 8, !dbg !3064
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !3064
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !3064
  ret { i64, i64 } %17, !dbg !3064
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17had00e079f95a9eb0E"({ i64, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3065 {
start:
  %__self_1.dbg.spill = alloca {}*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_2 = alloca i64*, align 8
  %0 = alloca { i64, i64 }, align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3071, metadata !DIExpression()), !dbg !3075
  %1 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3075
  store { i64, i64 }* %self, { i64, i64 }** %1, align 8, !dbg !3075
  %2 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3075
  %3 = load { i64, i64 }*, { i64, i64 }** %2, align 8, !dbg !3075, !nonnull !4
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3075
  %5 = load i64, i64* %4, align 8, !dbg !3075
  %6 = icmp eq i64 %5, 0, !dbg !3075
  %_4 = select i1 %6, i64 0, i64 1, !dbg !3075
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3075

bb2:                                              ; preds = %start
  unreachable, !dbg !3075

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3075
  store i64 0, i64* %7, align 8, !dbg !3075
  br label %bb6, !dbg !3075

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3076
  %__self_0 = load { i64, i64 }*, { i64, i64 }** %8, align 8, !dbg !3076, !nonnull !4
  store { i64, i64 }* %__self_0, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !3076
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !3072, metadata !DIExpression()), !dbg !3077
  %9 = bitcast i64** %_2 to { i64, i64 }**, !dbg !3078
  %10 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !dbg !3078, !nonnull !4
  %__self_1 = bitcast { i64, i64 }* %10 to {}*, !dbg !3078
  store {}* %__self_1, {}** %__self_1.dbg.spill, align 8, !dbg !3078
  call void @llvm.dbg.declare(metadata {}** %__self_1.dbg.spill, metadata !3074, metadata !DIExpression()), !dbg !3079
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %11 = call { i64, i64 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hd396fa0e4196c08dE"({ i64, i64 }* align 8 dereferenceable(16) %__self_0), !dbg !3077
  %_7.0 = extractvalue { i64, i64 } %11, 0, !dbg !3077
  %_7.1 = extractvalue { i64, i64 } %11, 1, !dbg !3077
  br label %bb4, !dbg !3077

bb4:                                              ; preds = %bb1
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h1c211bccca8199c2E({}* nonnull align 1 %__self_1), !dbg !3079
  br label %bb5, !dbg !3079

bb5:                                              ; preds = %bb4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3080
  store i64 %_7.0, i64* %12, align 8, !dbg !3080
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3080
  store i64 %_7.1, i64* %13, align 8, !dbg !3080
  br label %bb6, !dbg !3081

bb6:                                              ; preds = %bb3, %bb5
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3082
  %15 = load i64, i64* %14, align 8, !dbg !3082
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3082
  %17 = load i64, i64* %16, align 8, !dbg !3082
  %18 = insertvalue { i64, i64 } undef, i64 %15, 0, !dbg !3082
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1, !dbg !3082
  ret { i64, i64 } %19, !dbg !3082
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define i8* @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29ca9301afe2ce77E"(i8* %0) unnamed_addr #0 !dbg !3083 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !3103, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !3106, metadata !DIExpression()), !dbg !3109
  %2 = bitcast i8** %self to {}**, !dbg !3110
  %3 = load {}*, {}** %2, align 8, !dbg !3110
  %4 = icmp eq {}* %3, null, !dbg !3110
  %_2 = select i1 %4, i64 1, i64 0, !dbg !3110
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3111

bb2:                                              ; preds = %start
  unreachable, !dbg !3110

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !3112, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3112
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3104, metadata !DIExpression()), !dbg !3113
  store i8* %v, i8** %1, align 8, !dbg !3114
  br label %bb4, !dbg !3115

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !3116
  %6 = bitcast i8** %1 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"*, !dbg !3117
  %7 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>::Break"* %6 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !3117
  %8 = bitcast i8** %1 to {}**, !dbg !3117
  store {}* null, {}** %8, align 8, !dbg !3117
  br label %bb4, !dbg !3118

bb4:                                              ; preds = %bb3, %bb1
  %9 = load i8*, i8** %1, align 8, !dbg !3119
  ret i8* %9, !dbg !3119
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i8*, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c9c748e1807e59dE"(i8* %0, i64 %1) unnamed_addr #0 !dbg !3120 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca %"std::alloc::AllocError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err", align 1
  %2 = alloca { i8*, i64 }, align 8
  %self = alloca { i8*, i64 }, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %self, metadata !3138, metadata !DIExpression()), !dbg !3143
  call void @llvm.dbg.declare(metadata %"std::alloc::AllocError"* %e.dbg.spill, metadata !3141, metadata !DIExpression()), !dbg !3144
  %5 = bitcast { i8*, i64 }* %self to {}**, !dbg !3145
  %6 = load {}*, {}** %5, align 8, !dbg !3145
  %7 = icmp eq {}* %6, null, !dbg !3145
  %_2 = select i1 %7, i64 1, i64 0, !dbg !3145
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3146

bb2:                                              ; preds = %start
  unreachable, !dbg !3145

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 0, !dbg !3147
  %v.0 = load i8*, i8** %8, align 8, !dbg !3147, !nonnull !4
  %9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %self, i32 0, i32 1, !dbg !3147
  %v.1 = load i64, i64* %9, align 8, !dbg !3147
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3147
  store i8* %v.0, i8** %10, align 8, !dbg !3147
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3147
  store i64 %v.1, i64* %11, align 8, !dbg !3147
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !3139, metadata !DIExpression()), !dbg !3148
  %12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3149
  store i8* %v.0, i8** %12, align 8, !dbg !3149
  %13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3149
  store i64 %v.1, i64* %13, align 8, !dbg !3149
  br label %bb4, !dbg !3150

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"* %_6 to %"std::alloc::AllocError"*, !dbg !3151
  %15 = bitcast { i8*, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3152
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::AllocError>::Err"*, !dbg !3152
  %17 = bitcast { i8*, i64 }* %2 to {}**, !dbg !3152
  store {}* null, {}** %17, align 8, !dbg !3152
  br label %bb4, !dbg !3153

bb4:                                              ; preds = %bb3, %bb1
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !3154
  %19 = load i8*, i8** %18, align 8, !dbg !3154
  %20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !3154
  %21 = load i64, i64* %20, align 8, !dbg !3154
  %22 = insertvalue { i8*, i64 } undef, i8* %19, 0, !dbg !3154
  %23 = insertvalue { i8*, i64 } %22, i64 %21, 1, !dbg !3154
  ret { i8*, i64 } %23, !dbg !3154
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7099560655e1fba1E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3155 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !3174, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3177, metadata !DIExpression()), !dbg !3180
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !3181
  %_2 = load i64, i64* %5, align 8, !dbg !3181, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3182

bb2:                                              ; preds = %start
  unreachable, !dbg !3181

bb3:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %self to %"std::result::Result<usize, std::alloc::LayoutError>::Ok"*, !dbg !3183
  %7 = getelementptr inbounds %"std::result::Result<usize, std::alloc::LayoutError>::Ok", %"std::result::Result<usize, std::alloc::LayoutError>::Ok"* %6, i32 0, i32 1, !dbg !3183
  %v = load i64, i64* %7, align 8, !dbg !3183
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3183
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3175, metadata !DIExpression()), !dbg !3184
  %8 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"*, !dbg !3185
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Continue"* %8, i32 0, i32 1, !dbg !3185
  store i64 %v, i64* %9, align 8, !dbg !3185
  %10 = bitcast { i64, i64 }* %2 to i64*, !dbg !3185
  store i64 0, i64* %10, align 8, !dbg !3185
  br label %bb4, !dbg !3186

bb1:                                              ; preds = %start
  %11 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3187
  %12 = bitcast { i64, i64 }* %2 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"*, !dbg !3188
  %13 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, usize>::Break"* %12, i32 0, i32 1, !dbg !3188
  %14 = bitcast { i64, i64 }* %2 to i64*, !dbg !3188
  store i64 1, i64* %14, align 8, !dbg !3188
  br label %bb4, !dbg !3189

bb4:                                              ; preds = %bb3, %bb1
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3190
  %16 = load i64, i64* %15, align 8, !dbg !3190, !range !338
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3190
  %18 = load i64, i64* %17, align 8, !dbg !3190
  %19 = insertvalue { i64, i64 } undef, i64 %16, 0, !dbg !3190
  %20 = insertvalue { i64, i64 } %19, i64 %18, 1, !dbg !3190
  ret { i64, i64 } %20, !dbg !3190
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h77c5012d43a3ecadE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>") dereferenceable(24) %0, %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3191 {
start:
  %v.dbg.spill = alloca i64, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self, metadata !3209, metadata !DIExpression()), !dbg !3214
  %1 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3215
  %_2 = load i64, i64* %1, align 8, !dbg !3215, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3216

bb2:                                              ; preds = %start
  unreachable, !dbg !3215

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"*, !dbg !3217
  %3 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !3217
  %v = load i64, i64* %3, align 8, !dbg !3217
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3217
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3210, metadata !DIExpression()), !dbg !3218
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"*, !dbg !3219
  %5 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Continue"* %4, i32 0, i32 1, !dbg !3219
  store i64 %v, i64* %5, align 8, !dbg !3219
  %6 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !3219
  store i64 0, i64* %6, align 8, !dbg !3219
  br label %bb4, !dbg !3220

bb1:                                              ; preds = %start
  %7 = bitcast %"std::result::Result<usize, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"*, !dbg !3221
  %8 = getelementptr inbounds %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<usize, std::collections::TryReserveErrorKind>::Err"* %7, i32 0, i32 1, !dbg !3221
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 0, !dbg !3221
  %e.0 = load i64, i64* %9, align 8, !dbg !3221
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i32 0, i32 1, !dbg !3221
  %e.1 = load i64, i64* %10, align 8, !dbg !3221
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3221
  store i64 %e.0, i64* %11, align 8, !dbg !3221
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3221
  store i64 %e.1, i64* %12, align 8, !dbg !3221
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3212, metadata !DIExpression()), !dbg !3222
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3223
  store i64 %e.0, i64* %13, align 8, !dbg !3223
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3223
  store i64 %e.1, i64* %14, align 8, !dbg !3223
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"*, !dbg !3224
  %16 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>::Break"* %15, i32 0, i32 1, !dbg !3224
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3224
  %18 = load i64, i64* %17, align 8, !dbg !3224
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3224
  %20 = load i64, i64* %19, align 8, !dbg !3224
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !3224
  store i64 %18, i64* %21, align 8, !dbg !3224
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !3224
  store i64 %20, i64* %22, align 8, !dbg !3224
  %23 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>"* %0 to i64*, !dbg !3224
  store i64 1, i64* %23, align 8, !dbg !3224
  br label %bb4, !dbg !3225

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3226
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8102a282bb5f570cE"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>") dereferenceable(24) %0, %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3227 {
start:
  %v.dbg.spill = alloca { i8*, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self, metadata !3245, metadata !DIExpression()), !dbg !3250
  %1 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to i64*, !dbg !3251
  %_2 = load i64, i64* %1, align 8, !dbg !3251, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3252

bb2:                                              ; preds = %start
  unreachable, !dbg !3251

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"*, !dbg !3253
  %3 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Ok"* %2, i32 0, i32 1, !dbg !3253
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 0, !dbg !3253
  %v.0 = load i8*, i8** %4, align 8, !dbg !3253, !nonnull !4
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %3, i32 0, i32 1, !dbg !3253
  %v.1 = load i64, i64* %5, align 8, !dbg !3253
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3253
  store i8* %v.0, i8** %6, align 8, !dbg !3253
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3253
  store i64 %v.1, i64* %7, align 8, !dbg !3253
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %v.dbg.spill, metadata !3246, metadata !DIExpression()), !dbg !3254
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"*, !dbg !3255
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Continue"* %8, i32 0, i32 1, !dbg !3255
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 0, !dbg !3255
  store i8* %v.0, i8** %10, align 8, !dbg !3255
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %9, i32 0, i32 1, !dbg !3255
  store i64 %v.1, i64* %11, align 8, !dbg !3255
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !3255
  store i64 0, i64* %12, align 8, !dbg !3255
  br label %bb4, !dbg !3256

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>"* %self to %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"*, !dbg !3257
  %14 = getelementptr inbounds %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err", %"std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>::Err"* %13, i32 0, i32 1, !dbg !3257
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3257
  %e.0 = load i64, i64* %15, align 8, !dbg !3257
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3257
  %e.1 = load i64, i64* %16, align 8, !dbg !3257
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3257
  store i64 %e.0, i64* %17, align 8, !dbg !3257
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3257
  store i64 %e.1, i64* %18, align 8, !dbg !3257
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3248, metadata !DIExpression()), !dbg !3258
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3259
  store i64 %e.0, i64* %19, align 8, !dbg !3259
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3259
  store i64 %e.1, i64* %20, align 8, !dbg !3259
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"*, !dbg !3260
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>::Break"* %21, i32 0, i32 1, !dbg !3260
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3260
  %24 = load i64, i64* %23, align 8, !dbg !3260
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3260
  %26 = load i64, i64* %25, align 8, !dbg !3260
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !3260
  store i64 %24, i64* %27, align 8, !dbg !3260
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !3260
  store i64 %26, i64* %28, align 8, !dbg !3260
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>"* %0 to i64*, !dbg !3260
  store i64 1, i64* %29, align 8, !dbg !3260
  br label %bb4, !dbg !3261

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3262
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hee81a03be240d715E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>") dereferenceable(24) %0, %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3263 {
start:
  %e.dbg.spill = alloca %"std::alloc::LayoutError", align 1
  %_6 = alloca %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err", align 1
  %_4 = alloca { { i64, i64 }, i64 }, align 8
  %v = alloca { { i64, i64 }, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, metadata !3282, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.declare(metadata { { i64, i64 }, i64 }* %v, metadata !3283, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata %"std::alloc::LayoutError"* %e.dbg.spill, metadata !3285, metadata !DIExpression()), !dbg !3289
  %1 = getelementptr inbounds %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>", %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self, i32 0, i32 1, !dbg !3290
  %2 = load i64, i64* %1, align 8, !dbg !3290
  %3 = icmp eq i64 %2, 0, !dbg !3290
  %_2 = select i1 %3, i64 1, i64 0, !dbg !3290
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3291

bb2:                                              ; preds = %start
  unreachable, !dbg !3290

bb3:                                              ; preds = %start
  %4 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>"* %self to %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"*, !dbg !3292
  %5 = bitcast %"std::result::Result<(std::alloc::Layout, usize), std::alloc::LayoutError>::Ok"* %4 to { { i64, i64 }, i64 }*, !dbg !3292
  %6 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3292
  %7 = bitcast { { i64, i64 }, i64 }* %5 to i8*, !dbg !3292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false), !dbg !3292
  %8 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3293
  %9 = bitcast { { i64, i64 }, i64 }* %v to i8*, !dbg !3293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !3293
  %10 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"*, !dbg !3294
  %11 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Continue"* %10 to { { i64, i64 }, i64 }*, !dbg !3294
  %12 = bitcast { { i64, i64 }, i64 }* %11 to i8*, !dbg !3294
  %13 = bitcast { { i64, i64 }, i64 }* %_4 to i8*, !dbg !3294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3294
  br label %bb4, !dbg !3295

bb1:                                              ; preds = %start
  %14 = bitcast %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"* %_6 to %"std::alloc::LayoutError"*, !dbg !3296
  %15 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"*, !dbg !3297
  %16 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>::Break"* %15 to %"std::result::Result<std::convert::Infallible, std::alloc::LayoutError>::Err"*, !dbg !3297
  %17 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::LayoutError>, (std::alloc::Layout, usize)>"* %0, i32 0, i32 1, !dbg !3297
  store i64 0, i64* %17, align 8, !dbg !3297
  br label %bb4, !dbg !3298

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3299
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf69c3a4752c71cb0E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>") dereferenceable(24) %0, %"std::result::Result<(), std::collections::TryReserveError>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3300 {
start:
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %v.dbg.spill = alloca {}, align 1
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<(), std::collections::TryReserveError>"* %self, metadata !3318, metadata !DIExpression()), !dbg !3323
  call void @llvm.dbg.declare(metadata {}* %v.dbg.spill, metadata !3319, metadata !DIExpression()), !dbg !3324
  %1 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to i64*, !dbg !3325
  %_2 = load i64, i64* %1, align 8, !dbg !3325, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3326

bb2:                                              ; preds = %start
  unreachable, !dbg !3325

bb3:                                              ; preds = %start
  %2 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"*, !dbg !3327
  %3 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Continue"* %2, i32 0, i32 1, !dbg !3327
  %4 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3327
  store i64 0, i64* %4, align 8, !dbg !3327
  br label %bb4, !dbg !3328

bb1:                                              ; preds = %start
  %5 = bitcast %"std::result::Result<(), std::collections::TryReserveError>"* %self to %"std::result::Result<(), std::collections::TryReserveError>::Err"*, !dbg !3329
  %6 = getelementptr inbounds %"std::result::Result<(), std::collections::TryReserveError>::Err", %"std::result::Result<(), std::collections::TryReserveError>::Err"* %5, i32 0, i32 1, !dbg !3329
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !3329
  %e.0 = load i64, i64* %7, align 8, !dbg !3329
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !3329
  %e.1 = load i64, i64* %8, align 8, !dbg !3329
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3329
  store i64 %e.0, i64* %9, align 8, !dbg !3329
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3329
  store i64 %e.1, i64* %10, align 8, !dbg !3329
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3321, metadata !DIExpression()), !dbg !3330
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3331
  store i64 %e.0, i64* %11, align 8, !dbg !3331
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3331
  store i64 %e.1, i64* %12, align 8, !dbg !3331
  %13 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"*, !dbg !3332
  %14 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>::Break"* %13, i32 0, i32 1, !dbg !3332
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3332
  %16 = load i64, i64* %15, align 8, !dbg !3332
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3332
  %18 = load i64, i64* %17, align 8, !dbg !3332
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3332
  store i64 %16, i64* %19, align 8, !dbg !3332
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3332
  store i64 %18, i64* %20, align 8, !dbg !3332
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>"* %0 to i64*, !dbg !3332
  store i64 1, i64* %21, align 8, !dbg !3332
  br label %bb4, !dbg !3333

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3334
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfc83705232c58ea3E"(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* noalias nocapture sret(%"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>") dereferenceable(24) %0, %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* noalias nocapture dereferenceable(24) %self) unnamed_addr #0 !dbg !3335 {
start:
  %v.dbg.spill = alloca { i64, i64 }, align 8
  %e.dbg.spill = alloca { i64, i64 }, align 8
  %_6 = alloca { i64, i64 }, align 8
  call void @llvm.dbg.declare(metadata %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self, metadata !3353, metadata !DIExpression()), !dbg !3358
  %1 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to i64*, !dbg !3359
  %_2 = load i64, i64* %1, align 8, !dbg !3359, !range !338
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3360

bb2:                                              ; preds = %start
  unreachable, !dbg !3359

bb3:                                              ; preds = %start
  %2 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"*, !dbg !3361
  %3 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Ok"* %2, i32 0, i32 1, !dbg !3361
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !3361
  %v.0 = load i64, i64* %4, align 8, !dbg !3361
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !3361
  %v.1 = load i64, i64* %5, align 8, !dbg !3361, !range !1106
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 0, !dbg !3361
  store i64 %v.0, i64* %6, align 8, !dbg !3361
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %v.dbg.spill, i32 0, i32 1, !dbg !3361
  store i64 %v.1, i64* %7, align 8, !dbg !3361
  call void @llvm.dbg.declare(metadata { i64, i64 }* %v.dbg.spill, metadata !3354, metadata !DIExpression()), !dbg !3362
  %8 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"*, !dbg !3363
  %9 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Continue"* %8, i32 0, i32 1, !dbg !3363
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3363
  store i64 %v.0, i64* %10, align 8, !dbg !3363
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3363
  store i64 %v.1, i64* %11, align 8, !dbg !3363
  %12 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3363
  store i64 0, i64* %12, align 8, !dbg !3363
  br label %bb4, !dbg !3364

bb1:                                              ; preds = %start
  %13 = bitcast %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>"* %self to %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"*, !dbg !3365
  %14 = getelementptr inbounds %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err", %"std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>::Err"* %13, i32 0, i32 1, !dbg !3365
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !3365
  %e.0 = load i64, i64* %15, align 8, !dbg !3365
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !3365
  %e.1 = load i64, i64* %16, align 8, !dbg !3365
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 0, !dbg !3365
  store i64 %e.0, i64* %17, align 8, !dbg !3365
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %e.dbg.spill, i32 0, i32 1, !dbg !3365
  store i64 %e.1, i64* %18, align 8, !dbg !3365
  call void @llvm.dbg.declare(metadata { i64, i64 }* %e.dbg.spill, metadata !3356, metadata !DIExpression()), !dbg !3366
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3367
  store i64 %e.0, i64* %19, align 8, !dbg !3367
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3367
  store i64 %e.1, i64* %20, align 8, !dbg !3367
  %21 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"*, !dbg !3368
  %22 = getelementptr inbounds %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break", %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>::Break"* %21, i32 0, i32 1, !dbg !3368
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 0, !dbg !3368
  %24 = load i64, i64* %23, align 8, !dbg !3368
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_6, i32 0, i32 1, !dbg !3368
  %26 = load i64, i64* %25, align 8, !dbg !3368
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !3368
  store i64 %24, i64* %27, align 8, !dbg !3368
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !3368
  store i64 %26, i64* %28, align 8, !dbg !3368
  %29 = bitcast %"std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>"* %0 to i64*, !dbg !3368
  store i64 1, i64* %29, align 8, !dbg !3368
  br label %bb4, !dbg !3369

bb4:                                              ; preds = %bb3, %bb1
  ret void, !dbg !3370
}

; <core::ops::range::RangeInclusive<Idx> as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define void @"_ZN82_$LT$core..ops..range..RangeInclusive$LT$Idx$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hdadbb3e827565b36E"(%"std::ops::RangeInclusive<u64>"* noalias nocapture sret(%"std::ops::RangeInclusive<u64>") dereferenceable(24) %0, %"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !3371 {
start:
  %__self_0_2.dbg.spill = alloca i8*, align 8
  %__self_0_1.dbg.spill = alloca i64*, align 8
  %__self_0_0.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca %"std::ops::RangeInclusive<u64>"*, align 8
  store %"std::ops::RangeInclusive<u64>"* %self, %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"** %self.dbg.spill, metadata !3376, metadata !DIExpression()), !dbg !3381
  %__self_0_0 = bitcast %"std::ops::RangeInclusive<u64>"* %self to i64*, !dbg !3382
  store i64* %__self_0_0, i64** %__self_0_0.dbg.spill, align 8, !dbg !3382
  call void @llvm.dbg.declare(metadata i64** %__self_0_0.dbg.spill, metadata !3377, metadata !DIExpression()), !dbg !3383
  %__self_0_1 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 1, !dbg !3384
  store i64* %__self_0_1, i64** %__self_0_1.dbg.spill, align 8, !dbg !3384
  call void @llvm.dbg.declare(metadata i64** %__self_0_1.dbg.spill, metadata !3379, metadata !DIExpression()), !dbg !3385
  %__self_0_2 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %self, i32 0, i32 2, !dbg !3386
  store i8* %__self_0_2, i8** %__self_0_2.dbg.spill, align 8, !dbg !3386
  call void @llvm.dbg.declare(metadata i8** %__self_0_2.dbg.spill, metadata !3380, metadata !DIExpression()), !dbg !3387
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_5 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %__self_0_0), !dbg !3383
  br label %bb1, !dbg !3383

bb1:                                              ; preds = %start
; call core::clone::impls::<impl core::clone::Clone for u64>::clone
  %_8 = call i64 @"_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE"(i64* align 8 dereferenceable(8) %__self_0_1), !dbg !3385
  br label %bb2, !dbg !3385

bb2:                                              ; preds = %bb1
; call core::clone::impls::<impl core::clone::Clone for bool>::clone
  %_11 = call zeroext i1 @"_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$bool$GT$5clone17hc458405b49b21808E"(i8* align 1 dereferenceable(1) %__self_0_2), !dbg !3387
  br label %bb3, !dbg !3387

bb3:                                              ; preds = %bb2
  %1 = bitcast %"std::ops::RangeInclusive<u64>"* %0 to i64*, !dbg !3388
  store i64 %_5, i64* %1, align 8, !dbg !3388
  %2 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %0, i32 0, i32 1, !dbg !3388
  store i64 %_8, i64* %2, align 8, !dbg !3388
  %3 = getelementptr inbounds %"std::ops::RangeInclusive<u64>", %"std::ops::RangeInclusive<u64>"* %0, i32 0, i32 2, !dbg !3388
  %4 = zext i1 %_11 to i8, !dbg !3388
  store i8 %4, i8* %3, align 8, !dbg !3388
  ret void, !dbg !3389
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9024dd1559bf535cE"(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %0) unnamed_addr #0 !dbg !3390 {
start:
  %residual.dbg.spill = alloca %"std::option::Option<std::convert::Infallible>::None", align 1
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::convert::Infallible>::None"* %residual.dbg.spill, metadata !3395, metadata !DIExpression()), !dbg !3396
  %1 = bitcast %"std::option::Option<(u64, u64)>"* %0 to i64*, !dbg !3397
  store i64 0, i64* %1, align 8, !dbg !3397
  ret void, !dbg !3398
}

; bv::range_compat::get_inclusive_bounds
; Function Attrs: nounwind
define void @_ZN2bv12range_compat20get_inclusive_bounds17h83267853c5e42a76E(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %0, %"std::ops::RangeInclusive<u64>"* noalias nocapture dereferenceable(24) %range) unnamed_addr #1 !dbg !3399 {
start:
  %val.dbg.spill3 = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %residual.dbg.spill1 = alloca %"std::option::Option<std::convert::Infallible>::None", align 1
  %residual.dbg.spill = alloca %"std::option::Option<std::convert::Infallible>::None", align 1
  %_15 = alloca { i64, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %r2 = alloca %"std::ops::RangeInclusive<u64>", align 8
  %r1 = alloca %"std::ops::RangeInclusive<u64>", align 8
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"* %range, metadata !3405, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"* %r1, metadata !3406, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"* %r2, metadata !3408, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::convert::Infallible>::None"* %residual.dbg.spill, metadata !3410, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata %"std::option::Option<std::convert::Infallible>::None"* %residual.dbg.spill1, metadata !3414, metadata !DIExpression()), !dbg !3422
; call <core::ops::range::RangeInclusive<Idx> as core::clone::Clone>::clone
  call void @"_ZN82_$LT$core..ops..range..RangeInclusive$LT$Idx$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hdadbb3e827565b36E"(%"std::ops::RangeInclusive<u64>"* noalias nocapture sret(%"std::ops::RangeInclusive<u64>") dereferenceable(24) %r1, %"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %range), !dbg !3423
  br label %bb1, !dbg !3423

bb1:                                              ; preds = %start
  %1 = bitcast %"std::ops::RangeInclusive<u64>"* %r2 to i8*, !dbg !3424
  %2 = bitcast %"std::ops::RangeInclusive<u64>"* %range to i8*, !dbg !3424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !3424
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next
  %3 = call { i64, i64 } @"_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17hb3521c5c51ca708dE"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %r1), !dbg !3425
  %_8.0 = extractvalue { i64, i64 } %3, 0, !dbg !3425
  %_8.1 = extractvalue { i64, i64 } %3, 1, !dbg !3425
  br label %bb2, !dbg !3425

bb2:                                              ; preds = %bb1
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %4 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfe8fe4e88735ca69E"(i64 %_8.0, i64 %_8.1), !dbg !3425
  store { i64, i64 } %4, { i64, i64 }* %_7, align 8, !dbg !3425
  br label %bb3, !dbg !3425

bb3:                                              ; preds = %bb2
  %5 = bitcast { i64, i64 }* %_7 to i64*, !dbg !3425
  %_10 = load i64, i64* %5, align 8, !dbg !3425, !range !338
  switch i64 %_10, label %bb5 [
    i64 0, label %bb4
    i64 1, label %bb6
  ], !dbg !3425

bb5:                                              ; preds = %bb3
  unreachable, !dbg !3425

bb4:                                              ; preds = %bb3
  %6 = bitcast { i64, i64 }* %_7 to %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"*, !dbg !3425
  %7 = getelementptr inbounds %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue", %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"* %6, i32 0, i32 1, !dbg !3425
  %val = load i64, i64* %7, align 8, !dbg !3425
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !3425
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !3412, metadata !DIExpression()), !dbg !3426
; call core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive<A>>::next_back
  %8 = call { i64, i64 } @"_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17h97b383ec5907ee62E"(%"std::ops::RangeInclusive<u64>"* align 8 dereferenceable(24) %r2), !dbg !3427
  %_16.0 = extractvalue { i64, i64 } %8, 0, !dbg !3427
  %_16.1 = extractvalue { i64, i64 } %8, 1, !dbg !3427
  br label %bb7, !dbg !3427

bb6:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9024dd1559bf535cE"(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %0), !dbg !3428
  br label %bb12, !dbg !3428

bb12:                                             ; preds = %bb9, %bb11, %bb6
  ret void, !dbg !3429

bb7:                                              ; preds = %bb4
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %9 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfe8fe4e88735ca69E"(i64 %_16.0, i64 %_16.1), !dbg !3427
  store { i64, i64 } %9, { i64, i64 }* %_15, align 8, !dbg !3427
  br label %bb8, !dbg !3427

bb8:                                              ; preds = %bb7
  %10 = bitcast { i64, i64 }* %_15 to i64*, !dbg !3427
  %_18 = load i64, i64* %10, align 8, !dbg !3427, !range !338
  switch i64 %_18, label %bb10 [
    i64 0, label %bb9
    i64 1, label %bb11
  ], !dbg !3427

bb10:                                             ; preds = %bb8
  unreachable, !dbg !3427

bb9:                                              ; preds = %bb8
  %11 = bitcast { i64, i64 }* %_15 to %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"*, !dbg !3427
  %12 = getelementptr inbounds %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue", %"std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u64>::Continue"* %11, i32 0, i32 1, !dbg !3427
  %val2 = load i64, i64* %12, align 8, !dbg !3427
  store i64 %val2, i64* %val.dbg.spill3, align 8, !dbg !3427
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill3, metadata !3416, metadata !DIExpression()), !dbg !3430
  %13 = bitcast { i64, i64 }* %_5 to i64*, !dbg !3431
  store i64 %val, i64* %13, align 8, !dbg !3431
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !3431
  store i64 %val2, i64* %14, align 8, !dbg !3431
  %15 = bitcast %"std::option::Option<(u64, u64)>"* %0 to %"std::option::Option<(u64, u64)>::Some"*, !dbg !3432
  %16 = getelementptr inbounds %"std::option::Option<(u64, u64)>::Some", %"std::option::Option<(u64, u64)>::Some"* %15, i32 0, i32 1, !dbg !3432
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !3432
  %18 = load i64, i64* %17, align 8, !dbg !3432
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !3432
  %20 = load i64, i64* %19, align 8, !dbg !3432
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !3432
  store i64 %18, i64* %21, align 8, !dbg !3432
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !3432
  store i64 %20, i64* %22, align 8, !dbg !3432
  %23 = bitcast %"std::option::Option<(u64, u64)>"* %0 to i64*, !dbg !3432
  store i64 1, i64* %23, align 8, !dbg !3432
  br label %bb12, !dbg !3429

bb11:                                             ; preds = %bb8
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  call void @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9024dd1559bf535cE"(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %0), !dbg !3433
  br label %bb12, !dbg !3433
}

; <[bool] as bv::traits::bits_mut::BitsMut>::set_bit
; Function Attrs: nounwind
define void @"_ZN64_$LT$$u5b$bool$u5d$$u20$as$u20$bv..traits..bits_mut..BitsMut$GT$7set_bit17h60d0706e98a36c70E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3434 {
start:
  %position.dbg.spill2 = alloca i64, align 8
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3442, metadata !DIExpression()), !dbg !3447
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3443, metadata !DIExpression()), !dbg !3448
  %2 = zext i1 %value to i8
  store i8 %2, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3444, metadata !DIExpression()), !dbg !3449
; call <u64 as bv::storage::BlockType>::to_usize
  %3 = call { i64, i64 } @"_ZN46_$LT$u64$u20$as$u20$bv..storage..BlockType$GT$8to_usize17h54f0cfebe71a81d3E"(i64 %position), !dbg !3450
  %_5.0 = extractvalue { i64, i64 } %3, 0, !dbg !3450
  %_5.1 = extractvalue { i64, i64 } %3, 1, !dbg !3450
  br label %bb1, !dbg !3450

bb1:                                              ; preds = %start
; call core::option::Option<T>::expect
  %position1 = call i64 @"_ZN4core6option15Option$LT$T$GT$6expect17h5984e025ace1e275E"(i64 %_5.0, i64 %_5.1, [0 x i8]* nonnull align 1 bitcast (<{ [28 x i8] }>* @alloc1066 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1068 to %"std::panic::Location"*)), !dbg !3450
  store i64 %position1, i64* %position.dbg.spill2, align 8, !dbg !3450
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill2, metadata !3445, metadata !DIExpression()), !dbg !3451
  br label %bb2, !dbg !3450

bb2:                                              ; preds = %bb1
  %_12 = icmp ult i64 %position1, %self.1, !dbg !3452
  %4 = call i1 @llvm.expect.i1(i1 %_12, i1 true), !dbg !3452
  br i1 %4, label %bb3, label %panic, !dbg !3452

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %self.0, i64 0, i64 %position1, !dbg !3452
  %6 = zext i1 %value to i8, !dbg !3452
  store i8 %6, i8* %5, align 1, !dbg !3452
  ret void, !dbg !3453

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position1, i64 %self.1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1070 to %"std::panic::Location"*)), !dbg !3452
  unreachable, !dbg !3452
}

; <alloc::vec::Vec<bool> as bv::traits::bits_push::BitsPush>::push_bit
; Function Attrs: nounwind
define void @"_ZN79_$LT$alloc..vec..Vec$LT$bool$GT$$u20$as$u20$bv..traits..bits_push..BitsPush$GT$8push_bit17h043c58ebebb09512E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self, i1 zeroext %value) unnamed_addr #1 !dbg !3454 {
start:
  %value.dbg.spill = alloca i8, align 1
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !3459, metadata !DIExpression()), !dbg !3461
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3460, metadata !DIExpression()), !dbg !3462
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6fb46a7a3785d933E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self, i1 zeroext %value), !dbg !3463
  br label %bb1, !dbg !3463

bb1:                                              ; preds = %start
  ret void, !dbg !3464
}

; <alloc::vec::Vec<bool> as bv::traits::bits_push::BitsPush>::pop_bit
; Function Attrs: nounwind
define i8 @"_ZN79_$LT$alloc..vec..Vec$LT$bool$GT$$u20$as$u20$bv..traits..bits_push..BitsPush$GT$7pop_bit17hf9f8324a7af7813bE"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !3465 {
start:
  %self.dbg.spill = alloca %"std::vec::Vec<bool>"*, align 8
  store %"std::vec::Vec<bool>"* %self, %"std::vec::Vec<bool>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::vec::Vec<bool>"** %self.dbg.spill, metadata !3467, metadata !DIExpression()), !dbg !3468
; call alloc::vec::Vec<T,A>::pop
  %0 = call i8 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h397e98b92c6900d5E"(%"std::vec::Vec<bool>"* align 8 dereferenceable(24) %self), !dbg !3469, !range !2390
  br label %bb1, !dbg !3469

bb1:                                              ; preds = %start
  ret i8 %0, !dbg !3470
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeFull>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN113_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFull$GT$$GT$9bit_slice17h88f3872f0c870a74E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3471 {
start:
  %_2.dbg.spill = alloca %"std::ops::RangeFull", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3479, metadata !DIExpression()), !dbg !3481
  call void @llvm.dbg.declare(metadata %"std::ops::RangeFull"* %_2.dbg.spill, metadata !3480, metadata !DIExpression()), !dbg !3482
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !3483
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !3483
  ret { [0 x i8]*, i64 } %3, !dbg !3483
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeFull>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN121_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFull$GT$$GT$9bit_slice17h8f52b6044d105520E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3484 {
start:
  %_2.dbg.spill = alloca %"std::ops::RangeFull", align 1
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3489, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.declare(metadata %"std::ops::RangeFull"* %_2.dbg.spill, metadata !3490, metadata !DIExpression()), !dbg !3492
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !3493
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !3493
  ret { [0 x i8]*, i64 } %3, !dbg !3493
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::Range<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN120_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..Range$LT$u64$GT$$GT$$GT$9bit_slice17h6bbb284229ba1465E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range.0, i64 %range.1) unnamed_addr #1 !dbg !3494 {
start:
  %range.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3503, metadata !DIExpression()), !dbg !3505
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %range.dbg.spill, i32 0, i32 0
  store i64 %range.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %range.dbg.spill, i32 0, i32 1
  store i64 %range.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %range.dbg.spill, metadata !3504, metadata !DIExpression()), !dbg !3506
  %4 = bitcast { i64, i64 }* %_5 to i64*, !dbg !3507
  store i64 %range.0, i64* %4, align 8, !dbg !3507
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !3507
  store i64 %range.1, i64* %5, align 8, !dbg !3507
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 0, !dbg !3508
  %7 = load i64, i64* %6, align 8, !dbg !3508
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !3508
  %9 = load i64, i64* %8, align 8, !dbg !3508
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %10 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8db56019e1474894E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %7, i64 %9, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1072 to %"std::panic::Location"*)), !dbg !3508
  %_3.0 = extractvalue { [0 x i8]*, i64 } %10, 0, !dbg !3508
  %_3.1 = extractvalue { [0 x i8]*, i64 } %10, 1, !dbg !3508
  br label %bb1, !dbg !3508

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !3509
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %_3.1, 1, !dbg !3509
  ret { [0 x i8]*, i64 } %12, !dbg !3509
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::Range<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN128_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..Range$LT$u64$GT$$GT$$GT$9bit_slice17heb298f6e7d5710ceE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range.0, i64 %range.1) unnamed_addr #1 !dbg !3510 {
start:
  %range.dbg.spill = alloca { i64, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { i64, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3515, metadata !DIExpression()), !dbg !3517
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %range.dbg.spill, i32 0, i32 0
  store i64 %range.0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %range.dbg.spill, i32 0, i32 1
  store i64 %range.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %range.dbg.spill, metadata !3516, metadata !DIExpression()), !dbg !3518
  %4 = bitcast { i64, i64 }* %_7 to i64*, !dbg !3519
  store i64 %range.0, i64* %4, align 8, !dbg !3519
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !3519
  store i64 %range.1, i64* %5, align 8, !dbg !3519
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 0, !dbg !3520
  %7 = load i64, i64* %6, align 8, !dbg !3520
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_7, i32 0, i32 1, !dbg !3520
  %9 = load i64, i64* %8, align 8, !dbg !3520
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %10 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5d5b828fe4bb4643E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %7, i64 %9, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1074 to %"std::panic::Location"*)), !dbg !3520
  %_5.0 = extractvalue { [0 x i8]*, i64 } %10, 0, !dbg !3520
  %_5.1 = extractvalue { [0 x i8]*, i64 } %10, 1, !dbg !3520
  br label %bb1, !dbg !3520

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0, !dbg !3521
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %_5.1, 1, !dbg !3521
  ret { [0 x i8]*, i64 } %12, !dbg !3521
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeInclusive<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN129_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeInclusive$LT$u64$GT$$GT$$GT$9bit_slice17hbdd0e614e6b82aecE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::ops::RangeInclusive<u64>"* noalias nocapture dereferenceable(24) %range) unnamed_addr #1 !dbg !3522 {
start:
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_12 = alloca { i64, i64 }, align 8
  %_7 = alloca %"std::ops::RangeInclusive<u64>", align 8
  %_6 = alloca %"std::option::Option<(u64, u64)>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3527, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"* %range, metadata !3528, metadata !DIExpression()), !dbg !3533
  %2 = bitcast %"std::ops::RangeInclusive<u64>"* %_7 to i8*, !dbg !3534
  %3 = bitcast %"std::ops::RangeInclusive<u64>"* %range to i8*, !dbg !3534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !3534
; call bv::range_compat::get_inclusive_bounds
  call void @_ZN2bv12range_compat20get_inclusive_bounds17h83267853c5e42a76E(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %_6, %"std::ops::RangeInclusive<u64>"* noalias nocapture dereferenceable(24) %_7), !dbg !3535
  br label %bb1, !dbg !3535

bb1:                                              ; preds = %start
; call core::option::Option<T>::expect
  %4 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$6expect17h7cba6b55af8f9671E"(%"std::option::Option<(u64, u64)>"* noalias nocapture dereferenceable(24) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [41 x i8] }>* @alloc1075 to [0 x i8]*), i64 41, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1077 to %"std::panic::Location"*)), !dbg !3535
  %_5.0 = extractvalue { i64, i64 } %4, 0, !dbg !3535
  %_5.1 = extractvalue { i64, i64 } %4, 1, !dbg !3535
  br label %bb2, !dbg !3535

bb2:                                              ; preds = %bb1
  store i64 %_5.0, i64* %start.dbg.spill, align 8, !dbg !3536
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !3529, metadata !DIExpression()), !dbg !3537
  store i64 %_5.1, i64* %end.dbg.spill, align 8, !dbg !3538
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !3531, metadata !DIExpression()), !dbg !3539
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_5.1, i64 1), !dbg !3540
  %_18.0 = extractvalue { i64, i1 } %5, 0, !dbg !3540
  %_18.1 = extractvalue { i64, i1 } %5, 1, !dbg !3540
  %6 = call i1 @llvm.expect.i1(i1 %_18.1, i1 false), !dbg !3540
  br i1 %6, label %panic, label %bb3, !dbg !3540

bb3:                                              ; preds = %bb2
  %7 = bitcast { i64, i64 }* %_12 to i64*, !dbg !3541
  store i64 %_5.0, i64* %7, align 8, !dbg !3541
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1, !dbg !3541
  store i64 %_18.0, i64* %8, align 8, !dbg !3541
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 0, !dbg !3542
  %10 = load i64, i64* %9, align 8, !dbg !3542
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_12, i32 0, i32 1, !dbg !3542
  %12 = load i64, i64* %11, align 8, !dbg !3542
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %13 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8db56019e1474894E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %10, i64 %12, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1081 to %"std::panic::Location"*)), !dbg !3542
  %_10.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !3542
  %_10.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !3542
  br label %bb4, !dbg !3542

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.2 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1079 to %"std::panic::Location"*)), !dbg !3540
  unreachable, !dbg !3540

bb4:                                              ; preds = %bb3
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0, !dbg !3543
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_10.1, 1, !dbg !3543
  ret { [0 x i8]*, i64 } %15, !dbg !3543
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeInclusive<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN137_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeInclusive$LT$u64$GT$$GT$$GT$9bit_slice17hc529d8d575dee002E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"std::ops::RangeInclusive<u64>"* noalias nocapture dereferenceable(24) %range) unnamed_addr #1 !dbg !3544 {
start:
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_14 = alloca { i64, i64 }, align 8
  %_8 = alloca %"std::ops::RangeInclusive<u64>", align 8
  %_7 = alloca %"std::option::Option<(u64, u64)>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3549, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.declare(metadata %"std::ops::RangeInclusive<u64>"* %range, metadata !3550, metadata !DIExpression()), !dbg !3555
  %2 = bitcast %"std::ops::RangeInclusive<u64>"* %_8 to i8*, !dbg !3556
  %3 = bitcast %"std::ops::RangeInclusive<u64>"* %range to i8*, !dbg !3556
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !3556
; call bv::range_compat::get_inclusive_bounds
  call void @_ZN2bv12range_compat20get_inclusive_bounds17h83267853c5e42a76E(%"std::option::Option<(u64, u64)>"* noalias nocapture sret(%"std::option::Option<(u64, u64)>") dereferenceable(24) %_7, %"std::ops::RangeInclusive<u64>"* noalias nocapture dereferenceable(24) %_8), !dbg !3557
  br label %bb1, !dbg !3557

bb1:                                              ; preds = %start
; call core::option::Option<T>::expect
  %4 = call { i64, i64 } @"_ZN4core6option15Option$LT$T$GT$6expect17h7cba6b55af8f9671E"(%"std::option::Option<(u64, u64)>"* noalias nocapture dereferenceable(24) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [45 x i8] }>* @alloc1082 to [0 x i8]*), i64 45, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1084 to %"std::panic::Location"*)), !dbg !3557
  %_6.0 = extractvalue { i64, i64 } %4, 0, !dbg !3557
  %_6.1 = extractvalue { i64, i64 } %4, 1, !dbg !3557
  br label %bb2, !dbg !3557

bb2:                                              ; preds = %bb1
  store i64 %_6.0, i64* %start.dbg.spill, align 8, !dbg !3558
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !3551, metadata !DIExpression()), !dbg !3559
  store i64 %_6.1, i64* %end.dbg.spill, align 8, !dbg !3560
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !3553, metadata !DIExpression()), !dbg !3561
  %5 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %_6.1, i64 1), !dbg !3562
  %_20.0 = extractvalue { i64, i1 } %5, 0, !dbg !3562
  %_20.1 = extractvalue { i64, i1 } %5, 1, !dbg !3562
  %6 = call i1 @llvm.expect.i1(i1 %_20.1, i1 false), !dbg !3562
  br i1 %6, label %panic, label %bb3, !dbg !3562

bb3:                                              ; preds = %bb2
  %7 = bitcast { i64, i64 }* %_14 to i64*, !dbg !3563
  store i64 %_6.0, i64* %7, align 8, !dbg !3563
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !3563
  store i64 %_20.0, i64* %8, align 8, !dbg !3563
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 0, !dbg !3564
  %10 = load i64, i64* %9, align 8, !dbg !3564
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_14, i32 0, i32 1, !dbg !3564
  %12 = load i64, i64* %11, align 8, !dbg !3564
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %13 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5d5b828fe4bb4643E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %10, i64 %12, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1088 to %"std::panic::Location"*)), !dbg !3564
  %_12.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !3564
  %_12.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !3564
  br label %bb4, !dbg !3564

panic:                                            ; preds = %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.2 to [0 x i8]*), i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1086 to %"std::panic::Location"*)), !dbg !3562
  unreachable, !dbg !3562

bb4:                                              ; preds = %bb3
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_12.0, 0, !dbg !3565
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %_12.1, 1, !dbg !3565
  ret { [0 x i8]*, i64 } %15, !dbg !3565
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeFrom<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN124_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFrom$LT$u64$GT$$GT$$GT$9bit_slice17hc9a80733a4cdf2baE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3566 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3574, metadata !DIExpression()), !dbg !3576
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3575, metadata !DIExpression()), !dbg !3577
  store i64 %range, i64* %_5, align 8, !dbg !3578
  %2 = load i64, i64* %_5, align 8, !dbg !3579
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0be4a3e6e3d05d55E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1090 to %"std::panic::Location"*)), !dbg !3579
  %_3.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3579
  %_3.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3579
  br label %bb1, !dbg !3579

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !3580
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_3.1, 1, !dbg !3580
  ret { [0 x i8]*, i64 } %5, !dbg !3580
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeFrom<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN132_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFrom$LT$u64$GT$$GT$$GT$9bit_slice17h93487e511b078f27E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3581 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3586, metadata !DIExpression()), !dbg !3588
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3587, metadata !DIExpression()), !dbg !3589
  store i64 %range, i64* %_7, align 8, !dbg !3590
  %2 = load i64, i64* %_7, align 8, !dbg !3591
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1751a9fd87524dabE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1092 to %"std::panic::Location"*)), !dbg !3591
  %_5.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3591
  %_5.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3591
  br label %bb1, !dbg !3591

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0, !dbg !3592
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_5.1, 1, !dbg !3592
  ret { [0 x i8]*, i64 } %5, !dbg !3592
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeTo<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN122_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeTo$LT$u64$GT$$GT$$GT$9bit_slice17h730fedd2fd985cfbE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3593 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3601, metadata !DIExpression()), !dbg !3603
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3602, metadata !DIExpression()), !dbg !3604
  store i64 %range, i64* %_5, align 8, !dbg !3605
  %2 = load i64, i64* %_5, align 8, !dbg !3606
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3978143dcc3cca1eE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1094 to %"std::panic::Location"*)), !dbg !3606
  %_3.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3606
  %_3.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3606
  br label %bb1, !dbg !3606

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !3607
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_3.1, 1, !dbg !3607
  ret { [0 x i8]*, i64 } %5, !dbg !3607
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeTo<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN130_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeTo$LT$u64$GT$$GT$$GT$9bit_slice17h53b378e7bd4cfa2fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3608 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3613, metadata !DIExpression()), !dbg !3615
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3614, metadata !DIExpression()), !dbg !3616
  store i64 %range, i64* %_7, align 8, !dbg !3617
  %2 = load i64, i64* %_7, align 8, !dbg !3618
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h9608ef68fd8d20caE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1096 to %"std::panic::Location"*)), !dbg !3618
  %_5.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3618
  %_5.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3618
  br label %bb1, !dbg !3618

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0, !dbg !3619
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_5.1, 1, !dbg !3619
  ret { [0 x i8]*, i64 } %5, !dbg !3619
}

; <&[bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeToInclusive<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN131_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeToInclusive$LT$u64$GT$$GT$$GT$9bit_slice17h50fd86103fdadfe7E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3620 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_5 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3628, metadata !DIExpression()), !dbg !3630
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3629, metadata !DIExpression()), !dbg !3631
  store i64 %range, i64* %_5, align 8, !dbg !3632
  %2 = load i64, i64* %_5, align 8, !dbg !3633
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h83389c579e9f629cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1098 to %"std::panic::Location"*)), !dbg !3633
  %_3.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3633
  %_3.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3633
  br label %bb1, !dbg !3633

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !3634
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_3.1, 1, !dbg !3634
  ret { [0 x i8]*, i64 } %5, !dbg !3634
}

; <&mut [bool] as bv::traits::bit_sliceable::BitSliceable<core::ops::range::RangeToInclusive<u64>>>::bit_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN139_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeToInclusive$LT$u64$GT$$GT$$GT$9bit_slice17h874f52396323de89E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %range) unnamed_addr #1 !dbg !3635 {
start:
  %range.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3640, metadata !DIExpression()), !dbg !3642
  store i64 %range, i64* %range.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %range.dbg.spill, metadata !3641, metadata !DIExpression()), !dbg !3643
  store i64 %range, i64* %_7, align 8, !dbg !3644
  %2 = load i64, i64* %_7, align 8, !dbg !3645
; call core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut
  %3 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8a9535dd529280f7E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1100 to %"std::panic::Location"*)), !dbg !3645
  %_5.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !3645
  %_5.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !3645
  br label %bb1, !dbg !3645

bb1:                                              ; preds = %start
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_5.0, 0, !dbg !3646
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_5.1, 1, !dbg !3646
  ret { [0 x i8]*, i64 } %5, !dbg !3646
}

; <u64 as bv::storage::BlockType>::to_usize
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN46_$LT$u64$u20$as$u20$bv..storage..BlockType$GT$8to_usize17h54f0cfebe71a81d3E"(i64 %self) unnamed_addr #0 !dbg !3647 {
start:
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3653, metadata !DIExpression()), !dbg !3654
  %_2 = icmp eq i64 %self, %self, !dbg !3655
  br i1 %_2, label %bb1, label %bb2, !dbg !3655

bb2:                                              ; preds = %start
  %1 = bitcast { i64, i64 }* %0 to i64*, !dbg !3656
  store i64 0, i64* %1, align 8, !dbg !3656
  br label %bb3, !dbg !3657

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %0 to %"std::option::Option<usize>::Some"*, !dbg !3658
  %3 = getelementptr inbounds %"std::option::Option<usize>::Some", %"std::option::Option<usize>::Some"* %2, i32 0, i32 1, !dbg !3658
  store i64 %self, i64* %3, align 8, !dbg !3658
  %4 = bitcast { i64, i64 }* %0 to i64*, !dbg !3658
  store i64 1, i64* %4, align 8, !dbg !3658
  br label %bb3, !dbg !3657

bb3:                                              ; preds = %bb2, %bb1
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0, !dbg !3659
  %6 = load i64, i64* %5, align 8, !dbg !3659, !range !338
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1, !dbg !3659
  %8 = load i64, i64* %7, align 8, !dbg !3659
  %9 = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !3659
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1, !dbg !3659
  ret { i64, i64 } %10, !dbg !3659
}

; <bv::storage::Address as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN57_$LT$bv..storage..Address$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cb1f768e2b19ad8E"({ i64, i64 }* align 8 dereferenceable(16) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3660 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0_1.dbg.spill = alloca i64*, align 8
  %__self_0_0.dbg.spill = alloca i64*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca { i64, i64 }*, align 8
  %_25 = alloca i64*, align 8
  %_17 = alloca i64*, align 8
  %_6 = alloca %"std::fmt::DebugStruct", align 8
  store { i64, i64 }* %self, { i64, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }** %self.dbg.spill, metadata !3665, metadata !DIExpression()), !dbg !3680
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !3666, metadata !DIExpression()), !dbg !3680
  %__self_0_0 = bitcast { i64, i64 }* %self to i64*, !dbg !3681
  store i64* %__self_0_0, i64** %__self_0_0.dbg.spill, align 8, !dbg !3681
  call void @llvm.dbg.declare(metadata i64** %__self_0_0.dbg.spill, metadata !3667, metadata !DIExpression()), !dbg !3682
  %__self_0_1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1, !dbg !3683
  store i64* %__self_0_1, i64** %__self_0_1.dbg.spill, align 8, !dbg !3683
  call void @llvm.dbg.declare(metadata i64** %__self_0_1.dbg.spill, metadata !3669, metadata !DIExpression()), !dbg !3684
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc1101 to [0 x i8]*), i64 7), !dbg !3685
  store i128 %1, i128* %0, align 8, !dbg !3685
  %2 = bitcast %"std::fmt::DebugStruct"* %_6 to i8*, !dbg !3685
  %3 = bitcast i128* %0 to i8*, !dbg !3685
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !3685
  br label %bb1, !dbg !3685

bb1:                                              ; preds = %start
  store %"std::fmt::DebugStruct"* %_6, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !3685
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !3670, metadata !DIExpression()), !dbg !3686
  store i64* %__self_0_0, i64** %_17, align 8, !dbg !3687
  %_14.0 = bitcast i64** %_17 to {}*, !dbg !3687
; call core::fmt::builders::DebugStruct::field
  %_10 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1102 to [0 x i8]*), i64 11, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !3688
  br label %bb2, !dbg !3688

bb2:                                              ; preds = %bb1
  store i64* %__self_0_1, i64** %_25, align 8, !dbg !3689
  %_22.0 = bitcast i64** %_25 to {}*, !dbg !3689
; call core::fmt::builders::DebugStruct::field
  %_18 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_6, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1106 to [0 x i8]*), i64 10, {}* nonnull align 1 %_22.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !3688
  br label %bb3, !dbg !3688

bb3:                                              ; preds = %bb2
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_6), !dbg !3688
  br label %bb4, !dbg !3688

bb4:                                              ; preds = %bb3
  ret i1 %4, !dbg !3690
}

; <bv::slice::SliceSpan as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN57_$LT$bv..slice..SliceSpan$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0414e2f8b3af5a5E"(%"slice::SliceSpan"* align 8 dereferenceable(24) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3691 {
start:
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0_2.dbg.spill = alloca i64*, align 8
  %__self_0_1.dbg.spill = alloca i64*, align 8
  %__self_0_0.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"slice::SliceSpan"*, align 8
  %_34 = alloca i64*, align 8
  %_26 = alloca i64*, align 8
  %_18 = alloca i8*, align 8
  %_7 = alloca %"std::fmt::DebugStruct", align 8
  store %"slice::SliceSpan"* %self, %"slice::SliceSpan"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"slice::SliceSpan"** %self.dbg.spill, metadata !3703, metadata !DIExpression()), !dbg !3712
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !3704, metadata !DIExpression()), !dbg !3712
  %__self_0_0 = getelementptr inbounds %"slice::SliceSpan", %"slice::SliceSpan"* %self, i32 0, i32 2, !dbg !3713
  store i8* %__self_0_0, i8** %__self_0_0.dbg.spill, align 8, !dbg !3713
  call void @llvm.dbg.declare(metadata i8** %__self_0_0.dbg.spill, metadata !3705, metadata !DIExpression()), !dbg !3714
  %__self_0_1 = bitcast %"slice::SliceSpan"* %self to i64*, !dbg !3715
  store i64* %__self_0_1, i64** %__self_0_1.dbg.spill, align 8, !dbg !3715
  call void @llvm.dbg.declare(metadata i64** %__self_0_1.dbg.spill, metadata !3707, metadata !DIExpression()), !dbg !3716
  %__self_0_2 = getelementptr inbounds %"slice::SliceSpan", %"slice::SliceSpan"* %self, i32 0, i32 1, !dbg !3717
  store i64* %__self_0_2, i64** %__self_0_2.dbg.spill, align 8, !dbg !3717
  call void @llvm.dbg.declare(metadata i64** %__self_0_2.dbg.spill, metadata !3708, metadata !DIExpression()), !dbg !3718
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc1107 to [0 x i8]*), i64 9), !dbg !3719
  store i128 %1, i128* %0, align 8, !dbg !3719
  %2 = bitcast %"std::fmt::DebugStruct"* %_7 to i8*, !dbg !3719
  %3 = bitcast i128* %0 to i8*, !dbg !3719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !3719
  br label %bb1, !dbg !3719

bb1:                                              ; preds = %start
  store %"std::fmt::DebugStruct"* %_7, %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !3719
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !3709, metadata !DIExpression()), !dbg !3720
  store i8* %__self_0_0, i8** %_18, align 8, !dbg !3721
  %_15.0 = bitcast i8** %_18 to {}*, !dbg !3721
; call core::fmt::builders::DebugStruct::field
  %_11 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [6 x i8] }>* @alloc1108 to [0 x i8]*), i64 6, {}* nonnull align 1 %_15.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.4 to [3 x i64]*)), !dbg !3722
  br label %bb2, !dbg !3722

bb2:                                              ; preds = %bb1
  store i64* %__self_0_1, i64** %_26, align 8, !dbg !3723
  %_23.0 = bitcast i64** %_26 to {}*, !dbg !3723
; call core::fmt::builders::DebugStruct::field
  %_19 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc1112 to [0 x i8]*), i64 3, {}* nonnull align 1 %_23.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.5 to [3 x i64]*)), !dbg !3722
  br label %bb3, !dbg !3722

bb3:                                              ; preds = %bb2
  store i64* %__self_0_2, i64** %_34, align 8, !dbg !3724
  %_31.0 = bitcast i64** %_34 to {}*, !dbg !3724
; call core::fmt::builders::DebugStruct::field
  %_27 = call align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7, [0 x i8]* nonnull align 1 bitcast (<{ [14 x i8] }>* @alloc1116 to [0 x i8]*), i64 14, {}* nonnull align 1 %_31.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !3722
  br label %bb4, !dbg !3722

bb4:                                              ; preds = %bb3
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16) %_7), !dbg !3722
  br label %bb5, !dbg !3722

bb5:                                              ; preds = %bb4
  ret i1 %4, !dbg !3725
}

; <bv::slice::BlockAddress as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN60_$LT$bv..slice..BlockAddress$u20$as$u20$core..fmt..Debug$GT$3fmt17h214c7ce1f38734e3E"(%"slice::BlockAddress"* align 8 dereferenceable(32) %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3726 {
start:
  %debug_trait_builder.dbg.spill3 = alloca %"std::fmt::DebugTuple"*, align 8
  %__self_0.dbg.spill2 = alloca i64*, align 8
  %debug_trait_builder.dbg.spill = alloca %"std::fmt::DebugTuple"*, align 8
  %__self_1.dbg.spill = alloca i64*, align 8
  %__self_0.dbg.spill = alloca { i64, i64 }*, align 8
  %f.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"slice::BlockAddress"*, align 8
  %_37 = alloca i64*, align 8
  %_31 = alloca { i64, i64 }*, align 8
  %_22 = alloca %"std::fmt::DebugTuple", align 8
  %_17 = alloca i64*, align 8
  %_8 = alloca %"std::fmt::DebugTuple", align 8
  %_3 = alloca i64*, align 8
  %0 = alloca i8, align 1
  store %"slice::BlockAddress"* %self, %"slice::BlockAddress"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"slice::BlockAddress"** %self.dbg.spill, metadata !3746, metadata !DIExpression()), !dbg !3764
  store %"std::fmt::Formatter"* %f, %"std::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %f.dbg.spill, metadata !3747, metadata !DIExpression()), !dbg !3764
  %1 = bitcast i64** %_3 to %"slice::BlockAddress"**, !dbg !3764
  store %"slice::BlockAddress"* %self, %"slice::BlockAddress"** %1, align 8, !dbg !3764
  %2 = bitcast i64** %_3 to %"slice::BlockAddress"**, !dbg !3764
  %3 = load %"slice::BlockAddress"*, %"slice::BlockAddress"** %2, align 8, !dbg !3764, !nonnull !4
  %4 = bitcast %"slice::BlockAddress"* %3 to i64*, !dbg !3764
  %_5 = load i64, i64* %4, align 8, !dbg !3764, !range !338
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3764

bb2:                                              ; preds = %start
  unreachable, !dbg !3764

bb3:                                              ; preds = %start
  %5 = bitcast i64** %_3 to %"slice::BlockAddress"**, !dbg !3765
  %6 = load %"slice::BlockAddress"*, %"slice::BlockAddress"** %5, align 8, !dbg !3765, !nonnull !4
  %7 = bitcast %"slice::BlockAddress"* %6 to %"slice::BlockAddress::FullBlockAt"*, !dbg !3765
  %__self_01 = getelementptr inbounds %"slice::BlockAddress::FullBlockAt", %"slice::BlockAddress::FullBlockAt"* %7, i32 0, i32 1, !dbg !3765
  store i64* %__self_01, i64** %__self_0.dbg.spill2, align 8, !dbg !3765
  call void @llvm.dbg.declare(metadata i64** %__self_0.dbg.spill2, metadata !3748, metadata !DIExpression()), !dbg !3766
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_8, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [11 x i8] }>* @alloc1121 to [0 x i8]*), i64 11), !dbg !3767
  br label %bb4, !dbg !3767

bb1:                                              ; preds = %start
  %8 = bitcast i64** %_3 to %"slice::BlockAddress"**, !dbg !3768
  %9 = load %"slice::BlockAddress"*, %"slice::BlockAddress"** %8, align 8, !dbg !3768, !nonnull !4
  %10 = bitcast %"slice::BlockAddress"* %9 to %"slice::BlockAddress::SomeBitsAt"*, !dbg !3768
  %__self_0 = getelementptr inbounds %"slice::BlockAddress::SomeBitsAt", %"slice::BlockAddress::SomeBitsAt"* %10, i32 0, i32 1, !dbg !3768
  store { i64, i64 }* %__self_0, { i64, i64 }** %__self_0.dbg.spill, align 8, !dbg !3768
  call void @llvm.dbg.declare(metadata { i64, i64 }** %__self_0.dbg.spill, metadata !3759, metadata !DIExpression()), !dbg !3769
  %11 = bitcast i64** %_3 to %"slice::BlockAddress"**, !dbg !3770
  %12 = load %"slice::BlockAddress"*, %"slice::BlockAddress"** %11, align 8, !dbg !3770, !nonnull !4
  %13 = bitcast %"slice::BlockAddress"* %12 to %"slice::BlockAddress::SomeBitsAt"*, !dbg !3770
  %__self_1 = getelementptr inbounds %"slice::BlockAddress::SomeBitsAt", %"slice::BlockAddress::SomeBitsAt"* %13, i32 0, i32 2, !dbg !3770
  store i64* %__self_1, i64** %__self_1.dbg.spill, align 8, !dbg !3770
  call void @llvm.dbg.declare(metadata i64** %__self_1.dbg.spill, metadata !3761, metadata !DIExpression()), !dbg !3771
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24) %_22, %"std::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [10 x i8] }>* @alloc1117 to [0 x i8]*), i64 10), !dbg !3772
  br label %bb6, !dbg !3772

bb6:                                              ; preds = %bb1
  store %"std::fmt::DebugTuple"* %_22, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !3772
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !3762, metadata !DIExpression()), !dbg !3773
  store { i64, i64 }* %__self_0, { i64, i64 }** %_31, align 8, !dbg !3774
  %_28.0 = bitcast { i64, i64 }** %_31 to {}*, !dbg !3774
; call core::fmt::builders::DebugTuple::field
  %_26 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_22, {}* nonnull align 1 %_28.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.6 to [3 x i64]*)), !dbg !3773
  br label %bb7, !dbg !3773

bb7:                                              ; preds = %bb6
  store i64* %__self_1, i64** %_37, align 8, !dbg !3775
  %_34.0 = bitcast i64** %_37 to {}*, !dbg !3775
; call core::fmt::builders::DebugTuple::field
  %_32 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_22, {}* nonnull align 1 %_34.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !3773
  br label %bb8, !dbg !3773

bb8:                                              ; preds = %bb7
; call core::fmt::builders::DebugTuple::finish
  %14 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_22), !dbg !3773
  %15 = zext i1 %14 to i8, !dbg !3773
  store i8 %15, i8* %0, align 1, !dbg !3773
  br label %bb9, !dbg !3773

bb9:                                              ; preds = %bb5, %bb8
  %16 = load i8, i8* %0, align 1, !dbg !3776, !range !978
  %17 = trunc i8 %16 to i1, !dbg !3776
  ret i1 %17, !dbg !3776

bb4:                                              ; preds = %bb3
  store %"std::fmt::DebugTuple"* %_8, %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill3, align 8, !dbg !3767
  call void @llvm.dbg.declare(metadata %"std::fmt::DebugTuple"** %debug_trait_builder.dbg.spill3, metadata !3750, metadata !DIExpression()), !dbg !3777
  store i64* %__self_01, i64** %_17, align 8, !dbg !3778
  %_14.0 = bitcast i64** %_17 to {}*, !dbg !3778
; call core::fmt::builders::DebugTuple::field
  %_12 = call align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_8, {}* nonnull align 1 %_14.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.3 to [3 x i64]*)), !dbg !3777
  br label %bb5, !dbg !3777

bb5:                                              ; preds = %bb4
; call core::fmt::builders::DebugTuple::finish
  %18 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24) %_8), !dbg !3777
  %19 = zext i1 %18 to i8, !dbg !3777
  store i8 %19, i8* %0, align 1, !dbg !3777
  br label %bb9, !dbg !3777
}

; <<bv::bit_vec::BitVec<Block> as serde::de::Deserialize>::deserialize::_::<impl serde::de::Deserialize for <bv::bit_vec::BitVec<Block> as serde::de::Deserialize>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor as serde::de::Visitor>::expecting
; Function Attrs: nounwind
define zeroext i1 @"_ZN323_$LT$$LT$bv..bit_vec..BitVec$LT$Block$GT$$u20$as$u20$serde..de..Deserialize$GT$..deserialize.._..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$$LT$bv..bit_vec..BitVec$LT$Block$GT$$u20$as$u20$serde..de..Deserialize$GT$..deserialize..Unchecked$LT$Block$GT$$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$GT$9expecting17h602ff1b02b8b3ee1E"(%"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor"* nonnull align 1 %self, %"std::fmt::Formatter"* align 8 dereferenceable(64) %__formatter) unnamed_addr #1 !dbg !3779 {
start:
  %__formatter.dbg.spill = alloca %"std::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca %"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor"*, align 8
  store %"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor"* %self, %"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"<bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::_::<impl serde::Deserialize<'de> for <bit_vec::BitVec<Block> as serde::Deserialize<'de>>::deserialize::Unchecked<Block>>::deserialize::__FieldVisitor"** %self.dbg.spill, metadata !3792, metadata !DIExpression()), !dbg !3794
  store %"std::fmt::Formatter"* %__formatter, %"std::fmt::Formatter"** %__formatter.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"std::fmt::Formatter"** %__formatter.dbg.spill, metadata !3793, metadata !DIExpression()), !dbg !3794
; call core::fmt::Formatter::write_str
  %0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h1c97a1e0c2250458E(%"std::fmt::Formatter"* align 8 dereferenceable(64) %__formatter, [0 x i8]* nonnull align 1 bitcast (<{ [16 x i8] }>* @alloc1122 to [0 x i8]*), i64 16), !dbg !3794
  br label %bb1, !dbg !3794

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !3795
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 0]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7bit_len17hab3323a5f0a42cc3E"([0 x i8]* nonnull align 1 %self) unnamed_addr #1 !dbg !3796 {
start:
  %self.dbg.spill = alloca [0 x i8]*, align 8
  store [0 x i8]* %self, [0 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [0 x i8]** %self.dbg.spill, metadata !3807, metadata !DIExpression()), !dbg !3808
  ret i64 0, !dbg !3809
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 0]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7get_bit17hb56f2bb5ecf0a9a2E"([0 x i8]* nonnull align 1 %self, i64 %position) unnamed_addr #1 !dbg !3810 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [0 x i8]*, align 8
  store [0 x i8]* %self, [0 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [0 x i8]** %self.dbg.spill, metadata !3814, metadata !DIExpression()), !dbg !3816
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3815, metadata !DIExpression()), !dbg !3817
  %_6 = icmp ult i64 %position, 0, !dbg !3818
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3818
  br i1 %0, label %bb1, label %panic, !dbg !3818

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [0 x i8], [0 x i8]* %self, i64 0, i64 %position, !dbg !3818
  %2 = load i8, i8* %1, align 1, !dbg !3818, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3818
  ret i1 %3, !dbg !3819

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 0, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3818
  unreachable, !dbg !3818
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 0]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7set_bit17hb161c47e77e114ecE"([0 x i8]* nonnull align 1 %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3820 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [0 x i8]*, align 8
  store [0 x i8]* %self, [0 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [0 x i8]** %self.dbg.spill, metadata !3826, metadata !DIExpression()), !dbg !3829
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3827, metadata !DIExpression()), !dbg !3830
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3828, metadata !DIExpression()), !dbg !3831
  %_8 = icmp ult i64 %position, 0, !dbg !3832
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !3832
  br i1 %1, label %bb1, label %panic, !dbg !3832

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [0 x i8], [0 x i8]* %self, i64 0, i64 %position, !dbg !3832
  %3 = zext i1 %value to i8, !dbg !3832
  store i8 %3, i8* %2, align 1, !dbg !3832
  ret void, !dbg !3833

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 0, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3832
  unreachable, !dbg !3832
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7bit_len17he18952877950703bE"([1 x i8]* align 1 dereferenceable(1) %self) unnamed_addr #1 !dbg !3834 {
start:
  %self.dbg.spill = alloca [1 x i8]*, align 8
  store [1 x i8]* %self, [1 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i8]** %self.dbg.spill, metadata !3843, metadata !DIExpression()), !dbg !3844
  ret i64 1, !dbg !3845
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7get_bit17habf32bea56324096E"([1 x i8]* align 1 dereferenceable(1) %self, i64 %position) unnamed_addr #1 !dbg !3846 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1 x i8]*, align 8
  store [1 x i8]* %self, [1 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i8]** %self.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3852
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3851, metadata !DIExpression()), !dbg !3853
  %_6 = icmp ult i64 %position, 1, !dbg !3854
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3854
  br i1 %0, label %bb1, label %panic, !dbg !3854

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [1 x i8], [1 x i8]* %self, i64 0, i64 %position, !dbg !3854
  %2 = load i8, i8* %1, align 1, !dbg !3854, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3854
  ret i1 %3, !dbg !3855

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3854
  unreachable, !dbg !3854
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 1]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7set_bit17h0421d474365511faE"([1 x i8]* align 1 dereferenceable(1) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3856 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1 x i8]*, align 8
  store [1 x i8]* %self, [1 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1 x i8]** %self.dbg.spill, metadata !3862, metadata !DIExpression()), !dbg !3865
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3863, metadata !DIExpression()), !dbg !3866
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3864, metadata !DIExpression()), !dbg !3867
  %_8 = icmp ult i64 %position, 1, !dbg !3868
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !3868
  br i1 %1, label %bb1, label %panic, !dbg !3868

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [1 x i8], [1 x i8]* %self, i64 0, i64 %position, !dbg !3868
  %3 = zext i1 %value to i8, !dbg !3868
  store i8 %3, i8* %2, align 1, !dbg !3868
  ret void, !dbg !3869

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3868
  unreachable, !dbg !3868
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 2]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7bit_len17hee0a3f3e599a3306E"([2 x i8]* align 1 dereferenceable(2) %self) unnamed_addr #1 !dbg !3870 {
start:
  %self.dbg.spill = alloca [2 x i8]*, align 8
  store [2 x i8]* %self, [2 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i8]** %self.dbg.spill, metadata !3879, metadata !DIExpression()), !dbg !3880
  ret i64 2, !dbg !3881
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 2]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7get_bit17h7d1bdaa9a08b8ed7E"([2 x i8]* align 1 dereferenceable(2) %self, i64 %position) unnamed_addr #1 !dbg !3882 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [2 x i8]*, align 8
  store [2 x i8]* %self, [2 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i8]** %self.dbg.spill, metadata !3886, metadata !DIExpression()), !dbg !3888
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3887, metadata !DIExpression()), !dbg !3889
  %_6 = icmp ult i64 %position, 2, !dbg !3890
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3890
  br i1 %0, label %bb1, label %panic, !dbg !3890

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [2 x i8], [2 x i8]* %self, i64 0, i64 %position, !dbg !3890
  %2 = load i8, i8* %1, align 1, !dbg !3890, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3890
  ret i1 %3, !dbg !3891

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3890
  unreachable, !dbg !3890
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 2]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7set_bit17h9d4d8e2d195c0700E"([2 x i8]* align 1 dereferenceable(2) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3892 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [2 x i8]*, align 8
  store [2 x i8]* %self, [2 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2 x i8]** %self.dbg.spill, metadata !3898, metadata !DIExpression()), !dbg !3901
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3899, metadata !DIExpression()), !dbg !3902
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3900, metadata !DIExpression()), !dbg !3903
  %_8 = icmp ult i64 %position, 2, !dbg !3904
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !3904
  br i1 %1, label %bb1, label %panic, !dbg !3904

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [2 x i8], [2 x i8]* %self, i64 0, i64 %position, !dbg !3904
  %3 = zext i1 %value to i8, !dbg !3904
  store i8 %3, i8* %2, align 1, !dbg !3904
  ret void, !dbg !3905

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 2, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3904
  unreachable, !dbg !3904
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 3]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7bit_len17h88003a7f0e443dbcE"([3 x i8]* align 1 dereferenceable(3) %self) unnamed_addr #1 !dbg !3906 {
start:
  %self.dbg.spill = alloca [3 x i8]*, align 8
  store [3 x i8]* %self, [3 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %self.dbg.spill, metadata !3913, metadata !DIExpression()), !dbg !3914
  ret i64 3, !dbg !3915
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 3]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7get_bit17h00eefa0dd9857ac1E"([3 x i8]* align 1 dereferenceable(3) %self, i64 %position) unnamed_addr #1 !dbg !3916 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [3 x i8]*, align 8
  store [3 x i8]* %self, [3 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %self.dbg.spill, metadata !3920, metadata !DIExpression()), !dbg !3922
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3921, metadata !DIExpression()), !dbg !3923
  %_6 = icmp ult i64 %position, 3, !dbg !3924
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3924
  br i1 %0, label %bb1, label %panic, !dbg !3924

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [3 x i8], [3 x i8]* %self, i64 0, i64 %position, !dbg !3924
  %2 = load i8, i8* %1, align 1, !dbg !3924, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3924
  ret i1 %3, !dbg !3925

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 3, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3924
  unreachable, !dbg !3924
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 3]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7set_bit17h58168039a30ba33aE"([3 x i8]* align 1 dereferenceable(3) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3926 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [3 x i8]*, align 8
  store [3 x i8]* %self, [3 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [3 x i8]** %self.dbg.spill, metadata !3932, metadata !DIExpression()), !dbg !3935
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3933, metadata !DIExpression()), !dbg !3936
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3934, metadata !DIExpression()), !dbg !3937
  %_8 = icmp ult i64 %position, 3, !dbg !3938
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !3938
  br i1 %1, label %bb1, label %panic, !dbg !3938

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [3 x i8], [3 x i8]* %self, i64 0, i64 %position, !dbg !3938
  %3 = zext i1 %value to i8, !dbg !3938
  store i8 %3, i8* %2, align 1, !dbg !3938
  ret void, !dbg !3939

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 3, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3938
  unreachable, !dbg !3938
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 4]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7bit_len17h2414192b10521f73E"([4 x i8]* align 1 dereferenceable(4) %self) unnamed_addr #1 !dbg !3940 {
start:
  %self.dbg.spill = alloca [4 x i8]*, align 8
  store [4 x i8]* %self, [4 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill, metadata !3949, metadata !DIExpression()), !dbg !3950
  ret i64 4, !dbg !3951
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 4]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7get_bit17h1a8da3366fe2de87E"([4 x i8]* align 1 dereferenceable(4) %self, i64 %position) unnamed_addr #1 !dbg !3952 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [4 x i8]*, align 8
  store [4 x i8]* %self, [4 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill, metadata !3956, metadata !DIExpression()), !dbg !3958
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3957, metadata !DIExpression()), !dbg !3959
  %_6 = icmp ult i64 %position, 4, !dbg !3960
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3960
  br i1 %0, label %bb1, label %panic, !dbg !3960

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [4 x i8], [4 x i8]* %self, i64 0, i64 %position, !dbg !3960
  %2 = load i8, i8* %1, align 1, !dbg !3960, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3960
  ret i1 %3, !dbg !3961

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 4, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3960
  unreachable, !dbg !3960
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 4]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7set_bit17he2b68de1644c2d11E"([4 x i8]* align 1 dereferenceable(4) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3962 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [4 x i8]*, align 8
  store [4 x i8]* %self, [4 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %self.dbg.spill, metadata !3968, metadata !DIExpression()), !dbg !3971
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3969, metadata !DIExpression()), !dbg !3972
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !3970, metadata !DIExpression()), !dbg !3973
  %_8 = icmp ult i64 %position, 4, !dbg !3974
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !3974
  br i1 %1, label %bb1, label %panic, !dbg !3974

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [4 x i8], [4 x i8]* %self, i64 0, i64 %position, !dbg !3974
  %3 = zext i1 %value to i8, !dbg !3974
  store i8 %3, i8* %2, align 1, !dbg !3974
  ret void, !dbg !3975

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 4, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3974
  unreachable, !dbg !3974
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 5]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7bit_len17he7b56926e565c010E"([5 x i8]* align 1 dereferenceable(5) %self) unnamed_addr #1 !dbg !3976 {
start:
  %self.dbg.spill = alloca [5 x i8]*, align 8
  store [5 x i8]* %self, [5 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i8]** %self.dbg.spill, metadata !3985, metadata !DIExpression()), !dbg !3986
  ret i64 5, !dbg !3987
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 5]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7get_bit17h3ba389c4c96b5e45E"([5 x i8]* align 1 dereferenceable(5) %self, i64 %position) unnamed_addr #1 !dbg !3988 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [5 x i8]*, align 8
  store [5 x i8]* %self, [5 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i8]** %self.dbg.spill, metadata !3992, metadata !DIExpression()), !dbg !3994
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !3993, metadata !DIExpression()), !dbg !3995
  %_6 = icmp ult i64 %position, 5, !dbg !3996
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !3996
  br i1 %0, label %bb1, label %panic, !dbg !3996

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [5 x i8], [5 x i8]* %self, i64 0, i64 %position, !dbg !3996
  %2 = load i8, i8* %1, align 1, !dbg !3996, !range !978
  %3 = trunc i8 %2 to i1, !dbg !3996
  ret i1 %3, !dbg !3997

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 5, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !3996
  unreachable, !dbg !3996
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 5]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7set_bit17h16612311837961deE"([5 x i8]* align 1 dereferenceable(5) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !3998 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [5 x i8]*, align 8
  store [5 x i8]* %self, [5 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [5 x i8]** %self.dbg.spill, metadata !4004, metadata !DIExpression()), !dbg !4007
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4005, metadata !DIExpression()), !dbg !4008
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4006, metadata !DIExpression()), !dbg !4009
  %_8 = icmp ult i64 %position, 5, !dbg !4010
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4010
  br i1 %1, label %bb1, label %panic, !dbg !4010

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %self, i64 0, i64 %position, !dbg !4010
  %3 = zext i1 %value to i8, !dbg !4010
  store i8 %3, i8* %2, align 1, !dbg !4010
  ret void, !dbg !4011

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 5, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4010
  unreachable, !dbg !4010
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 6]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7bit_len17h17f01380d54b0edeE"([6 x i8]* align 1 dereferenceable(6) %self) unnamed_addr #1 !dbg !4012 {
start:
  %self.dbg.spill = alloca [6 x i8]*, align 8
  store [6 x i8]* %self, [6 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i8]** %self.dbg.spill, metadata !4021, metadata !DIExpression()), !dbg !4022
  ret i64 6, !dbg !4023
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 6]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7get_bit17h52d8fb8d28763b13E"([6 x i8]* align 1 dereferenceable(6) %self, i64 %position) unnamed_addr #1 !dbg !4024 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [6 x i8]*, align 8
  store [6 x i8]* %self, [6 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i8]** %self.dbg.spill, metadata !4028, metadata !DIExpression()), !dbg !4030
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4029, metadata !DIExpression()), !dbg !4031
  %_6 = icmp ult i64 %position, 6, !dbg !4032
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4032
  br i1 %0, label %bb1, label %panic, !dbg !4032

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [6 x i8], [6 x i8]* %self, i64 0, i64 %position, !dbg !4032
  %2 = load i8, i8* %1, align 1, !dbg !4032, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4032
  ret i1 %3, !dbg !4033

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 6, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4032
  unreachable, !dbg !4032
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 6]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7set_bit17h08af0040277e0869E"([6 x i8]* align 1 dereferenceable(6) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4034 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [6 x i8]*, align 8
  store [6 x i8]* %self, [6 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [6 x i8]** %self.dbg.spill, metadata !4040, metadata !DIExpression()), !dbg !4043
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4041, metadata !DIExpression()), !dbg !4044
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4042, metadata !DIExpression()), !dbg !4045
  %_8 = icmp ult i64 %position, 6, !dbg !4046
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4046
  br i1 %1, label %bb1, label %panic, !dbg !4046

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [6 x i8], [6 x i8]* %self, i64 0, i64 %position, !dbg !4046
  %3 = zext i1 %value to i8, !dbg !4046
  store i8 %3, i8* %2, align 1, !dbg !4046
  ret void, !dbg !4047

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 6, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4046
  unreachable, !dbg !4046
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 7]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7bit_len17h58894c01c7f736e0E"([7 x i8]* align 1 dereferenceable(7) %self) unnamed_addr #1 !dbg !4048 {
start:
  %self.dbg.spill = alloca [7 x i8]*, align 8
  store [7 x i8]* %self, [7 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]** %self.dbg.spill, metadata !4057, metadata !DIExpression()), !dbg !4058
  ret i64 7, !dbg !4059
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 7]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7get_bit17h3eb25348c5887d35E"([7 x i8]* align 1 dereferenceable(7) %self, i64 %position) unnamed_addr #1 !dbg !4060 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [7 x i8]*, align 8
  store [7 x i8]* %self, [7 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]** %self.dbg.spill, metadata !4064, metadata !DIExpression()), !dbg !4066
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4065, metadata !DIExpression()), !dbg !4067
  %_6 = icmp ult i64 %position, 7, !dbg !4068
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4068
  br i1 %0, label %bb1, label %panic, !dbg !4068

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [7 x i8], [7 x i8]* %self, i64 0, i64 %position, !dbg !4068
  %2 = load i8, i8* %1, align 1, !dbg !4068, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4068
  ret i1 %3, !dbg !4069

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 7, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4068
  unreachable, !dbg !4068
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 7]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7set_bit17h0d1867c44eb9332cE"([7 x i8]* align 1 dereferenceable(7) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4070 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [7 x i8]*, align 8
  store [7 x i8]* %self, [7 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]** %self.dbg.spill, metadata !4076, metadata !DIExpression()), !dbg !4079
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4077, metadata !DIExpression()), !dbg !4080
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4078, metadata !DIExpression()), !dbg !4081
  %_8 = icmp ult i64 %position, 7, !dbg !4082
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4082
  br i1 %1, label %bb1, label %panic, !dbg !4082

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [7 x i8], [7 x i8]* %self, i64 0, i64 %position, !dbg !4082
  %3 = zext i1 %value to i8, !dbg !4082
  store i8 %3, i8* %2, align 1, !dbg !4082
  ret void, !dbg !4083

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 7, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4082
  unreachable, !dbg !4082
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 8]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7bit_len17h2ec3f02daa81472dE"([8 x i8]* align 1 dereferenceable(8) %self) unnamed_addr #1 !dbg !4084 {
start:
  %self.dbg.spill = alloca [8 x i8]*, align 8
  store [8 x i8]* %self, [8 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %self.dbg.spill, metadata !4093, metadata !DIExpression()), !dbg !4094
  ret i64 8, !dbg !4095
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 8]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7get_bit17hfc962d470cda13beE"([8 x i8]* align 1 dereferenceable(8) %self, i64 %position) unnamed_addr #1 !dbg !4096 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [8 x i8]*, align 8
  store [8 x i8]* %self, [8 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %self.dbg.spill, metadata !4100, metadata !DIExpression()), !dbg !4102
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4101, metadata !DIExpression()), !dbg !4103
  %_6 = icmp ult i64 %position, 8, !dbg !4104
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4104
  br i1 %0, label %bb1, label %panic, !dbg !4104

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [8 x i8], [8 x i8]* %self, i64 0, i64 %position, !dbg !4104
  %2 = load i8, i8* %1, align 1, !dbg !4104, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4104
  ret i1 %3, !dbg !4105

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 8, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4104
  unreachable, !dbg !4104
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 8]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7set_bit17h434577bebb7fe3f8E"([8 x i8]* align 1 dereferenceable(8) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4106 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [8 x i8]*, align 8
  store [8 x i8]* %self, [8 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8 x i8]** %self.dbg.spill, metadata !4112, metadata !DIExpression()), !dbg !4115
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4113, metadata !DIExpression()), !dbg !4116
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4114, metadata !DIExpression()), !dbg !4117
  %_8 = icmp ult i64 %position, 8, !dbg !4118
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4118
  br i1 %1, label %bb1, label %panic, !dbg !4118

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [8 x i8], [8 x i8]* %self, i64 0, i64 %position, !dbg !4118
  %3 = zext i1 %value to i8, !dbg !4118
  store i8 %3, i8* %2, align 1, !dbg !4118
  ret void, !dbg !4119

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 8, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4118
  unreachable, !dbg !4118
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 9]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7bit_len17he330ed37ea6f07e1E"([9 x i8]* align 1 dereferenceable(9) %self) unnamed_addr #1 !dbg !4120 {
start:
  %self.dbg.spill = alloca [9 x i8]*, align 8
  store [9 x i8]* %self, [9 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [9 x i8]** %self.dbg.spill, metadata !4129, metadata !DIExpression()), !dbg !4130
  ret i64 9, !dbg !4131
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 9]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7get_bit17hfe0b3388beb5bd56E"([9 x i8]* align 1 dereferenceable(9) %self, i64 %position) unnamed_addr #1 !dbg !4132 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [9 x i8]*, align 8
  store [9 x i8]* %self, [9 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [9 x i8]** %self.dbg.spill, metadata !4136, metadata !DIExpression()), !dbg !4138
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4137, metadata !DIExpression()), !dbg !4139
  %_6 = icmp ult i64 %position, 9, !dbg !4140
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4140
  br i1 %0, label %bb1, label %panic, !dbg !4140

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [9 x i8], [9 x i8]* %self, i64 0, i64 %position, !dbg !4140
  %2 = load i8, i8* %1, align 1, !dbg !4140, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4140
  ret i1 %3, !dbg !4141

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 9, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4140
  unreachable, !dbg !4140
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 9]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7set_bit17h3a63a393a23241a5E"([9 x i8]* align 1 dereferenceable(9) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4142 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [9 x i8]*, align 8
  store [9 x i8]* %self, [9 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [9 x i8]** %self.dbg.spill, metadata !4148, metadata !DIExpression()), !dbg !4151
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4149, metadata !DIExpression()), !dbg !4152
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4150, metadata !DIExpression()), !dbg !4153
  %_8 = icmp ult i64 %position, 9, !dbg !4154
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4154
  br i1 %1, label %bb1, label %panic, !dbg !4154

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [9 x i8], [9 x i8]* %self, i64 0, i64 %position, !dbg !4154
  %3 = zext i1 %value to i8, !dbg !4154
  store i8 %3, i8* %2, align 1, !dbg !4154
  ret void, !dbg !4155

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 9, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4154
  unreachable, !dbg !4154
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 10]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7bit_len17hc1f04a444c63c5a6E"([10 x i8]* align 1 dereferenceable(10) %self) unnamed_addr #1 !dbg !4156 {
start:
  %self.dbg.spill = alloca [10 x i8]*, align 8
  store [10 x i8]* %self, [10 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i8]** %self.dbg.spill, metadata !4165, metadata !DIExpression()), !dbg !4166
  ret i64 10, !dbg !4167
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 10]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7get_bit17h8b10e598d25c443dE"([10 x i8]* align 1 dereferenceable(10) %self, i64 %position) unnamed_addr #1 !dbg !4168 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [10 x i8]*, align 8
  store [10 x i8]* %self, [10 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i8]** %self.dbg.spill, metadata !4172, metadata !DIExpression()), !dbg !4174
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4173, metadata !DIExpression()), !dbg !4175
  %_6 = icmp ult i64 %position, 10, !dbg !4176
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4176
  br i1 %0, label %bb1, label %panic, !dbg !4176

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [10 x i8], [10 x i8]* %self, i64 0, i64 %position, !dbg !4176
  %2 = load i8, i8* %1, align 1, !dbg !4176, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4176
  ret i1 %3, !dbg !4177

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 10, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4176
  unreachable, !dbg !4176
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 10]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7set_bit17h2e19934cf269c895E"([10 x i8]* align 1 dereferenceable(10) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4178 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [10 x i8]*, align 8
  store [10 x i8]* %self, [10 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [10 x i8]** %self.dbg.spill, metadata !4184, metadata !DIExpression()), !dbg !4187
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4185, metadata !DIExpression()), !dbg !4188
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4186, metadata !DIExpression()), !dbg !4189
  %_8 = icmp ult i64 %position, 10, !dbg !4190
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4190
  br i1 %1, label %bb1, label %panic, !dbg !4190

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [10 x i8], [10 x i8]* %self, i64 0, i64 %position, !dbg !4190
  %3 = zext i1 %value to i8, !dbg !4190
  store i8 %3, i8* %2, align 1, !dbg !4190
  ret void, !dbg !4191

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 10, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4190
  unreachable, !dbg !4190
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 11]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7bit_len17h9ba64dcfa0a33aefE"([11 x i8]* align 1 dereferenceable(11) %self) unnamed_addr #1 !dbg !4192 {
start:
  %self.dbg.spill = alloca [11 x i8]*, align 8
  store [11 x i8]* %self, [11 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i8]** %self.dbg.spill, metadata !4201, metadata !DIExpression()), !dbg !4202
  ret i64 11, !dbg !4203
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 11]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7get_bit17h890ecb5860878795E"([11 x i8]* align 1 dereferenceable(11) %self, i64 %position) unnamed_addr #1 !dbg !4204 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [11 x i8]*, align 8
  store [11 x i8]* %self, [11 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i8]** %self.dbg.spill, metadata !4208, metadata !DIExpression()), !dbg !4210
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4209, metadata !DIExpression()), !dbg !4211
  %_6 = icmp ult i64 %position, 11, !dbg !4212
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4212
  br i1 %0, label %bb1, label %panic, !dbg !4212

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [11 x i8], [11 x i8]* %self, i64 0, i64 %position, !dbg !4212
  %2 = load i8, i8* %1, align 1, !dbg !4212, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4212
  ret i1 %3, !dbg !4213

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 11, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4212
  unreachable, !dbg !4212
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 11]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7set_bit17hea2b6f0956789b6eE"([11 x i8]* align 1 dereferenceable(11) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4214 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [11 x i8]*, align 8
  store [11 x i8]* %self, [11 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [11 x i8]** %self.dbg.spill, metadata !4220, metadata !DIExpression()), !dbg !4223
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4221, metadata !DIExpression()), !dbg !4224
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4222, metadata !DIExpression()), !dbg !4225
  %_8 = icmp ult i64 %position, 11, !dbg !4226
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4226
  br i1 %1, label %bb1, label %panic, !dbg !4226

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [11 x i8], [11 x i8]* %self, i64 0, i64 %position, !dbg !4226
  %3 = zext i1 %value to i8, !dbg !4226
  store i8 %3, i8* %2, align 1, !dbg !4226
  ret void, !dbg !4227

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 11, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4226
  unreachable, !dbg !4226
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 12]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7bit_len17h40e29e3d29a1e07cE"([12 x i8]* align 1 dereferenceable(12) %self) unnamed_addr #1 !dbg !4228 {
start:
  %self.dbg.spill = alloca [12 x i8]*, align 8
  store [12 x i8]* %self, [12 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [12 x i8]** %self.dbg.spill, metadata !4237, metadata !DIExpression()), !dbg !4238
  ret i64 12, !dbg !4239
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 12]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7get_bit17h6ed935b3581a6523E"([12 x i8]* align 1 dereferenceable(12) %self, i64 %position) unnamed_addr #1 !dbg !4240 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [12 x i8]*, align 8
  store [12 x i8]* %self, [12 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [12 x i8]** %self.dbg.spill, metadata !4244, metadata !DIExpression()), !dbg !4246
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4245, metadata !DIExpression()), !dbg !4247
  %_6 = icmp ult i64 %position, 12, !dbg !4248
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4248
  br i1 %0, label %bb1, label %panic, !dbg !4248

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [12 x i8], [12 x i8]* %self, i64 0, i64 %position, !dbg !4248
  %2 = load i8, i8* %1, align 1, !dbg !4248, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4248
  ret i1 %3, !dbg !4249

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 12, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4248
  unreachable, !dbg !4248
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 12]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7set_bit17h71e505b91d6e3742E"([12 x i8]* align 1 dereferenceable(12) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4250 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [12 x i8]*, align 8
  store [12 x i8]* %self, [12 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [12 x i8]** %self.dbg.spill, metadata !4256, metadata !DIExpression()), !dbg !4259
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4257, metadata !DIExpression()), !dbg !4260
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4258, metadata !DIExpression()), !dbg !4261
  %_8 = icmp ult i64 %position, 12, !dbg !4262
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4262
  br i1 %1, label %bb1, label %panic, !dbg !4262

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [12 x i8], [12 x i8]* %self, i64 0, i64 %position, !dbg !4262
  %3 = zext i1 %value to i8, !dbg !4262
  store i8 %3, i8* %2, align 1, !dbg !4262
  ret void, !dbg !4263

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 12, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4262
  unreachable, !dbg !4262
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 13]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7bit_len17h8006a900c35568e7E"([13 x i8]* align 1 dereferenceable(13) %self) unnamed_addr #1 !dbg !4264 {
start:
  %self.dbg.spill = alloca [13 x i8]*, align 8
  store [13 x i8]* %self, [13 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [13 x i8]** %self.dbg.spill, metadata !4273, metadata !DIExpression()), !dbg !4274
  ret i64 13, !dbg !4275
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 13]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7get_bit17h405e7834b8076c6aE"([13 x i8]* align 1 dereferenceable(13) %self, i64 %position) unnamed_addr #1 !dbg !4276 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [13 x i8]*, align 8
  store [13 x i8]* %self, [13 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [13 x i8]** %self.dbg.spill, metadata !4280, metadata !DIExpression()), !dbg !4282
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4281, metadata !DIExpression()), !dbg !4283
  %_6 = icmp ult i64 %position, 13, !dbg !4284
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4284
  br i1 %0, label %bb1, label %panic, !dbg !4284

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [13 x i8], [13 x i8]* %self, i64 0, i64 %position, !dbg !4284
  %2 = load i8, i8* %1, align 1, !dbg !4284, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4284
  ret i1 %3, !dbg !4285

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 13, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4284
  unreachable, !dbg !4284
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 13]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7set_bit17h7db8c3f0ea636402E"([13 x i8]* align 1 dereferenceable(13) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4286 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [13 x i8]*, align 8
  store [13 x i8]* %self, [13 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [13 x i8]** %self.dbg.spill, metadata !4292, metadata !DIExpression()), !dbg !4295
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4293, metadata !DIExpression()), !dbg !4296
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4294, metadata !DIExpression()), !dbg !4297
  %_8 = icmp ult i64 %position, 13, !dbg !4298
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4298
  br i1 %1, label %bb1, label %panic, !dbg !4298

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [13 x i8], [13 x i8]* %self, i64 0, i64 %position, !dbg !4298
  %3 = zext i1 %value to i8, !dbg !4298
  store i8 %3, i8* %2, align 1, !dbg !4298
  ret void, !dbg !4299

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 13, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4298
  unreachable, !dbg !4298
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 14]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7bit_len17he7b39edaedd86a94E"([14 x i8]* align 1 dereferenceable(14) %self) unnamed_addr #1 !dbg !4300 {
start:
  %self.dbg.spill = alloca [14 x i8]*, align 8
  store [14 x i8]* %self, [14 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [14 x i8]** %self.dbg.spill, metadata !4309, metadata !DIExpression()), !dbg !4310
  ret i64 14, !dbg !4311
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 14]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7get_bit17h7275e2501fc46bd4E"([14 x i8]* align 1 dereferenceable(14) %self, i64 %position) unnamed_addr #1 !dbg !4312 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [14 x i8]*, align 8
  store [14 x i8]* %self, [14 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [14 x i8]** %self.dbg.spill, metadata !4316, metadata !DIExpression()), !dbg !4318
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4317, metadata !DIExpression()), !dbg !4319
  %_6 = icmp ult i64 %position, 14, !dbg !4320
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4320
  br i1 %0, label %bb1, label %panic, !dbg !4320

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [14 x i8], [14 x i8]* %self, i64 0, i64 %position, !dbg !4320
  %2 = load i8, i8* %1, align 1, !dbg !4320, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4320
  ret i1 %3, !dbg !4321

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 14, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4320
  unreachable, !dbg !4320
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 14]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7set_bit17hc896c97d6e75e583E"([14 x i8]* align 1 dereferenceable(14) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4322 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [14 x i8]*, align 8
  store [14 x i8]* %self, [14 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [14 x i8]** %self.dbg.spill, metadata !4328, metadata !DIExpression()), !dbg !4331
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4329, metadata !DIExpression()), !dbg !4332
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4330, metadata !DIExpression()), !dbg !4333
  %_8 = icmp ult i64 %position, 14, !dbg !4334
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4334
  br i1 %1, label %bb1, label %panic, !dbg !4334

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [14 x i8], [14 x i8]* %self, i64 0, i64 %position, !dbg !4334
  %3 = zext i1 %value to i8, !dbg !4334
  store i8 %3, i8* %2, align 1, !dbg !4334
  ret void, !dbg !4335

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 14, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4334
  unreachable, !dbg !4334
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 15]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7bit_len17h530b3bf5409bcce9E"([15 x i8]* align 1 dereferenceable(15) %self) unnamed_addr #1 !dbg !4336 {
start:
  %self.dbg.spill = alloca [15 x i8]*, align 8
  store [15 x i8]* %self, [15 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [15 x i8]** %self.dbg.spill, metadata !4345, metadata !DIExpression()), !dbg !4346
  ret i64 15, !dbg !4347
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 15]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7get_bit17h0e6a7aa7bbe0a8fcE"([15 x i8]* align 1 dereferenceable(15) %self, i64 %position) unnamed_addr #1 !dbg !4348 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [15 x i8]*, align 8
  store [15 x i8]* %self, [15 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [15 x i8]** %self.dbg.spill, metadata !4352, metadata !DIExpression()), !dbg !4354
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4353, metadata !DIExpression()), !dbg !4355
  %_6 = icmp ult i64 %position, 15, !dbg !4356
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4356
  br i1 %0, label %bb1, label %panic, !dbg !4356

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [15 x i8], [15 x i8]* %self, i64 0, i64 %position, !dbg !4356
  %2 = load i8, i8* %1, align 1, !dbg !4356, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4356
  ret i1 %3, !dbg !4357

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 15, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4356
  unreachable, !dbg !4356
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 15]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7set_bit17h0a8eae8ebd0624ffE"([15 x i8]* align 1 dereferenceable(15) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4358 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [15 x i8]*, align 8
  store [15 x i8]* %self, [15 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [15 x i8]** %self.dbg.spill, metadata !4364, metadata !DIExpression()), !dbg !4367
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4365, metadata !DIExpression()), !dbg !4368
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4366, metadata !DIExpression()), !dbg !4369
  %_8 = icmp ult i64 %position, 15, !dbg !4370
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4370
  br i1 %1, label %bb1, label %panic, !dbg !4370

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* %self, i64 0, i64 %position, !dbg !4370
  %3 = zext i1 %value to i8, !dbg !4370
  store i8 %3, i8* %2, align 1, !dbg !4370
  ret void, !dbg !4371

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 15, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4370
  unreachable, !dbg !4370
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 16]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7bit_len17hcfdcdab34fd10d63E"([16 x i8]* align 1 dereferenceable(16) %self) unnamed_addr #1 !dbg !4372 {
start:
  %self.dbg.spill = alloca [16 x i8]*, align 8
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill, metadata !4381, metadata !DIExpression()), !dbg !4382
  ret i64 16, !dbg !4383
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 16]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7get_bit17h6f86b0f5aaf8f00dE"([16 x i8]* align 1 dereferenceable(16) %self, i64 %position) unnamed_addr #1 !dbg !4384 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [16 x i8]*, align 8
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill, metadata !4388, metadata !DIExpression()), !dbg !4390
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4389, metadata !DIExpression()), !dbg !4391
  %_6 = icmp ult i64 %position, 16, !dbg !4392
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4392
  br i1 %0, label %bb1, label %panic, !dbg !4392

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [16 x i8], [16 x i8]* %self, i64 0, i64 %position, !dbg !4392
  %2 = load i8, i8* %1, align 1, !dbg !4392, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4392
  ret i1 %3, !dbg !4393

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 16, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4392
  unreachable, !dbg !4392
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 16]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7set_bit17h9d0d61f2bbe90524E"([16 x i8]* align 1 dereferenceable(16) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4394 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [16 x i8]*, align 8
  store [16 x i8]* %self, [16 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16 x i8]** %self.dbg.spill, metadata !4400, metadata !DIExpression()), !dbg !4403
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4401, metadata !DIExpression()), !dbg !4404
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4402, metadata !DIExpression()), !dbg !4405
  %_8 = icmp ult i64 %position, 16, !dbg !4406
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4406
  br i1 %1, label %bb1, label %panic, !dbg !4406

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [16 x i8], [16 x i8]* %self, i64 0, i64 %position, !dbg !4406
  %3 = zext i1 %value to i8, !dbg !4406
  store i8 %3, i8* %2, align 1, !dbg !4406
  ret void, !dbg !4407

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 16, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4406
  unreachable, !dbg !4406
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 17]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7bit_len17h5055e5d86fc079f1E"([17 x i8]* align 1 dereferenceable(17) %self) unnamed_addr #1 !dbg !4408 {
start:
  %self.dbg.spill = alloca [17 x i8]*, align 8
  store [17 x i8]* %self, [17 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [17 x i8]** %self.dbg.spill, metadata !4417, metadata !DIExpression()), !dbg !4418
  ret i64 17, !dbg !4419
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 17]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7get_bit17hac52cefe328a40fdE"([17 x i8]* align 1 dereferenceable(17) %self, i64 %position) unnamed_addr #1 !dbg !4420 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [17 x i8]*, align 8
  store [17 x i8]* %self, [17 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [17 x i8]** %self.dbg.spill, metadata !4424, metadata !DIExpression()), !dbg !4426
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4425, metadata !DIExpression()), !dbg !4427
  %_6 = icmp ult i64 %position, 17, !dbg !4428
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4428
  br i1 %0, label %bb1, label %panic, !dbg !4428

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [17 x i8], [17 x i8]* %self, i64 0, i64 %position, !dbg !4428
  %2 = load i8, i8* %1, align 1, !dbg !4428, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4428
  ret i1 %3, !dbg !4429

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4428
  unreachable, !dbg !4428
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 17]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7set_bit17h25364fe7c8432aacE"([17 x i8]* align 1 dereferenceable(17) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4430 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [17 x i8]*, align 8
  store [17 x i8]* %self, [17 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [17 x i8]** %self.dbg.spill, metadata !4436, metadata !DIExpression()), !dbg !4439
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4437, metadata !DIExpression()), !dbg !4440
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4438, metadata !DIExpression()), !dbg !4441
  %_8 = icmp ult i64 %position, 17, !dbg !4442
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4442
  br i1 %1, label %bb1, label %panic, !dbg !4442

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [17 x i8], [17 x i8]* %self, i64 0, i64 %position, !dbg !4442
  %3 = zext i1 %value to i8, !dbg !4442
  store i8 %3, i8* %2, align 1, !dbg !4442
  ret void, !dbg !4443

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 17, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4442
  unreachable, !dbg !4442
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 18]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7bit_len17h66ffd094250c776fE"([18 x i8]* align 1 dereferenceable(18) %self) unnamed_addr #1 !dbg !4444 {
start:
  %self.dbg.spill = alloca [18 x i8]*, align 8
  store [18 x i8]* %self, [18 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [18 x i8]** %self.dbg.spill, metadata !4453, metadata !DIExpression()), !dbg !4454
  ret i64 18, !dbg !4455
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 18]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7get_bit17h17cd54d32abc9307E"([18 x i8]* align 1 dereferenceable(18) %self, i64 %position) unnamed_addr #1 !dbg !4456 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [18 x i8]*, align 8
  store [18 x i8]* %self, [18 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [18 x i8]** %self.dbg.spill, metadata !4460, metadata !DIExpression()), !dbg !4462
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4461, metadata !DIExpression()), !dbg !4463
  %_6 = icmp ult i64 %position, 18, !dbg !4464
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4464
  br i1 %0, label %bb1, label %panic, !dbg !4464

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [18 x i8], [18 x i8]* %self, i64 0, i64 %position, !dbg !4464
  %2 = load i8, i8* %1, align 1, !dbg !4464, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4464
  ret i1 %3, !dbg !4465

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 18, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4464
  unreachable, !dbg !4464
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 18]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7set_bit17h78d40eb270fdb3e5E"([18 x i8]* align 1 dereferenceable(18) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4466 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [18 x i8]*, align 8
  store [18 x i8]* %self, [18 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [18 x i8]** %self.dbg.spill, metadata !4472, metadata !DIExpression()), !dbg !4475
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4473, metadata !DIExpression()), !dbg !4476
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4474, metadata !DIExpression()), !dbg !4477
  %_8 = icmp ult i64 %position, 18, !dbg !4478
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4478
  br i1 %1, label %bb1, label %panic, !dbg !4478

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [18 x i8], [18 x i8]* %self, i64 0, i64 %position, !dbg !4478
  %3 = zext i1 %value to i8, !dbg !4478
  store i8 %3, i8* %2, align 1, !dbg !4478
  ret void, !dbg !4479

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 18, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4478
  unreachable, !dbg !4478
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 19]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7bit_len17hebe116ad5dee6cbeE"([19 x i8]* align 1 dereferenceable(19) %self) unnamed_addr #1 !dbg !4480 {
start:
  %self.dbg.spill = alloca [19 x i8]*, align 8
  store [19 x i8]* %self, [19 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [19 x i8]** %self.dbg.spill, metadata !4489, metadata !DIExpression()), !dbg !4490
  ret i64 19, !dbg !4491
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 19]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7get_bit17hb24b3ebbf2906cceE"([19 x i8]* align 1 dereferenceable(19) %self, i64 %position) unnamed_addr #1 !dbg !4492 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [19 x i8]*, align 8
  store [19 x i8]* %self, [19 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [19 x i8]** %self.dbg.spill, metadata !4496, metadata !DIExpression()), !dbg !4498
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4497, metadata !DIExpression()), !dbg !4499
  %_6 = icmp ult i64 %position, 19, !dbg !4500
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4500
  br i1 %0, label %bb1, label %panic, !dbg !4500

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [19 x i8], [19 x i8]* %self, i64 0, i64 %position, !dbg !4500
  %2 = load i8, i8* %1, align 1, !dbg !4500, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4500
  ret i1 %3, !dbg !4501

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 19, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4500
  unreachable, !dbg !4500
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 19]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7set_bit17h52946d0d75f38d45E"([19 x i8]* align 1 dereferenceable(19) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4502 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [19 x i8]*, align 8
  store [19 x i8]* %self, [19 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [19 x i8]** %self.dbg.spill, metadata !4508, metadata !DIExpression()), !dbg !4511
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4509, metadata !DIExpression()), !dbg !4512
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4510, metadata !DIExpression()), !dbg !4513
  %_8 = icmp ult i64 %position, 19, !dbg !4514
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4514
  br i1 %1, label %bb1, label %panic, !dbg !4514

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [19 x i8], [19 x i8]* %self, i64 0, i64 %position, !dbg !4514
  %3 = zext i1 %value to i8, !dbg !4514
  store i8 %3, i8* %2, align 1, !dbg !4514
  ret void, !dbg !4515

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 19, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4514
  unreachable, !dbg !4514
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 20]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7bit_len17h1849df1e9e987fd6E"([20 x i8]* align 1 dereferenceable(20) %self) unnamed_addr #1 !dbg !4516 {
start:
  %self.dbg.spill = alloca [20 x i8]*, align 8
  store [20 x i8]* %self, [20 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [20 x i8]** %self.dbg.spill, metadata !4525, metadata !DIExpression()), !dbg !4526
  ret i64 20, !dbg !4527
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 20]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7get_bit17h6fb2ddf41b3494d2E"([20 x i8]* align 1 dereferenceable(20) %self, i64 %position) unnamed_addr #1 !dbg !4528 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [20 x i8]*, align 8
  store [20 x i8]* %self, [20 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [20 x i8]** %self.dbg.spill, metadata !4532, metadata !DIExpression()), !dbg !4534
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4533, metadata !DIExpression()), !dbg !4535
  %_6 = icmp ult i64 %position, 20, !dbg !4536
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4536
  br i1 %0, label %bb1, label %panic, !dbg !4536

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [20 x i8], [20 x i8]* %self, i64 0, i64 %position, !dbg !4536
  %2 = load i8, i8* %1, align 1, !dbg !4536, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4536
  ret i1 %3, !dbg !4537

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 20, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4536
  unreachable, !dbg !4536
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 20]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7set_bit17hdce119be2d437aa6E"([20 x i8]* align 1 dereferenceable(20) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4538 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [20 x i8]*, align 8
  store [20 x i8]* %self, [20 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [20 x i8]** %self.dbg.spill, metadata !4544, metadata !DIExpression()), !dbg !4547
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4545, metadata !DIExpression()), !dbg !4548
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4546, metadata !DIExpression()), !dbg !4549
  %_8 = icmp ult i64 %position, 20, !dbg !4550
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4550
  br i1 %1, label %bb1, label %panic, !dbg !4550

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [20 x i8], [20 x i8]* %self, i64 0, i64 %position, !dbg !4550
  %3 = zext i1 %value to i8, !dbg !4550
  store i8 %3, i8* %2, align 1, !dbg !4550
  ret void, !dbg !4551

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 20, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4550
  unreachable, !dbg !4550
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 21]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7bit_len17h32e4008d598b4dcdE"([21 x i8]* align 1 dereferenceable(21) %self) unnamed_addr #1 !dbg !4552 {
start:
  %self.dbg.spill = alloca [21 x i8]*, align 8
  store [21 x i8]* %self, [21 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [21 x i8]** %self.dbg.spill, metadata !4561, metadata !DIExpression()), !dbg !4562
  ret i64 21, !dbg !4563
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 21]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7get_bit17hbab502da02664741E"([21 x i8]* align 1 dereferenceable(21) %self, i64 %position) unnamed_addr #1 !dbg !4564 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [21 x i8]*, align 8
  store [21 x i8]* %self, [21 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [21 x i8]** %self.dbg.spill, metadata !4568, metadata !DIExpression()), !dbg !4570
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4569, metadata !DIExpression()), !dbg !4571
  %_6 = icmp ult i64 %position, 21, !dbg !4572
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4572
  br i1 %0, label %bb1, label %panic, !dbg !4572

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [21 x i8], [21 x i8]* %self, i64 0, i64 %position, !dbg !4572
  %2 = load i8, i8* %1, align 1, !dbg !4572, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4572
  ret i1 %3, !dbg !4573

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 21, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4572
  unreachable, !dbg !4572
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 21]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7set_bit17hcc7891a088d6e377E"([21 x i8]* align 1 dereferenceable(21) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4574 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [21 x i8]*, align 8
  store [21 x i8]* %self, [21 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [21 x i8]** %self.dbg.spill, metadata !4580, metadata !DIExpression()), !dbg !4583
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4581, metadata !DIExpression()), !dbg !4584
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4582, metadata !DIExpression()), !dbg !4585
  %_8 = icmp ult i64 %position, 21, !dbg !4586
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4586
  br i1 %1, label %bb1, label %panic, !dbg !4586

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [21 x i8], [21 x i8]* %self, i64 0, i64 %position, !dbg !4586
  %3 = zext i1 %value to i8, !dbg !4586
  store i8 %3, i8* %2, align 1, !dbg !4586
  ret void, !dbg !4587

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 21, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4586
  unreachable, !dbg !4586
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 22]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7bit_len17h49336e55772700c9E"([22 x i8]* align 1 dereferenceable(22) %self) unnamed_addr #1 !dbg !4588 {
start:
  %self.dbg.spill = alloca [22 x i8]*, align 8
  store [22 x i8]* %self, [22 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [22 x i8]** %self.dbg.spill, metadata !4597, metadata !DIExpression()), !dbg !4598
  ret i64 22, !dbg !4599
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 22]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7get_bit17hb357be0a5da6a36fE"([22 x i8]* align 1 dereferenceable(22) %self, i64 %position) unnamed_addr #1 !dbg !4600 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [22 x i8]*, align 8
  store [22 x i8]* %self, [22 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [22 x i8]** %self.dbg.spill, metadata !4604, metadata !DIExpression()), !dbg !4606
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4605, metadata !DIExpression()), !dbg !4607
  %_6 = icmp ult i64 %position, 22, !dbg !4608
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4608
  br i1 %0, label %bb1, label %panic, !dbg !4608

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [22 x i8], [22 x i8]* %self, i64 0, i64 %position, !dbg !4608
  %2 = load i8, i8* %1, align 1, !dbg !4608, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4608
  ret i1 %3, !dbg !4609

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 22, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4608
  unreachable, !dbg !4608
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 22]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7set_bit17hfce2b9a7102fc2a5E"([22 x i8]* align 1 dereferenceable(22) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4610 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [22 x i8]*, align 8
  store [22 x i8]* %self, [22 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [22 x i8]** %self.dbg.spill, metadata !4616, metadata !DIExpression()), !dbg !4619
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4617, metadata !DIExpression()), !dbg !4620
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4618, metadata !DIExpression()), !dbg !4621
  %_8 = icmp ult i64 %position, 22, !dbg !4622
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4622
  br i1 %1, label %bb1, label %panic, !dbg !4622

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [22 x i8], [22 x i8]* %self, i64 0, i64 %position, !dbg !4622
  %3 = zext i1 %value to i8, !dbg !4622
  store i8 %3, i8* %2, align 1, !dbg !4622
  ret void, !dbg !4623

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 22, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4622
  unreachable, !dbg !4622
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 23]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7bit_len17h6e87215ff453d236E"([23 x i8]* align 1 dereferenceable(23) %self) unnamed_addr #1 !dbg !4624 {
start:
  %self.dbg.spill = alloca [23 x i8]*, align 8
  store [23 x i8]* %self, [23 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [23 x i8]** %self.dbg.spill, metadata !4633, metadata !DIExpression()), !dbg !4634
  ret i64 23, !dbg !4635
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 23]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7get_bit17h2b2902c59bfd72a0E"([23 x i8]* align 1 dereferenceable(23) %self, i64 %position) unnamed_addr #1 !dbg !4636 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [23 x i8]*, align 8
  store [23 x i8]* %self, [23 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [23 x i8]** %self.dbg.spill, metadata !4640, metadata !DIExpression()), !dbg !4642
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4641, metadata !DIExpression()), !dbg !4643
  %_6 = icmp ult i64 %position, 23, !dbg !4644
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4644
  br i1 %0, label %bb1, label %panic, !dbg !4644

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [23 x i8], [23 x i8]* %self, i64 0, i64 %position, !dbg !4644
  %2 = load i8, i8* %1, align 1, !dbg !4644, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4644
  ret i1 %3, !dbg !4645

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 23, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4644
  unreachable, !dbg !4644
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 23]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7set_bit17hd72bd248945c8292E"([23 x i8]* align 1 dereferenceable(23) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4646 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [23 x i8]*, align 8
  store [23 x i8]* %self, [23 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [23 x i8]** %self.dbg.spill, metadata !4652, metadata !DIExpression()), !dbg !4655
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4653, metadata !DIExpression()), !dbg !4656
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4654, metadata !DIExpression()), !dbg !4657
  %_8 = icmp ult i64 %position, 23, !dbg !4658
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4658
  br i1 %1, label %bb1, label %panic, !dbg !4658

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [23 x i8], [23 x i8]* %self, i64 0, i64 %position, !dbg !4658
  %3 = zext i1 %value to i8, !dbg !4658
  store i8 %3, i8* %2, align 1, !dbg !4658
  ret void, !dbg !4659

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 23, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4658
  unreachable, !dbg !4658
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 24]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7bit_len17hef2c06c673e897e0E"([24 x i8]* align 1 dereferenceable(24) %self) unnamed_addr #1 !dbg !4660 {
start:
  %self.dbg.spill = alloca [24 x i8]*, align 8
  store [24 x i8]* %self, [24 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [24 x i8]** %self.dbg.spill, metadata !4669, metadata !DIExpression()), !dbg !4670
  ret i64 24, !dbg !4671
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 24]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7get_bit17h199a133669920cd3E"([24 x i8]* align 1 dereferenceable(24) %self, i64 %position) unnamed_addr #1 !dbg !4672 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [24 x i8]*, align 8
  store [24 x i8]* %self, [24 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [24 x i8]** %self.dbg.spill, metadata !4676, metadata !DIExpression()), !dbg !4678
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4677, metadata !DIExpression()), !dbg !4679
  %_6 = icmp ult i64 %position, 24, !dbg !4680
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4680
  br i1 %0, label %bb1, label %panic, !dbg !4680

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [24 x i8], [24 x i8]* %self, i64 0, i64 %position, !dbg !4680
  %2 = load i8, i8* %1, align 1, !dbg !4680, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4680
  ret i1 %3, !dbg !4681

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 24, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4680
  unreachable, !dbg !4680
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 24]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7set_bit17hb4c0cdfec4475c15E"([24 x i8]* align 1 dereferenceable(24) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4682 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [24 x i8]*, align 8
  store [24 x i8]* %self, [24 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [24 x i8]** %self.dbg.spill, metadata !4688, metadata !DIExpression()), !dbg !4691
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4689, metadata !DIExpression()), !dbg !4692
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4690, metadata !DIExpression()), !dbg !4693
  %_8 = icmp ult i64 %position, 24, !dbg !4694
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4694
  br i1 %1, label %bb1, label %panic, !dbg !4694

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [24 x i8], [24 x i8]* %self, i64 0, i64 %position, !dbg !4694
  %3 = zext i1 %value to i8, !dbg !4694
  store i8 %3, i8* %2, align 1, !dbg !4694
  ret void, !dbg !4695

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 24, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4694
  unreachable, !dbg !4694
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 25]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7bit_len17h6d5636901f99aebcE"([25 x i8]* align 1 dereferenceable(25) %self) unnamed_addr #1 !dbg !4696 {
start:
  %self.dbg.spill = alloca [25 x i8]*, align 8
  store [25 x i8]* %self, [25 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [25 x i8]** %self.dbg.spill, metadata !4705, metadata !DIExpression()), !dbg !4706
  ret i64 25, !dbg !4707
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 25]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7get_bit17h35428935db52ed0cE"([25 x i8]* align 1 dereferenceable(25) %self, i64 %position) unnamed_addr #1 !dbg !4708 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [25 x i8]*, align 8
  store [25 x i8]* %self, [25 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [25 x i8]** %self.dbg.spill, metadata !4712, metadata !DIExpression()), !dbg !4714
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4713, metadata !DIExpression()), !dbg !4715
  %_6 = icmp ult i64 %position, 25, !dbg !4716
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4716
  br i1 %0, label %bb1, label %panic, !dbg !4716

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [25 x i8], [25 x i8]* %self, i64 0, i64 %position, !dbg !4716
  %2 = load i8, i8* %1, align 1, !dbg !4716, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4716
  ret i1 %3, !dbg !4717

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 25, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4716
  unreachable, !dbg !4716
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 25]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7set_bit17h8157ca488b95f84aE"([25 x i8]* align 1 dereferenceable(25) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4718 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [25 x i8]*, align 8
  store [25 x i8]* %self, [25 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [25 x i8]** %self.dbg.spill, metadata !4724, metadata !DIExpression()), !dbg !4727
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4725, metadata !DIExpression()), !dbg !4728
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4726, metadata !DIExpression()), !dbg !4729
  %_8 = icmp ult i64 %position, 25, !dbg !4730
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4730
  br i1 %1, label %bb1, label %panic, !dbg !4730

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [25 x i8], [25 x i8]* %self, i64 0, i64 %position, !dbg !4730
  %3 = zext i1 %value to i8, !dbg !4730
  store i8 %3, i8* %2, align 1, !dbg !4730
  ret void, !dbg !4731

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 25, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4730
  unreachable, !dbg !4730
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 26]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7bit_len17h595ea188e9d58304E"([26 x i8]* align 1 dereferenceable(26) %self) unnamed_addr #1 !dbg !4732 {
start:
  %self.dbg.spill = alloca [26 x i8]*, align 8
  store [26 x i8]* %self, [26 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [26 x i8]** %self.dbg.spill, metadata !4741, metadata !DIExpression()), !dbg !4742
  ret i64 26, !dbg !4743
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 26]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7get_bit17h643a5d0ec0a5eaf6E"([26 x i8]* align 1 dereferenceable(26) %self, i64 %position) unnamed_addr #1 !dbg !4744 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [26 x i8]*, align 8
  store [26 x i8]* %self, [26 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [26 x i8]** %self.dbg.spill, metadata !4748, metadata !DIExpression()), !dbg !4750
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4749, metadata !DIExpression()), !dbg !4751
  %_6 = icmp ult i64 %position, 26, !dbg !4752
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4752
  br i1 %0, label %bb1, label %panic, !dbg !4752

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [26 x i8], [26 x i8]* %self, i64 0, i64 %position, !dbg !4752
  %2 = load i8, i8* %1, align 1, !dbg !4752, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4752
  ret i1 %3, !dbg !4753

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 26, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4752
  unreachable, !dbg !4752
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 26]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7set_bit17hb46196b3f365bf64E"([26 x i8]* align 1 dereferenceable(26) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4754 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [26 x i8]*, align 8
  store [26 x i8]* %self, [26 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [26 x i8]** %self.dbg.spill, metadata !4760, metadata !DIExpression()), !dbg !4763
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4761, metadata !DIExpression()), !dbg !4764
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4762, metadata !DIExpression()), !dbg !4765
  %_8 = icmp ult i64 %position, 26, !dbg !4766
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4766
  br i1 %1, label %bb1, label %panic, !dbg !4766

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [26 x i8], [26 x i8]* %self, i64 0, i64 %position, !dbg !4766
  %3 = zext i1 %value to i8, !dbg !4766
  store i8 %3, i8* %2, align 1, !dbg !4766
  ret void, !dbg !4767

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 26, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4766
  unreachable, !dbg !4766
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 27]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7bit_len17hf5e5f293c6a4ef9cE"([27 x i8]* align 1 dereferenceable(27) %self) unnamed_addr #1 !dbg !4768 {
start:
  %self.dbg.spill = alloca [27 x i8]*, align 8
  store [27 x i8]* %self, [27 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [27 x i8]** %self.dbg.spill, metadata !4777, metadata !DIExpression()), !dbg !4778
  ret i64 27, !dbg !4779
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 27]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7get_bit17ha7ec5413e3e41deeE"([27 x i8]* align 1 dereferenceable(27) %self, i64 %position) unnamed_addr #1 !dbg !4780 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [27 x i8]*, align 8
  store [27 x i8]* %self, [27 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [27 x i8]** %self.dbg.spill, metadata !4784, metadata !DIExpression()), !dbg !4786
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4785, metadata !DIExpression()), !dbg !4787
  %_6 = icmp ult i64 %position, 27, !dbg !4788
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4788
  br i1 %0, label %bb1, label %panic, !dbg !4788

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [27 x i8], [27 x i8]* %self, i64 0, i64 %position, !dbg !4788
  %2 = load i8, i8* %1, align 1, !dbg !4788, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4788
  ret i1 %3, !dbg !4789

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 27, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4788
  unreachable, !dbg !4788
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 27]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7set_bit17hddc8797d3bf3f447E"([27 x i8]* align 1 dereferenceable(27) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4790 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [27 x i8]*, align 8
  store [27 x i8]* %self, [27 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [27 x i8]** %self.dbg.spill, metadata !4796, metadata !DIExpression()), !dbg !4799
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4797, metadata !DIExpression()), !dbg !4800
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4798, metadata !DIExpression()), !dbg !4801
  %_8 = icmp ult i64 %position, 27, !dbg !4802
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4802
  br i1 %1, label %bb1, label %panic, !dbg !4802

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [27 x i8], [27 x i8]* %self, i64 0, i64 %position, !dbg !4802
  %3 = zext i1 %value to i8, !dbg !4802
  store i8 %3, i8* %2, align 1, !dbg !4802
  ret void, !dbg !4803

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 27, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4802
  unreachable, !dbg !4802
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 28]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7bit_len17hb9f84b0fe1b2d374E"([28 x i8]* align 1 dereferenceable(28) %self) unnamed_addr #1 !dbg !4804 {
start:
  %self.dbg.spill = alloca [28 x i8]*, align 8
  store [28 x i8]* %self, [28 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [28 x i8]** %self.dbg.spill, metadata !4813, metadata !DIExpression()), !dbg !4814
  ret i64 28, !dbg !4815
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 28]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7get_bit17h6b2c17b39479b378E"([28 x i8]* align 1 dereferenceable(28) %self, i64 %position) unnamed_addr #1 !dbg !4816 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [28 x i8]*, align 8
  store [28 x i8]* %self, [28 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [28 x i8]** %self.dbg.spill, metadata !4820, metadata !DIExpression()), !dbg !4822
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4821, metadata !DIExpression()), !dbg !4823
  %_6 = icmp ult i64 %position, 28, !dbg !4824
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4824
  br i1 %0, label %bb1, label %panic, !dbg !4824

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [28 x i8], [28 x i8]* %self, i64 0, i64 %position, !dbg !4824
  %2 = load i8, i8* %1, align 1, !dbg !4824, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4824
  ret i1 %3, !dbg !4825

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4824
  unreachable, !dbg !4824
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 28]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7set_bit17h9dc2caaa261c8242E"([28 x i8]* align 1 dereferenceable(28) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4826 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [28 x i8]*, align 8
  store [28 x i8]* %self, [28 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [28 x i8]** %self.dbg.spill, metadata !4832, metadata !DIExpression()), !dbg !4835
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4833, metadata !DIExpression()), !dbg !4836
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4834, metadata !DIExpression()), !dbg !4837
  %_8 = icmp ult i64 %position, 28, !dbg !4838
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4838
  br i1 %1, label %bb1, label %panic, !dbg !4838

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [28 x i8], [28 x i8]* %self, i64 0, i64 %position, !dbg !4838
  %3 = zext i1 %value to i8, !dbg !4838
  store i8 %3, i8* %2, align 1, !dbg !4838
  ret void, !dbg !4839

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 28, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4838
  unreachable, !dbg !4838
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 29]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7bit_len17he87514c241a7873eE"([29 x i8]* align 1 dereferenceable(29) %self) unnamed_addr #1 !dbg !4840 {
start:
  %self.dbg.spill = alloca [29 x i8]*, align 8
  store [29 x i8]* %self, [29 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [29 x i8]** %self.dbg.spill, metadata !4849, metadata !DIExpression()), !dbg !4850
  ret i64 29, !dbg !4851
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 29]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7get_bit17hbe6315fad8a17e76E"([29 x i8]* align 1 dereferenceable(29) %self, i64 %position) unnamed_addr #1 !dbg !4852 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [29 x i8]*, align 8
  store [29 x i8]* %self, [29 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [29 x i8]** %self.dbg.spill, metadata !4856, metadata !DIExpression()), !dbg !4858
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4857, metadata !DIExpression()), !dbg !4859
  %_6 = icmp ult i64 %position, 29, !dbg !4860
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4860
  br i1 %0, label %bb1, label %panic, !dbg !4860

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [29 x i8], [29 x i8]* %self, i64 0, i64 %position, !dbg !4860
  %2 = load i8, i8* %1, align 1, !dbg !4860, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4860
  ret i1 %3, !dbg !4861

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 29, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4860
  unreachable, !dbg !4860
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 29]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7set_bit17h3a9504627a6c9ea5E"([29 x i8]* align 1 dereferenceable(29) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4862 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [29 x i8]*, align 8
  store [29 x i8]* %self, [29 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [29 x i8]** %self.dbg.spill, metadata !4868, metadata !DIExpression()), !dbg !4871
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4869, metadata !DIExpression()), !dbg !4872
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4870, metadata !DIExpression()), !dbg !4873
  %_8 = icmp ult i64 %position, 29, !dbg !4874
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4874
  br i1 %1, label %bb1, label %panic, !dbg !4874

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [29 x i8], [29 x i8]* %self, i64 0, i64 %position, !dbg !4874
  %3 = zext i1 %value to i8, !dbg !4874
  store i8 %3, i8* %2, align 1, !dbg !4874
  ret void, !dbg !4875

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 29, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4874
  unreachable, !dbg !4874
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 30]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7bit_len17h6c331876073f1e0eE"([30 x i8]* align 1 dereferenceable(30) %self) unnamed_addr #1 !dbg !4876 {
start:
  %self.dbg.spill = alloca [30 x i8]*, align 8
  store [30 x i8]* %self, [30 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [30 x i8]** %self.dbg.spill, metadata !4885, metadata !DIExpression()), !dbg !4886
  ret i64 30, !dbg !4887
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 30]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7get_bit17h862d9191d9de1209E"([30 x i8]* align 1 dereferenceable(30) %self, i64 %position) unnamed_addr #1 !dbg !4888 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [30 x i8]*, align 8
  store [30 x i8]* %self, [30 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [30 x i8]** %self.dbg.spill, metadata !4892, metadata !DIExpression()), !dbg !4894
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4893, metadata !DIExpression()), !dbg !4895
  %_6 = icmp ult i64 %position, 30, !dbg !4896
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4896
  br i1 %0, label %bb1, label %panic, !dbg !4896

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [30 x i8], [30 x i8]* %self, i64 0, i64 %position, !dbg !4896
  %2 = load i8, i8* %1, align 1, !dbg !4896, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4896
  ret i1 %3, !dbg !4897

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 30, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4896
  unreachable, !dbg !4896
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 30]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7set_bit17h6057a082c18bb538E"([30 x i8]* align 1 dereferenceable(30) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4898 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [30 x i8]*, align 8
  store [30 x i8]* %self, [30 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [30 x i8]** %self.dbg.spill, metadata !4904, metadata !DIExpression()), !dbg !4907
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4905, metadata !DIExpression()), !dbg !4908
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4906, metadata !DIExpression()), !dbg !4909
  %_8 = icmp ult i64 %position, 30, !dbg !4910
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4910
  br i1 %1, label %bb1, label %panic, !dbg !4910

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [30 x i8], [30 x i8]* %self, i64 0, i64 %position, !dbg !4910
  %3 = zext i1 %value to i8, !dbg !4910
  store i8 %3, i8* %2, align 1, !dbg !4910
  ret void, !dbg !4911

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 30, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4910
  unreachable, !dbg !4910
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 31]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7bit_len17h58647d2b67a0d646E"([31 x i8]* align 1 dereferenceable(31) %self) unnamed_addr #1 !dbg !4912 {
start:
  %self.dbg.spill = alloca [31 x i8]*, align 8
  store [31 x i8]* %self, [31 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [31 x i8]** %self.dbg.spill, metadata !4921, metadata !DIExpression()), !dbg !4922
  ret i64 31, !dbg !4923
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 31]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7get_bit17h270b0e0f8e1c709aE"([31 x i8]* align 1 dereferenceable(31) %self, i64 %position) unnamed_addr #1 !dbg !4924 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [31 x i8]*, align 8
  store [31 x i8]* %self, [31 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [31 x i8]** %self.dbg.spill, metadata !4928, metadata !DIExpression()), !dbg !4930
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4929, metadata !DIExpression()), !dbg !4931
  %_6 = icmp ult i64 %position, 31, !dbg !4932
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4932
  br i1 %0, label %bb1, label %panic, !dbg !4932

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [31 x i8], [31 x i8]* %self, i64 0, i64 %position, !dbg !4932
  %2 = load i8, i8* %1, align 1, !dbg !4932, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4932
  ret i1 %3, !dbg !4933

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 31, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4932
  unreachable, !dbg !4932
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 31]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7set_bit17hcc42eb68ab7fceecE"([31 x i8]* align 1 dereferenceable(31) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4934 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [31 x i8]*, align 8
  store [31 x i8]* %self, [31 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [31 x i8]** %self.dbg.spill, metadata !4940, metadata !DIExpression()), !dbg !4943
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4941, metadata !DIExpression()), !dbg !4944
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4942, metadata !DIExpression()), !dbg !4945
  %_8 = icmp ult i64 %position, 31, !dbg !4946
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4946
  br i1 %1, label %bb1, label %panic, !dbg !4946

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [31 x i8], [31 x i8]* %self, i64 0, i64 %position, !dbg !4946
  %3 = zext i1 %value to i8, !dbg !4946
  store i8 %3, i8* %2, align 1, !dbg !4946
  ret void, !dbg !4947

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 31, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4946
  unreachable, !dbg !4946
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 32]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7bit_len17h1a9e10e53f62bb92E"([32 x i8]* align 1 dereferenceable(32) %self) unnamed_addr #1 !dbg !4948 {
start:
  %self.dbg.spill = alloca [32 x i8]*, align 8
  store [32 x i8]* %self, [32 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32 x i8]** %self.dbg.spill, metadata !4957, metadata !DIExpression()), !dbg !4958
  ret i64 32, !dbg !4959
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 32]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7get_bit17h77f3a0aad9b6d401E"([32 x i8]* align 1 dereferenceable(32) %self, i64 %position) unnamed_addr #1 !dbg !4960 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [32 x i8]*, align 8
  store [32 x i8]* %self, [32 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32 x i8]** %self.dbg.spill, metadata !4964, metadata !DIExpression()), !dbg !4966
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4965, metadata !DIExpression()), !dbg !4967
  %_6 = icmp ult i64 %position, 32, !dbg !4968
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !4968
  br i1 %0, label %bb1, label %panic, !dbg !4968

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %self, i64 0, i64 %position, !dbg !4968
  %2 = load i8, i8* %1, align 1, !dbg !4968, !range !978
  %3 = trunc i8 %2 to i1, !dbg !4968
  ret i1 %3, !dbg !4969

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 32, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4968
  unreachable, !dbg !4968
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 32]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7set_bit17h5da677b83b1f630aE"([32 x i8]* align 1 dereferenceable(32) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !4970 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [32 x i8]*, align 8
  store [32 x i8]* %self, [32 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32 x i8]** %self.dbg.spill, metadata !4976, metadata !DIExpression()), !dbg !4979
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !4977, metadata !DIExpression()), !dbg !4980
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !4978, metadata !DIExpression()), !dbg !4981
  %_8 = icmp ult i64 %position, 32, !dbg !4982
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !4982
  br i1 %1, label %bb1, label %panic, !dbg !4982

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %self, i64 0, i64 %position, !dbg !4982
  %3 = zext i1 %value to i8, !dbg !4982
  store i8 %3, i8* %2, align 1, !dbg !4982
  ret void, !dbg !4983

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 32, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !4982
  unreachable, !dbg !4982
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 64]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7bit_len17he28763658632010fE"([64 x i8]* align 1 dereferenceable(64) %self) unnamed_addr #1 !dbg !4984 {
start:
  %self.dbg.spill = alloca [64 x i8]*, align 8
  store [64 x i8]* %self, [64 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [64 x i8]** %self.dbg.spill, metadata !4993, metadata !DIExpression()), !dbg !4994
  ret i64 64, !dbg !4995
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 64]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7get_bit17h2c65902f5c8ee1f1E"([64 x i8]* align 1 dereferenceable(64) %self, i64 %position) unnamed_addr #1 !dbg !4996 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [64 x i8]*, align 8
  store [64 x i8]* %self, [64 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [64 x i8]** %self.dbg.spill, metadata !5000, metadata !DIExpression()), !dbg !5002
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5001, metadata !DIExpression()), !dbg !5003
  %_6 = icmp ult i64 %position, 64, !dbg !5004
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5004
  br i1 %0, label %bb1, label %panic, !dbg !5004

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %self, i64 0, i64 %position, !dbg !5004
  %2 = load i8, i8* %1, align 1, !dbg !5004, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5004
  ret i1 %3, !dbg !5005

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5004
  unreachable, !dbg !5004
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 64]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7set_bit17h87c3b9b6c72c1635E"([64 x i8]* align 1 dereferenceable(64) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5006 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [64 x i8]*, align 8
  store [64 x i8]* %self, [64 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [64 x i8]** %self.dbg.spill, metadata !5012, metadata !DIExpression()), !dbg !5015
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5013, metadata !DIExpression()), !dbg !5016
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5014, metadata !DIExpression()), !dbg !5017
  %_8 = icmp ult i64 %position, 64, !dbg !5018
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5018
  br i1 %1, label %bb1, label %panic, !dbg !5018

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [64 x i8], [64 x i8]* %self, i64 0, i64 %position, !dbg !5018
  %3 = zext i1 %value to i8, !dbg !5018
  store i8 %3, i8* %2, align 1, !dbg !5018
  ret void, !dbg !5019

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 64, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5018
  unreachable, !dbg !5018
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 128]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7bit_len17hada96cbd7d9c59baE"([128 x i8]* align 1 dereferenceable(128) %self) unnamed_addr #1 !dbg !5020 {
start:
  %self.dbg.spill = alloca [128 x i8]*, align 8
  store [128 x i8]* %self, [128 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [128 x i8]** %self.dbg.spill, metadata !5029, metadata !DIExpression()), !dbg !5030
  ret i64 128, !dbg !5031
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 128]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7get_bit17h5f17da17f14c56d1E"([128 x i8]* align 1 dereferenceable(128) %self, i64 %position) unnamed_addr #1 !dbg !5032 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [128 x i8]*, align 8
  store [128 x i8]* %self, [128 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [128 x i8]** %self.dbg.spill, metadata !5036, metadata !DIExpression()), !dbg !5038
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5037, metadata !DIExpression()), !dbg !5039
  %_6 = icmp ult i64 %position, 128, !dbg !5040
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5040
  br i1 %0, label %bb1, label %panic, !dbg !5040

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %self, i64 0, i64 %position, !dbg !5040
  %2 = load i8, i8* %1, align 1, !dbg !5040, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5040
  ret i1 %3, !dbg !5041

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 128, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5040
  unreachable, !dbg !5040
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 128]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7set_bit17h3f60d28180fe4993E"([128 x i8]* align 1 dereferenceable(128) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5042 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [128 x i8]*, align 8
  store [128 x i8]* %self, [128 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [128 x i8]** %self.dbg.spill, metadata !5048, metadata !DIExpression()), !dbg !5051
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5049, metadata !DIExpression()), !dbg !5052
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5050, metadata !DIExpression()), !dbg !5053
  %_8 = icmp ult i64 %position, 128, !dbg !5054
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5054
  br i1 %1, label %bb1, label %panic, !dbg !5054

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [128 x i8], [128 x i8]* %self, i64 0, i64 %position, !dbg !5054
  %3 = zext i1 %value to i8, !dbg !5054
  store i8 %3, i8* %2, align 1, !dbg !5054
  ret void, !dbg !5055

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 128, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5054
  unreachable, !dbg !5054
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 256]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7bit_len17hfe2fc5d45a158729E"([256 x i8]* align 1 dereferenceable(256) %self) unnamed_addr #1 !dbg !5056 {
start:
  %self.dbg.spill = alloca [256 x i8]*, align 8
  store [256 x i8]* %self, [256 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [256 x i8]** %self.dbg.spill, metadata !5065, metadata !DIExpression()), !dbg !5066
  ret i64 256, !dbg !5067
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 256]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7get_bit17h31a30a402f28870eE"([256 x i8]* align 1 dereferenceable(256) %self, i64 %position) unnamed_addr #1 !dbg !5068 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [256 x i8]*, align 8
  store [256 x i8]* %self, [256 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [256 x i8]** %self.dbg.spill, metadata !5072, metadata !DIExpression()), !dbg !5074
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5073, metadata !DIExpression()), !dbg !5075
  %_6 = icmp ult i64 %position, 256, !dbg !5076
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5076
  br i1 %0, label %bb1, label %panic, !dbg !5076

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [256 x i8], [256 x i8]* %self, i64 0, i64 %position, !dbg !5076
  %2 = load i8, i8* %1, align 1, !dbg !5076, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5076
  ret i1 %3, !dbg !5077

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 256, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5076
  unreachable, !dbg !5076
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 256]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7set_bit17h3273fc736403d5e3E"([256 x i8]* align 1 dereferenceable(256) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5078 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [256 x i8]*, align 8
  store [256 x i8]* %self, [256 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [256 x i8]** %self.dbg.spill, metadata !5084, metadata !DIExpression()), !dbg !5087
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5085, metadata !DIExpression()), !dbg !5088
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5086, metadata !DIExpression()), !dbg !5089
  %_8 = icmp ult i64 %position, 256, !dbg !5090
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5090
  br i1 %1, label %bb1, label %panic, !dbg !5090

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* %self, i64 0, i64 %position, !dbg !5090
  %3 = zext i1 %value to i8, !dbg !5090
  store i8 %3, i8* %2, align 1, !dbg !5090
  ret void, !dbg !5091

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 256, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5090
  unreachable, !dbg !5090
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 512]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7bit_len17h66bea3780d8d6a1eE"([512 x i8]* align 1 dereferenceable(512) %self) unnamed_addr #1 !dbg !5092 {
start:
  %self.dbg.spill = alloca [512 x i8]*, align 8
  store [512 x i8]* %self, [512 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [512 x i8]** %self.dbg.spill, metadata !5101, metadata !DIExpression()), !dbg !5102
  ret i64 512, !dbg !5103
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 512]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7get_bit17h5f663306d9c3ac1fE"([512 x i8]* align 1 dereferenceable(512) %self, i64 %position) unnamed_addr #1 !dbg !5104 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [512 x i8]*, align 8
  store [512 x i8]* %self, [512 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [512 x i8]** %self.dbg.spill, metadata !5108, metadata !DIExpression()), !dbg !5110
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5109, metadata !DIExpression()), !dbg !5111
  %_6 = icmp ult i64 %position, 512, !dbg !5112
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5112
  br i1 %0, label %bb1, label %panic, !dbg !5112

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [512 x i8], [512 x i8]* %self, i64 0, i64 %position, !dbg !5112
  %2 = load i8, i8* %1, align 1, !dbg !5112, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5112
  ret i1 %3, !dbg !5113

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 512, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5112
  unreachable, !dbg !5112
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 512]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7set_bit17h6ffa84553369b1f5E"([512 x i8]* align 1 dereferenceable(512) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5114 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [512 x i8]*, align 8
  store [512 x i8]* %self, [512 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [512 x i8]** %self.dbg.spill, metadata !5120, metadata !DIExpression()), !dbg !5123
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5121, metadata !DIExpression()), !dbg !5124
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5122, metadata !DIExpression()), !dbg !5125
  %_8 = icmp ult i64 %position, 512, !dbg !5126
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5126
  br i1 %1, label %bb1, label %panic, !dbg !5126

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [512 x i8], [512 x i8]* %self, i64 0, i64 %position, !dbg !5126
  %3 = zext i1 %value to i8, !dbg !5126
  store i8 %3, i8* %2, align 1, !dbg !5126
  ret void, !dbg !5127

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 512, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5126
  unreachable, !dbg !5126
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1024]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7bit_len17h3ab1f3fa1865ffd8E"([1024 x i8]* align 1 dereferenceable(1024) %self) unnamed_addr #1 !dbg !5128 {
start:
  %self.dbg.spill = alloca [1024 x i8]*, align 8
  store [1024 x i8]* %self, [1024 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]** %self.dbg.spill, metadata !5137, metadata !DIExpression()), !dbg !5138
  ret i64 1024, !dbg !5139
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1024]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7get_bit17hfda44eb15b5c5c3bE"([1024 x i8]* align 1 dereferenceable(1024) %self, i64 %position) unnamed_addr #1 !dbg !5140 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1024 x i8]*, align 8
  store [1024 x i8]* %self, [1024 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]** %self.dbg.spill, metadata !5144, metadata !DIExpression()), !dbg !5146
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5145, metadata !DIExpression()), !dbg !5147
  %_6 = icmp ult i64 %position, 1024, !dbg !5148
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5148
  br i1 %0, label %bb1, label %panic, !dbg !5148

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %self, i64 0, i64 %position, !dbg !5148
  %2 = load i8, i8* %1, align 1, !dbg !5148, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5148
  ret i1 %3, !dbg !5149

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1024, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5148
  unreachable, !dbg !5148
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 1024]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7set_bit17ha46219a4f84ada82E"([1024 x i8]* align 1 dereferenceable(1024) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5150 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1024 x i8]*, align 8
  store [1024 x i8]* %self, [1024 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1024 x i8]** %self.dbg.spill, metadata !5156, metadata !DIExpression()), !dbg !5159
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5157, metadata !DIExpression()), !dbg !5160
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5158, metadata !DIExpression()), !dbg !5161
  %_8 = icmp ult i64 %position, 1024, !dbg !5162
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5162
  br i1 %1, label %bb1, label %panic, !dbg !5162

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %self, i64 0, i64 %position, !dbg !5162
  %3 = zext i1 %value to i8, !dbg !5162
  store i8 %3, i8* %2, align 1, !dbg !5162
  ret void, !dbg !5163

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1024, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5162
  unreachable, !dbg !5162
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 2048]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7bit_len17h03e763484d39af6eE"([2048 x i8]* align 1 dereferenceable(2048) %self) unnamed_addr #1 !dbg !5164 {
start:
  %self.dbg.spill = alloca [2048 x i8]*, align 8
  store [2048 x i8]* %self, [2048 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2048 x i8]** %self.dbg.spill, metadata !5173, metadata !DIExpression()), !dbg !5174
  ret i64 2048, !dbg !5175
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 2048]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7get_bit17hd039edb8e8ec7835E"([2048 x i8]* align 1 dereferenceable(2048) %self, i64 %position) unnamed_addr #1 !dbg !5176 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [2048 x i8]*, align 8
  store [2048 x i8]* %self, [2048 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2048 x i8]** %self.dbg.spill, metadata !5180, metadata !DIExpression()), !dbg !5182
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5181, metadata !DIExpression()), !dbg !5183
  %_6 = icmp ult i64 %position, 2048, !dbg !5184
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5184
  br i1 %0, label %bb1, label %panic, !dbg !5184

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [2048 x i8], [2048 x i8]* %self, i64 0, i64 %position, !dbg !5184
  %2 = load i8, i8* %1, align 1, !dbg !5184, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5184
  ret i1 %3, !dbg !5185

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 2048, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5184
  unreachable, !dbg !5184
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 2048]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7set_bit17h6510b28ff8c16374E"([2048 x i8]* align 1 dereferenceable(2048) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5186 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [2048 x i8]*, align 8
  store [2048 x i8]* %self, [2048 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [2048 x i8]** %self.dbg.spill, metadata !5192, metadata !DIExpression()), !dbg !5195
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5193, metadata !DIExpression()), !dbg !5196
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5194, metadata !DIExpression()), !dbg !5197
  %_8 = icmp ult i64 %position, 2048, !dbg !5198
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5198
  br i1 %1, label %bb1, label %panic, !dbg !5198

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [2048 x i8], [2048 x i8]* %self, i64 0, i64 %position, !dbg !5198
  %3 = zext i1 %value to i8, !dbg !5198
  store i8 %3, i8* %2, align 1, !dbg !5198
  ret void, !dbg !5199

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 2048, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5198
  unreachable, !dbg !5198
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 4096]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7bit_len17hd8e814727285673fE"([4096 x i8]* align 1 dereferenceable(4096) %self) unnamed_addr #1 !dbg !5200 {
start:
  %self.dbg.spill = alloca [4096 x i8]*, align 8
  store [4096 x i8]* %self, [4096 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4096 x i8]** %self.dbg.spill, metadata !5209, metadata !DIExpression()), !dbg !5210
  ret i64 4096, !dbg !5211
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 4096]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7get_bit17h5773b2d3c43c2c6dE"([4096 x i8]* align 1 dereferenceable(4096) %self, i64 %position) unnamed_addr #1 !dbg !5212 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [4096 x i8]*, align 8
  store [4096 x i8]* %self, [4096 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4096 x i8]** %self.dbg.spill, metadata !5216, metadata !DIExpression()), !dbg !5218
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5217, metadata !DIExpression()), !dbg !5219
  %_6 = icmp ult i64 %position, 4096, !dbg !5220
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5220
  br i1 %0, label %bb1, label %panic, !dbg !5220

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %self, i64 0, i64 %position, !dbg !5220
  %2 = load i8, i8* %1, align 1, !dbg !5220, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5220
  ret i1 %3, !dbg !5221

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 4096, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5220
  unreachable, !dbg !5220
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 4096]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7set_bit17h8862e7baeef02e17E"([4096 x i8]* align 1 dereferenceable(4096) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5222 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [4096 x i8]*, align 8
  store [4096 x i8]* %self, [4096 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [4096 x i8]** %self.dbg.spill, metadata !5228, metadata !DIExpression()), !dbg !5231
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5229, metadata !DIExpression()), !dbg !5232
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5230, metadata !DIExpression()), !dbg !5233
  %_8 = icmp ult i64 %position, 4096, !dbg !5234
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5234
  br i1 %1, label %bb1, label %panic, !dbg !5234

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %self, i64 0, i64 %position, !dbg !5234
  %3 = zext i1 %value to i8, !dbg !5234
  store i8 %3, i8* %2, align 1, !dbg !5234
  ret void, !dbg !5235

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 4096, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5234
  unreachable, !dbg !5234
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 8192]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7bit_len17h30e9d7da8c423591E"([8192 x i8]* align 1 dereferenceable(8192) %self) unnamed_addr #1 !dbg !5236 {
start:
  %self.dbg.spill = alloca [8192 x i8]*, align 8
  store [8192 x i8]* %self, [8192 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8192 x i8]** %self.dbg.spill, metadata !5245, metadata !DIExpression()), !dbg !5246
  ret i64 8192, !dbg !5247
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 8192]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7get_bit17ha250d224b3af05f6E"([8192 x i8]* align 1 dereferenceable(8192) %self, i64 %position) unnamed_addr #1 !dbg !5248 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [8192 x i8]*, align 8
  store [8192 x i8]* %self, [8192 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8192 x i8]** %self.dbg.spill, metadata !5252, metadata !DIExpression()), !dbg !5254
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5253, metadata !DIExpression()), !dbg !5255
  %_6 = icmp ult i64 %position, 8192, !dbg !5256
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5256
  br i1 %0, label %bb1, label %panic, !dbg !5256

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [8192 x i8], [8192 x i8]* %self, i64 0, i64 %position, !dbg !5256
  %2 = load i8, i8* %1, align 1, !dbg !5256, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5256
  ret i1 %3, !dbg !5257

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 8192, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5256
  unreachable, !dbg !5256
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 8192]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7set_bit17h935c92912760ba34E"([8192 x i8]* align 1 dereferenceable(8192) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5258 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [8192 x i8]*, align 8
  store [8192 x i8]* %self, [8192 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [8192 x i8]** %self.dbg.spill, metadata !5264, metadata !DIExpression()), !dbg !5267
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5265, metadata !DIExpression()), !dbg !5268
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5266, metadata !DIExpression()), !dbg !5269
  %_8 = icmp ult i64 %position, 8192, !dbg !5270
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5270
  br i1 %1, label %bb1, label %panic, !dbg !5270

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [8192 x i8], [8192 x i8]* %self, i64 0, i64 %position, !dbg !5270
  %3 = zext i1 %value to i8, !dbg !5270
  store i8 %3, i8* %2, align 1, !dbg !5270
  ret void, !dbg !5271

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 8192, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5270
  unreachable, !dbg !5270
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 16384]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7bit_len17h680023905a978b05E"([16384 x i8]* align 1 dereferenceable(16384) %self) unnamed_addr #1 !dbg !5272 {
start:
  %self.dbg.spill = alloca [16384 x i8]*, align 8
  store [16384 x i8]* %self, [16384 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16384 x i8]** %self.dbg.spill, metadata !5281, metadata !DIExpression()), !dbg !5282
  ret i64 16384, !dbg !5283
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 16384]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7get_bit17h12940269dab26940E"([16384 x i8]* align 1 dereferenceable(16384) %self, i64 %position) unnamed_addr #1 !dbg !5284 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [16384 x i8]*, align 8
  store [16384 x i8]* %self, [16384 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16384 x i8]** %self.dbg.spill, metadata !5288, metadata !DIExpression()), !dbg !5290
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5289, metadata !DIExpression()), !dbg !5291
  %_6 = icmp ult i64 %position, 16384, !dbg !5292
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5292
  br i1 %0, label %bb1, label %panic, !dbg !5292

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [16384 x i8], [16384 x i8]* %self, i64 0, i64 %position, !dbg !5292
  %2 = load i8, i8* %1, align 1, !dbg !5292, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5292
  ret i1 %3, !dbg !5293

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 16384, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5292
  unreachable, !dbg !5292
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 16384]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7set_bit17hcb4701f73af34316E"([16384 x i8]* align 1 dereferenceable(16384) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5294 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [16384 x i8]*, align 8
  store [16384 x i8]* %self, [16384 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [16384 x i8]** %self.dbg.spill, metadata !5300, metadata !DIExpression()), !dbg !5303
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5301, metadata !DIExpression()), !dbg !5304
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5302, metadata !DIExpression()), !dbg !5305
  %_8 = icmp ult i64 %position, 16384, !dbg !5306
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5306
  br i1 %1, label %bb1, label %panic, !dbg !5306

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [16384 x i8], [16384 x i8]* %self, i64 0, i64 %position, !dbg !5306
  %3 = zext i1 %value to i8, !dbg !5306
  store i8 %3, i8* %2, align 1, !dbg !5306
  ret void, !dbg !5307

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 16384, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5306
  unreachable, !dbg !5306
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 32768]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7bit_len17h1738bb3a7c656cd0E"([32768 x i8]* align 1 dereferenceable(32768) %self) unnamed_addr #1 !dbg !5308 {
start:
  %self.dbg.spill = alloca [32768 x i8]*, align 8
  store [32768 x i8]* %self, [32768 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32768 x i8]** %self.dbg.spill, metadata !5317, metadata !DIExpression()), !dbg !5318
  ret i64 32768, !dbg !5319
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 32768]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7get_bit17h4f9b39507bffe64dE"([32768 x i8]* align 1 dereferenceable(32768) %self, i64 %position) unnamed_addr #1 !dbg !5320 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [32768 x i8]*, align 8
  store [32768 x i8]* %self, [32768 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32768 x i8]** %self.dbg.spill, metadata !5324, metadata !DIExpression()), !dbg !5326
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5325, metadata !DIExpression()), !dbg !5327
  %_6 = icmp ult i64 %position, 32768, !dbg !5328
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5328
  br i1 %0, label %bb1, label %panic, !dbg !5328

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [32768 x i8], [32768 x i8]* %self, i64 0, i64 %position, !dbg !5328
  %2 = load i8, i8* %1, align 1, !dbg !5328, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5328
  ret i1 %3, !dbg !5329

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 32768, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5328
  unreachable, !dbg !5328
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 32768]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7set_bit17h4e2dcb72ebba9724E"([32768 x i8]* align 1 dereferenceable(32768) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5330 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [32768 x i8]*, align 8
  store [32768 x i8]* %self, [32768 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [32768 x i8]** %self.dbg.spill, metadata !5336, metadata !DIExpression()), !dbg !5339
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5337, metadata !DIExpression()), !dbg !5340
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5338, metadata !DIExpression()), !dbg !5341
  %_8 = icmp ult i64 %position, 32768, !dbg !5342
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5342
  br i1 %1, label %bb1, label %panic, !dbg !5342

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [32768 x i8], [32768 x i8]* %self, i64 0, i64 %position, !dbg !5342
  %3 = zext i1 %value to i8, !dbg !5342
  store i8 %3, i8* %2, align 1, !dbg !5342
  ret void, !dbg !5343

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 32768, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5342
  unreachable, !dbg !5342
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 65536]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7bit_len17hfcdd8607c71868b3E"([65536 x i8]* align 1 dereferenceable(65536) %self) unnamed_addr #1 !dbg !5344 {
start:
  %self.dbg.spill = alloca [65536 x i8]*, align 8
  store [65536 x i8]* %self, [65536 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [65536 x i8]** %self.dbg.spill, metadata !5353, metadata !DIExpression()), !dbg !5354
  ret i64 65536, !dbg !5355
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 65536]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7get_bit17h368176671f572c78E"([65536 x i8]* align 1 dereferenceable(65536) %self, i64 %position) unnamed_addr #1 !dbg !5356 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [65536 x i8]*, align 8
  store [65536 x i8]* %self, [65536 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [65536 x i8]** %self.dbg.spill, metadata !5360, metadata !DIExpression()), !dbg !5362
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5361, metadata !DIExpression()), !dbg !5363
  %_6 = icmp ult i64 %position, 65536, !dbg !5364
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5364
  br i1 %0, label %bb1, label %panic, !dbg !5364

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [65536 x i8], [65536 x i8]* %self, i64 0, i64 %position, !dbg !5364
  %2 = load i8, i8* %1, align 1, !dbg !5364, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5364
  ret i1 %3, !dbg !5365

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 65536, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5364
  unreachable, !dbg !5364
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 65536]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7set_bit17hed6e61dafe06effcE"([65536 x i8]* align 1 dereferenceable(65536) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5366 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [65536 x i8]*, align 8
  store [65536 x i8]* %self, [65536 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [65536 x i8]** %self.dbg.spill, metadata !5372, metadata !DIExpression()), !dbg !5375
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5373, metadata !DIExpression()), !dbg !5376
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5374, metadata !DIExpression()), !dbg !5377
  %_8 = icmp ult i64 %position, 65536, !dbg !5378
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5378
  br i1 %1, label %bb1, label %panic, !dbg !5378

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [65536 x i8], [65536 x i8]* %self, i64 0, i64 %position, !dbg !5378
  %3 = zext i1 %value to i8, !dbg !5378
  store i8 %3, i8* %2, align 1, !dbg !5378
  ret void, !dbg !5379

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 65536, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5378
  unreachable, !dbg !5378
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 131072]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7bit_len17h48848f2e7b5c9e67E"([131072 x i8]* align 1 dereferenceable(131072) %self) unnamed_addr #1 !dbg !5380 {
start:
  %self.dbg.spill = alloca [131072 x i8]*, align 8
  store [131072 x i8]* %self, [131072 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [131072 x i8]** %self.dbg.spill, metadata !5389, metadata !DIExpression()), !dbg !5390
  ret i64 131072, !dbg !5391
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 131072]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7get_bit17h910d0a586cf6168fE"([131072 x i8]* align 1 dereferenceable(131072) %self, i64 %position) unnamed_addr #1 !dbg !5392 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [131072 x i8]*, align 8
  store [131072 x i8]* %self, [131072 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [131072 x i8]** %self.dbg.spill, metadata !5396, metadata !DIExpression()), !dbg !5398
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5397, metadata !DIExpression()), !dbg !5399
  %_6 = icmp ult i64 %position, 131072, !dbg !5400
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5400
  br i1 %0, label %bb1, label %panic, !dbg !5400

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [131072 x i8], [131072 x i8]* %self, i64 0, i64 %position, !dbg !5400
  %2 = load i8, i8* %1, align 1, !dbg !5400, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5400
  ret i1 %3, !dbg !5401

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 131072, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5400
  unreachable, !dbg !5400
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 131072]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7set_bit17h38c174cb213b30c3E"([131072 x i8]* align 1 dereferenceable(131072) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5402 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [131072 x i8]*, align 8
  store [131072 x i8]* %self, [131072 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [131072 x i8]** %self.dbg.spill, metadata !5408, metadata !DIExpression()), !dbg !5411
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5409, metadata !DIExpression()), !dbg !5412
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5410, metadata !DIExpression()), !dbg !5413
  %_8 = icmp ult i64 %position, 131072, !dbg !5414
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5414
  br i1 %1, label %bb1, label %panic, !dbg !5414

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [131072 x i8], [131072 x i8]* %self, i64 0, i64 %position, !dbg !5414
  %3 = zext i1 %value to i8, !dbg !5414
  store i8 %3, i8* %2, align 1, !dbg !5414
  ret void, !dbg !5415

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 131072, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5414
  unreachable, !dbg !5414
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 262144]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7bit_len17h13b10f6b7f6d0a2eE"([262144 x i8]* align 1 dereferenceable(262144) %self) unnamed_addr #1 !dbg !5416 {
start:
  %self.dbg.spill = alloca [262144 x i8]*, align 8
  store [262144 x i8]* %self, [262144 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [262144 x i8]** %self.dbg.spill, metadata !5425, metadata !DIExpression()), !dbg !5426
  ret i64 262144, !dbg !5427
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 262144]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7get_bit17h613c36bfcb8c8dd4E"([262144 x i8]* align 1 dereferenceable(262144) %self, i64 %position) unnamed_addr #1 !dbg !5428 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [262144 x i8]*, align 8
  store [262144 x i8]* %self, [262144 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [262144 x i8]** %self.dbg.spill, metadata !5432, metadata !DIExpression()), !dbg !5434
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5433, metadata !DIExpression()), !dbg !5435
  %_6 = icmp ult i64 %position, 262144, !dbg !5436
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5436
  br i1 %0, label %bb1, label %panic, !dbg !5436

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [262144 x i8], [262144 x i8]* %self, i64 0, i64 %position, !dbg !5436
  %2 = load i8, i8* %1, align 1, !dbg !5436, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5436
  ret i1 %3, !dbg !5437

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 262144, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5436
  unreachable, !dbg !5436
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 262144]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7set_bit17hd2e98c0049bf607aE"([262144 x i8]* align 1 dereferenceable(262144) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5438 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [262144 x i8]*, align 8
  store [262144 x i8]* %self, [262144 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [262144 x i8]** %self.dbg.spill, metadata !5444, metadata !DIExpression()), !dbg !5447
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5445, metadata !DIExpression()), !dbg !5448
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5446, metadata !DIExpression()), !dbg !5449
  %_8 = icmp ult i64 %position, 262144, !dbg !5450
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5450
  br i1 %1, label %bb1, label %panic, !dbg !5450

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [262144 x i8], [262144 x i8]* %self, i64 0, i64 %position, !dbg !5450
  %3 = zext i1 %value to i8, !dbg !5450
  store i8 %3, i8* %2, align 1, !dbg !5450
  ret void, !dbg !5451

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 262144, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5450
  unreachable, !dbg !5450
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 524288]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7bit_len17h185e76a4890548e9E"([524288 x i8]* align 1 dereferenceable(524288) %self) unnamed_addr #1 !dbg !5452 {
start:
  %self.dbg.spill = alloca [524288 x i8]*, align 8
  store [524288 x i8]* %self, [524288 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [524288 x i8]** %self.dbg.spill, metadata !5461, metadata !DIExpression()), !dbg !5462
  ret i64 524288, !dbg !5463
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 524288]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7get_bit17h7cbf32fe7804721aE"([524288 x i8]* align 1 dereferenceable(524288) %self, i64 %position) unnamed_addr #1 !dbg !5464 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [524288 x i8]*, align 8
  store [524288 x i8]* %self, [524288 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [524288 x i8]** %self.dbg.spill, metadata !5468, metadata !DIExpression()), !dbg !5470
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5469, metadata !DIExpression()), !dbg !5471
  %_6 = icmp ult i64 %position, 524288, !dbg !5472
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5472
  br i1 %0, label %bb1, label %panic, !dbg !5472

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [524288 x i8], [524288 x i8]* %self, i64 0, i64 %position, !dbg !5472
  %2 = load i8, i8* %1, align 1, !dbg !5472, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5472
  ret i1 %3, !dbg !5473

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 524288, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5472
  unreachable, !dbg !5472
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 524288]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7set_bit17h5b53150f009384e4E"([524288 x i8]* align 1 dereferenceable(524288) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5474 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [524288 x i8]*, align 8
  store [524288 x i8]* %self, [524288 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [524288 x i8]** %self.dbg.spill, metadata !5480, metadata !DIExpression()), !dbg !5483
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5481, metadata !DIExpression()), !dbg !5484
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5482, metadata !DIExpression()), !dbg !5485
  %_8 = icmp ult i64 %position, 524288, !dbg !5486
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5486
  br i1 %1, label %bb1, label %panic, !dbg !5486

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [524288 x i8], [524288 x i8]* %self, i64 0, i64 %position, !dbg !5486
  %3 = zext i1 %value to i8, !dbg !5486
  store i8 %3, i8* %2, align 1, !dbg !5486
  ret void, !dbg !5487

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 524288, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5486
  unreachable, !dbg !5486
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1048576]>::bit_len
; Function Attrs: nounwind
define i64 @"_ZN2bv13array_n_impls84_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7bit_len17h7580d9c3f797e701E"([1048576 x i8]* align 1 dereferenceable(1048576) %self) unnamed_addr #1 !dbg !5488 {
start:
  %self.dbg.spill = alloca [1048576 x i8]*, align 8
  store [1048576 x i8]* %self, [1048576 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1048576 x i8]** %self.dbg.spill, metadata !5497, metadata !DIExpression()), !dbg !5498
  ret i64 1048576, !dbg !5499
}

; bv::array_n_impls::<impl bv::traits::bits::Bits for [bool; 1048576]>::get_bit
; Function Attrs: nounwind
define zeroext i1 @"_ZN2bv13array_n_impls84_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7get_bit17ha7a6da89f30b4d2aE"([1048576 x i8]* align 1 dereferenceable(1048576) %self, i64 %position) unnamed_addr #1 !dbg !5500 {
start:
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1048576 x i8]*, align 8
  store [1048576 x i8]* %self, [1048576 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1048576 x i8]** %self.dbg.spill, metadata !5504, metadata !DIExpression()), !dbg !5506
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5505, metadata !DIExpression()), !dbg !5507
  %_6 = icmp ult i64 %position, 1048576, !dbg !5508
  %0 = call i1 @llvm.expect.i1(i1 %_6, i1 true), !dbg !5508
  br i1 %0, label %bb1, label %panic, !dbg !5508

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds [1048576 x i8], [1048576 x i8]* %self, i64 0, i64 %position, !dbg !5508
  %2 = load i8, i8* %1, align 1, !dbg !5508, !range !978
  %3 = trunc i8 %2 to i1, !dbg !5508
  ret i1 %3, !dbg !5509

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1048576, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5508
  unreachable, !dbg !5508
}

; bv::array_n_impls::<impl bv::traits::bits_mut::BitsMut for [bool; 1048576]>::set_bit
; Function Attrs: nounwind
define void @"_ZN2bv13array_n_impls91_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7set_bit17hee6d5da201f06f96E"([1048576 x i8]* align 1 dereferenceable(1048576) %self, i64 %position, i1 zeroext %value) unnamed_addr #1 !dbg !5510 {
start:
  %value.dbg.spill = alloca i8, align 1
  %position.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca [1048576 x i8]*, align 8
  store [1048576 x i8]* %self, [1048576 x i8]** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata [1048576 x i8]** %self.dbg.spill, metadata !5516, metadata !DIExpression()), !dbg !5519
  store i64 %position, i64* %position.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %position.dbg.spill, metadata !5517, metadata !DIExpression()), !dbg !5520
  %0 = zext i1 %value to i8
  store i8 %0, i8* %value.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %value.dbg.spill, metadata !5518, metadata !DIExpression()), !dbg !5521
  %_8 = icmp ult i64 %position, 1048576, !dbg !5522
  %1 = call i1 @llvm.expect.i1(i1 %_8, i1 true), !dbg !5522
  br i1 %1, label %bb1, label %panic, !dbg !5522

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds [1048576 x i8], [1048576 x i8]* %self, i64 0, i64 %position, !dbg !5522
  %3 = zext i1 %value to i8, !dbg !5522
  store i8 %3, i8* %2, align 1, !dbg !5522
  ret void, !dbg !5523

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %position, i64 1048576, %"std::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc1124 to %"std::panic::Location"*)), !dbg !5522
  unreachable, !dbg !5522
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index22slice_index_order_fail17h0a02db5c3145b3dbE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index24slice_end_index_len_fail17hc9093b080894820aE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::slice::index::slice_end_index_overflow_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index29slice_end_index_overflow_fail17hbb855d3c3b1462ceE(%"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h636482c5eb85995eE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h1a12a50969152654E"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17habda22bb62de5f0bE(%"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17h571918675fe47debE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcb6674a6899bd26aE"(i64* align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #4

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
declare nonnull i8* @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h257ef6d383e44eabE"(i8*) unnamed_addr #0

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
declare zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17h76e99f5e5b776b90E"(i8*, i8*) unnamed_addr #0

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
declare i64 @_ZN4core3ptr8metadata8metadata17h0cbd16dff4c04a46E([0 x i8]*, i64) unnamed_addr #0

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
declare zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h9f910b821c2973acE"(i8*) unnamed_addr #0

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
declare nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha9c300abf5c57abaE"(i8*) unnamed_addr #0

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
declare i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd46d02e459d018d3E"(i8* nonnull) unnamed_addr #0

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
declare { [0 x i8]*, i64 } @_ZN4core3ptr24slice_from_raw_parts_mut17hdb2d850eec0185abE(i8*, i64) unnamed_addr #0

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core6option13expect_failed17hc7542e6963b38cc8E([0 x i8]* nonnull align 1, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; <core::alloc::layout::LayoutError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN69_$LT$core..alloc..layout..LayoutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdaf89633c8bfad9eE"(%"std::alloc::LayoutError"* nonnull align 1, %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core6result13unwrap_failed17h84047e2415998400E([0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24), %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #9

; Function Attrs: nounwind
declare i8* @__rust_alloc_zeroed(i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @__rust_alloc(i64, i64) unnamed_addr #1

; core::intrinsics::copy_nonoverlapping
; Function Attrs: inlinehint nounwind
declare void @_ZN4core10intrinsics19copy_nonoverlapping17h396eee5230c4bc4aE(i8*, i8*, i64) unnamed_addr #0

; Function Attrs: nounwind
declare void @__rust_dealloc(i8*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare i8* @__rust_realloc(i8*, i64, i64, i64) unnamed_addr #1

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nounwind
declare void @_ZN5alloc5alloc18handle_alloc_error17hba238f19242600cdE(i64, i64) unnamed_addr #10

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nounwind
declare void @_ZN5alloc7raw_vec17capacity_overflow17he8700ca29a42fb1cE() unnamed_addr #11

; <T as core::convert::Into<U>>::into
; Function Attrs: nounwind
declare nonnull i8* @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha6f354cd956067a1E"(i8* nonnull) unnamed_addr #1

; core::panicking::panic
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64, i64, %"std::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::fmt::Formatter::debug_struct
; Function Attrs: nounwind
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nounwind
declare align 8 dereferenceable(16) %"std::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"std::fmt::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hb21f207d0a048639E"(i8** align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h12cb5da553d97228E"(i64** align 8 dereferenceable(8), %"std::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nounwind
declare void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"std::fmt::DebugTuple"* noalias nocapture sret(%"std::fmt::DebugTuple") dereferenceable(24), %"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nounwind
declare align 8 dereferenceable(24) %"std::fmt::DebugTuple"* @_ZN4core3fmt8builders10DebugTuple5field17haf529c10112494a2E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24), {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"std::fmt::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h1c97a1e0c2250458E(%"std::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

attributes #0 = { inlinehint nounwind "target-cpu"="generic" }
attributes #1 = { nounwind "target-cpu"="generic" }
attributes #2 = { noinline nounwind "target-cpu"="generic" }
attributes #3 = { cold nounwind "target-cpu"="generic" }
attributes #4 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #5 = { cold noinline noreturn nounwind "target-cpu"="generic" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nofree nosync nounwind readnone willreturn }
attributes #9 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #10 = { cold noreturn nounwind "target-cpu"="generic" }
attributes #11 = { noreturn nounwind "target-cpu"="generic" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!110, !111}
!llvm.dbg.cu = !{!112}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !5, identifier: "vtable")
!4 = !{}
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !6, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "c8afcc2f0bb79091714124bea5024341")
!6 = !DINamespace(name: "layout", scope: !7)
!7 = !DINamespace(name: "alloc", scope: !8)
!8 = !DINamespace(name: "core", scope: null)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !11, isLocal: true, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, identifier: "vtable")
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !13, size: 64, align: 64, dwarfAddressSpace: 0)
!13 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !16, isLocal: true, isDefinition: true)
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !17, identifier: "vtable")
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !18, size: 64, align: 64, dwarfAddressSpace: 0)
!18 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !21, isLocal: true, isDefinition: true)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !22, identifier: "vtable")
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !23, size: 64, align: 64, dwarfAddressSpace: 0)
!23 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !27, identifier: "vtable")
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Address", baseType: !28, size: 64, align: 64, dwarfAddressSpace: 0)
!28 = !DICompositeType(tag: DW_TAG_structure_type, name: "Address", scope: !29, file: !2, size: 128, align: 64, elements: !31, templateParams: !4, identifier: "4d45e9256bb5264e234f6a79bc0060ae")
!29 = !DINamespace(name: "storage", scope: !30)
!30 = !DINamespace(name: "bv", scope: null)
!31 = !{!32, !33}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "block_index", scope: !28, file: !2, baseType: !13, size: 64, align: 64)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !28, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!34 = !DIGlobalVariableExpression(var: !35, expr: !DIExpression())
!35 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN87_$LT$bv..slice..BitSlice$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hfd44b92c2bc758d8E", scope: !36, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!36 = !DINamespace(name: "index", scope: !37)
!37 = !DINamespace(name: "{impl#44}", scope: !38)
!38 = !DINamespace(name: "slice", scope: !30)
!39 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/macros.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "e28e4ba1276af12ee35aac6a91ab0b9e")
!40 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!41 = !DIGlobalVariableExpression(var: !42, expr: !DIExpression())
!42 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN87_$LT$bv..slice..BitSlice$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17hb9a066980136033dE", scope: !36, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!43 = !DIGlobalVariableExpression(var: !44, expr: !DIExpression())
!44 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN90_$LT$bv..slice..BitSliceMut$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hafac0edbe0934a37E", scope: !45, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!45 = !DINamespace(name: "index", scope: !46)
!46 = !DINamespace(name: "{impl#45}", scope: !38)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN90_$LT$bv..slice..BitSliceMut$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h819bccf62ca4313fE", scope: !45, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!49 = !DIGlobalVariableExpression(var: !50, expr: !DIExpression())
!50 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN2bv7bit_vec5impls97_$LT$impl$u20$core..ops..index..Index$LT$u64$GT$$u20$for$u20$bv..bit_vec..BitVec$LT$Block$GT$$GT$5index4TRUE17hb25ab061da948d1aE", scope: !51, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!51 = !DINamespace(name: "index", scope: !52)
!52 = !DINamespace(name: "{impl#23}", scope: !53)
!53 = !DINamespace(name: "impls", scope: !54)
!54 = !DINamespace(name: "bit_vec", scope: !30)
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN2bv7bit_vec5impls97_$LT$impl$u20$core..ops..index..Index$LT$u64$GT$$u20$for$u20$bv..bit_vec..BitVec$LT$Block$GT$$GT$5index5FALSE17hd7e10ee2a1eb3607E", scope: !51, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN111_$LT$bv..adapter..bit_slice_adapter..BitSliceAdapter$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h4dc3846573b83346E", scope: !59, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!59 = !DINamespace(name: "index", scope: !60)
!60 = !DINamespace(name: "{impl#19}", scope: !61)
!61 = !DINamespace(name: "bit_slice_adapter", scope: !62)
!62 = !DINamespace(name: "adapter", scope: !30)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN111_$LT$bv..adapter..bit_slice_adapter..BitSliceAdapter$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h6b43b7d5ad9d8771E", scope: !59, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!65 = !DIGlobalVariableExpression(var: !66, expr: !DIExpression())
!66 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN90_$LT$bv..adapter..logic..BitNot$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h3953da4e3684872bE", scope: !67, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!67 = !DINamespace(name: "index", scope: !68)
!68 = !DINamespace(name: "{impl#24}", scope: !69)
!69 = !DINamespace(name: "logic", scope: !62)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN90_$LT$bv..adapter..logic..BitNot$LT$T$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h73f2cad252e27e89E", scope: !67, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN94_$LT$bv..adapter..logic..BitAnd$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17ha4b9ee2121b166c6E", scope: !74, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!74 = !DINamespace(name: "index", scope: !75)
!75 = !DINamespace(name: "{impl#34}", scope: !69)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN94_$LT$bv..adapter..logic..BitAnd$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17hd9ccfb4011794535E", scope: !74, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN93_$LT$bv..adapter..logic..BitOr$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h2b5eb5648a2459d7E", scope: !80, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!80 = !DINamespace(name: "index", scope: !81)
!81 = !DINamespace(name: "{impl#44}", scope: !69)
!82 = !DIGlobalVariableExpression(var: !83, expr: !DIExpression())
!83 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN93_$LT$bv..adapter..logic..BitOr$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h6dcb414185d3a6c8E", scope: !80, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!84 = !DIGlobalVariableExpression(var: !85, expr: !DIExpression())
!85 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN94_$LT$bv..adapter..logic..BitXor$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h891a199f880dc3adE", scope: !86, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!86 = !DINamespace(name: "index", scope: !87)
!87 = !DINamespace(name: "{impl#54}", scope: !69)
!88 = !DIGlobalVariableExpression(var: !89, expr: !DIExpression())
!89 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN94_$LT$bv..adapter..logic..BitXor$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h4e6255d15950b732E", scope: !86, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN98_$LT$bv..adapter..logic..BitZip$LT$T$C$U$C$F$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17hd7e6e113f5c7e91cE", scope: !92, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!92 = !DINamespace(name: "index", scope: !93)
!93 = !DINamespace(name: "{impl#61}", scope: !69)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN98_$LT$bv..adapter..logic..BitZip$LT$T$C$U$C$F$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17he3f72af7357e681bE", scope: !92, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN98_$LT$bv..adapter..bit_fill..BitFill$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h2b93d5db1004a017E", scope: !98, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!98 = !DINamespace(name: "index", scope: !99)
!99 = !DINamespace(name: "{impl#5}", scope: !100)
!100 = !DINamespace(name: "bit_fill", scope: !62)
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN98_$LT$bv..adapter..bit_fill..BitFill$LT$Block$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h74db2d5a57153171E", scope: !98, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!103 = !DIGlobalVariableExpression(var: !104, expr: !DIExpression())
!104 = distinct !DIGlobalVariable(name: "TRUE", linkageName: "_ZN102_$LT$bv..adapter..bit_concat..BitConcat$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index4TRUE17h817650d4ba2fc477E", scope: !105, file: !39, line: 76, type: !40, isLocal: false, isDefinition: true, align: 1)
!105 = !DINamespace(name: "index", scope: !106)
!106 = !DINamespace(name: "{impl#5}", scope: !107)
!107 = !DINamespace(name: "bit_concat", scope: !62)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "FALSE", linkageName: "_ZN102_$LT$bv..adapter..bit_concat..BitConcat$LT$T$C$U$GT$$u20$as$u20$core..ops..index..Index$LT$u64$GT$$GT$5index5FALSE17h1dadb25d586a3bc1E", scope: !105, file: !39, line: 77, type: !40, isLocal: false, isDefinition: true, align: 1)
!110 = !{i32 7, !"PIC Level", i32 2}
!111 = !{i32 2, !"Debug Info Version", i32 3}
!112 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !113, producer: "clang LLVM (rustc version 1.56.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !114, globals: !142)
!113 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/lib.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1")
!114 = !{!115, !120, !129, !136}
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Result", scope: !116, file: !2, baseType: !18, size: 8, align: 8, flags: DIFlagEnumClass, elements: !117)
!116 = !DINamespace(name: "result", scope: !8)
!117 = !{!118, !119}
!118 = !DIEnumerator(name: "Ok", value: 0)
!119 = !DIEnumerator(name: "Err", value: 1)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !121, file: !2, baseType: !18, size: 8, align: 8, flags: DIFlagEnumClass, elements: !124)
!121 = !DINamespace(name: "v1", scope: !122)
!122 = !DINamespace(name: "rt", scope: !123)
!123 = !DINamespace(name: "fmt", scope: !8)
!124 = !{!125, !126, !127, !128}
!125 = !DIEnumerator(name: "Left", value: 0)
!126 = !DIEnumerator(name: "Right", value: 1)
!127 = !DIEnumerator(name: "Center", value: 2)
!128 = !DIEnumerator(name: "Unknown", value: 3)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !130, file: !2, baseType: !131, size: 8, align: 8, flags: DIFlagEnumClass, elements: !132)
!130 = !DINamespace(name: "cmp", scope: !8)
!131 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!132 = !{!133, !134, !135}
!133 = !DIEnumerator(name: "Less", value: -1)
!134 = !DIEnumerator(name: "Equal", value: 0)
!135 = !DIEnumerator(name: "Greater", value: 1)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !137, file: !2, baseType: !18, size: 8, align: 8, flags: DIFlagEnumClass, elements: !138)
!137 = !DINamespace(name: "panicking", scope: !8)
!138 = !{!139, !140, !141}
!139 = !DIEnumerator(name: "Eq", value: 0)
!140 = !DIEnumerator(name: "Ne", value: 1)
!141 = !DIEnumerator(name: "Match", value: 2)
!142 = !{!0, !9, !14, !19, !24, !34, !41, !43, !47, !49, !55, !57, !63, !65, !70, !72, !76, !78, !82, !84, !88, !90, !94, !96, !101, !103, !108}
!143 = distinct !DISubprogram(name: "get_unchecked<bool>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h6b361164f9297badE", scope: !145, file: !144, line: 219, type: !148, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !163)
!144 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "a82bc19197b1c05f8386d5b2ec2441bd")
!145 = !DINamespace(name: "{impl#3}", scope: !146)
!146 = !DINamespace(name: "index", scope: !147)
!147 = !DINamespace(name: "slice", scope: !8)
!148 = !DISubroutineType(types: !149)
!149 = !{!150, !155, !150}
!150 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bool]", file: !2, size: 128, align: 64, elements: !151, templateParams: !4, identifier: "317e673053454c5de9af4aa39a7f5ad2")
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !150, file: !2, baseType: !153, size: 64, align: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bool", baseType: !40, size: 64, align: 64, dwarfAddressSpace: 0)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !150, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !156, file: !2, size: 128, align: 64, elements: !158, templateParams: !161, identifier: "519e5ef7586dbc9eb7e108f1b1bab509")
!156 = !DINamespace(name: "range", scope: !157)
!157 = !DINamespace(name: "ops", scope: !8)
!158 = !{!159, !160}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !155, file: !2, baseType: !13, size: 64, align: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !155, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!161 = !{!162}
!162 = !DITemplateTypeParameter(name: "Idx", type: !13)
!163 = !{!164, !165}
!164 = !DILocalVariable(name: "self", arg: 1, scope: !143, file: !144, line: 219, type: !155)
!165 = !DILocalVariable(name: "slice", arg: 2, scope: !143, file: !144, line: 219, type: !150)
!166 = !{!167}
!167 = !DITemplateTypeParameter(name: "T", type: !40)
!168 = !DILocation(line: 219, column: 29, scope: !143)
!169 = !DILocation(line: 219, column: 35, scope: !143)
!170 = !DILocation(line: 224, column: 44, scope: !143)
!171 = !DILocalVariable(name: "self", arg: 1, scope: !172, file: !173, line: 511, type: !153)
!172 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h8aa4797e0e30b09eE", scope: !174, file: !173, line: 511, type: !177, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !179)
!173 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3efc72e5c37c5202bb58c77289e8c38")
!174 = !DINamespace(name: "{impl#0}", scope: !175)
!175 = !DINamespace(name: "const_ptr", scope: !176)
!176 = !DINamespace(name: "ptr", scope: !8)
!177 = !DISubroutineType(types: !178)
!178 = !{!153, !153, !13}
!179 = !{!171, !180}
!180 = !DILocalVariable(name: "count", arg: 2, scope: !172, file: !173, line: 511, type: !13)
!181 = !DILocation(line: 511, column: 29, scope: !172, inlinedAt: !182)
!182 = distinct !DILocation(line: 224, column: 44, scope: !143)
!183 = !DILocation(line: 511, column: 35, scope: !172, inlinedAt: !182)
!184 = !DILocalVariable(name: "self", arg: 1, scope: !185, file: !173, line: 230, type: !153)
!185 = distinct !DISubprogram(name: "offset<bool>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17hc77ca86a595201a4E", scope: !174, file: !173, line: 230, type: !186, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !189)
!186 = !DISubroutineType(types: !187)
!187 = !{!153, !153, !188}
!188 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!189 = !{!184, !190}
!190 = !DILocalVariable(name: "count", arg: 2, scope: !185, file: !173, line: 230, type: !188)
!191 = !DILocation(line: 230, column: 32, scope: !185, inlinedAt: !192)
!192 = distinct !DILocation(line: 516, column: 18, scope: !172, inlinedAt: !182)
!193 = !DILocation(line: 230, column: 38, scope: !185, inlinedAt: !192)
!194 = !DILocation(line: 235, column: 18, scope: !185, inlinedAt: !192)
!195 = !DILocation(line: 224, column: 76, scope: !143)
!196 = !DILocation(line: 224, column: 18, scope: !143)
!197 = !DILocation(line: 225, column: 6, scope: !143)
!198 = distinct !DISubprogram(name: "get_unchecked_mut<bool>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17ha12e7f78a8a69df8E", scope: !145, file: !144, line: 228, type: !199, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !205)
!199 = !DISubroutineType(types: !200)
!200 = !{!201, !155, !201}
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bool]", file: !2, size: 128, align: 64, elements: !202, templateParams: !4, identifier: "ee2d009e42bdfa072611b02dc1947c22")
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !201, file: !2, baseType: !153, size: 64, align: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !201, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!205 = !{!206, !207}
!206 = !DILocalVariable(name: "self", arg: 1, scope: !198, file: !144, line: 228, type: !155)
!207 = !DILocalVariable(name: "slice", arg: 2, scope: !198, file: !144, line: 228, type: !201)
!208 = !DILocation(line: 228, column: 33, scope: !198)
!209 = !DILocation(line: 228, column: 39, scope: !198)
!210 = !DILocalVariable(name: "self", arg: 1, scope: !211, file: !212, line: 1197, type: !201)
!211 = distinct !DISubprogram(name: "as_mut_ptr<bool>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h2fbedc8af53d788aE", scope: !213, file: !212, line: 1197, type: !215, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !218)
!212 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "dc9433fa5edb0740532b3ed97e3aaa10")
!213 = !DINamespace(name: "{impl#1}", scope: !214)
!214 = !DINamespace(name: "mut_ptr", scope: !176)
!215 = !DISubroutineType(types: !216)
!216 = !{!217, !201}
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bool", baseType: !40, size: 64, align: 64, dwarfAddressSpace: 0)
!218 = !{!210}
!219 = !DILocation(line: 1197, column: 29, scope: !211, inlinedAt: !220)
!220 = distinct !DILocation(line: 231, column: 43, scope: !198)
!221 = !DILocation(line: 1198, column: 9, scope: !211, inlinedAt: !220)
!222 = !DILocation(line: 231, column: 43, scope: !198)
!223 = !DILocalVariable(name: "self", arg: 1, scope: !224, file: !212, line: 618, type: !217)
!224 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h15db1ddf9674bf55E", scope: !225, file: !212, line: 618, type: !226, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !228)
!225 = !DINamespace(name: "{impl#0}", scope: !214)
!226 = !DISubroutineType(types: !227)
!227 = !{!217, !217, !13}
!228 = !{!223, !229}
!229 = !DILocalVariable(name: "count", arg: 2, scope: !224, file: !212, line: 618, type: !13)
!230 = !DILocation(line: 618, column: 29, scope: !224, inlinedAt: !231)
!231 = distinct !DILocation(line: 231, column: 43, scope: !198)
!232 = !DILocation(line: 618, column: 35, scope: !224, inlinedAt: !231)
!233 = !DILocalVariable(name: "self", arg: 1, scope: !234, file: !212, line: 235, type: !217)
!234 = distinct !DISubprogram(name: "offset<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17ha748d210597ffddbE", scope: !225, file: !212, line: 235, type: !235, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !237)
!235 = !DISubroutineType(types: !236)
!236 = !{!217, !217, !188}
!237 = !{!233, !238}
!238 = !DILocalVariable(name: "count", arg: 2, scope: !234, file: !212, line: 235, type: !188)
!239 = !DILocation(line: 235, column: 32, scope: !234, inlinedAt: !240)
!240 = distinct !DILocation(line: 623, column: 18, scope: !224, inlinedAt: !231)
!241 = !DILocation(line: 235, column: 38, scope: !234, inlinedAt: !240)
!242 = !DILocation(line: 242, column: 18, scope: !234, inlinedAt: !240)
!243 = !DILocation(line: 231, column: 79, scope: !198)
!244 = !DILocation(line: 231, column: 13, scope: !198)
!245 = !DILocation(line: 233, column: 6, scope: !198)
!246 = distinct !DISubprogram(name: "index<bool>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hedc7be578077d5c3E", scope: !145, file: !144, line: 236, type: !247, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !267)
!247 = !DISubroutineType(types: !248)
!248 = !{!249, !155, !249, !253}
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bool]", file: !2, size: 128, align: 64, elements: !250, templateParams: !4, identifier: "2c29bc27795334d4890e168384bc7b74")
!250 = !{!251, !252}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !249, file: !2, baseType: !153, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !249, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Location", baseType: !254, size: 64, align: 64, dwarfAddressSpace: 0)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !255, file: !2, size: 192, align: 64, elements: !257, templateParams: !4, identifier: "9f9749776572719cc82f4bbe4f5eb8d")
!255 = !DINamespace(name: "location", scope: !256)
!256 = !DINamespace(name: "panic", scope: !8)
!257 = !{!258, !264, !266}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !254, file: !2, baseType: !259, size: 128, align: 64)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !260, templateParams: !4, identifier: "7ef2a91eecc7bcf4b4aaea2dbce79437")
!260 = !{!261, !263}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !259, file: !2, baseType: !262, size: 64, align: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !18, size: 64, align: 64, dwarfAddressSpace: 0)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !259, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !254, file: !2, baseType: !265, size: 32, align: 32, offset: 128)
!265 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !254, file: !2, baseType: !265, size: 32, align: 32, offset: 160)
!267 = !{!268, !269}
!268 = !DILocalVariable(name: "self", arg: 1, scope: !246, file: !144, line: 236, type: !155)
!269 = !DILocalVariable(name: "slice", arg: 2, scope: !246, file: !144, line: 236, type: !249)
!270 = !DILocation(line: 236, column: 14, scope: !246)
!271 = !DILocation(line: 236, column: 20, scope: !246)
!272 = !DILocation(line: 237, column: 12, scope: !246)
!273 = !DILocation(line: 239, column: 19, scope: !246)
!274 = !DILocation(line: 238, column: 13, scope: !246)
!275 = !DILocation(line: 243, column: 20, scope: !246)
!276 = !DILocation(line: 240, column: 13, scope: !246)
!277 = !DILocation(line: 244, column: 6, scope: !246)
!278 = distinct !DISubprogram(name: "index_mut<bool>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h537bc549b739c8bdE", scope: !145, file: !144, line: 247, type: !279, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !285)
!279 = !DISubroutineType(types: !280)
!280 = !{!281, !155, !281, !253}
!281 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [bool]", file: !2, size: 128, align: 64, elements: !282, templateParams: !4, identifier: "33b668b82639787141dfad1723c7669e")
!282 = !{!283, !284}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !281, file: !2, baseType: !153, size: 64, align: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !281, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!285 = !{!286, !287}
!286 = !DILocalVariable(name: "self", arg: 1, scope: !278, file: !144, line: 247, type: !155)
!287 = !DILocalVariable(name: "slice", arg: 2, scope: !278, file: !144, line: 247, type: !281)
!288 = !DILocation(line: 247, column: 18, scope: !278)
!289 = !DILocation(line: 247, column: 24, scope: !278)
!290 = !DILocation(line: 248, column: 12, scope: !278)
!291 = !DILocation(line: 250, column: 19, scope: !278)
!292 = !DILocation(line: 249, column: 13, scope: !278)
!293 = !DILocation(line: 254, column: 24, scope: !278)
!294 = !DILocation(line: 251, column: 13, scope: !278)
!295 = !DILocation(line: 255, column: 6, scope: !278)
!296 = distinct !DISubprogram(name: "spec_next_back<u64>", linkageName: "_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$14spec_next_back17h081f7f4a861839bdE", scope: !298, file: !297, line: 966, type: !301, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !325)
!297 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "dd2120efb48f64c11ba5a73ce3f093f0")
!298 = !DINamespace(name: "{impl#11}", scope: !299)
!299 = !DINamespace(name: "range", scope: !300)
!300 = !DINamespace(name: "iter", scope: !8)
!301 = !DISubroutineType(types: !302)
!302 = !{!303, !317}
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !304, file: !2, size: 128, align: 64, elements: !305, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0")
!304 = !DINamespace(name: "option", scope: !8)
!305 = !{!306}
!306 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 128, align: 64, elements: !307, templateParams: !310, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0_variant_part", discriminator: !316)
!307 = !{!308, !312}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !306, file: !2, baseType: !309, size: 128, align: 64, extraData: i64 0)
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !303, file: !2, size: 128, align: 64, elements: !4, templateParams: !310, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0::None")
!310 = !{!311}
!311 = !DITemplateTypeParameter(name: "T", type: !23)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !306, file: !2, baseType: !313, size: 128, align: 64, extraData: i64 1)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !303, file: !2, size: 128, align: 64, elements: !314, templateParams: !310, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0::Some")
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !313, file: !2, baseType: !23, size: 64, align: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, scope: !304, file: !2, baseType: !23, size: 64, align: 64, flags: DIFlagArtificial)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut RangeInclusive<u64>", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<u64>", scope: !156, file: !2, size: 192, align: 64, elements: !319, templateParams: !323, identifier: "ef99f7ff8a4d922b3484944c3152c07a")
!319 = !{!320, !321, !322}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !318, file: !2, baseType: !23, size: 64, align: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !318, file: !2, baseType: !23, size: 64, align: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !318, file: !2, baseType: !40, size: 8, align: 8, offset: 128)
!323 = !{!324}
!324 = !DITemplateTypeParameter(name: "Idx", type: !23)
!325 = !{!326, !327, !329}
!326 = !DILocalVariable(name: "self", arg: 1, scope: !296, file: !297, line: 966, type: !317)
!327 = !DILocalVariable(name: "is_iterating", scope: !328, file: !297, line: 970, type: !40, align: 1)
!328 = distinct !DILexicalBlock(scope: !296, file: !297, line: 970, column: 9)
!329 = !DILocalVariable(name: "n", scope: !330, file: !297, line: 973, type: !23, align: 8)
!330 = distinct !DILexicalBlock(scope: !328, file: !297, line: 973, column: 13)
!331 = !DILocation(line: 966, column: 23, scope: !296)
!332 = !DILocation(line: 967, column: 12, scope: !296)
!333 = !DILocation(line: 970, column: 28, scope: !296)
!334 = !DILocation(line: 970, column: 41, scope: !296)
!335 = !DILocation(line: 970, column: 13, scope: !328)
!336 = !DILocation(line: 968, column: 20, scope: !296)
!337 = !DILocation(line: 979, column: 6, scope: !296)
!338 = !{i64 0, i64 2}
!339 = !DILocation(line: 971, column: 17, scope: !328)
!340 = !DILocation(line: 976, column: 13, scope: !328)
!341 = !DILocation(line: 977, column: 13, scope: !328)
!342 = !DILocation(line: 973, column: 55, scope: !328)
!343 = !DILocation(line: 973, column: 30, scope: !328)
!344 = !DILocation(line: 973, column: 17, scope: !330)
!345 = !DILocation(line: 974, column: 26, scope: !330)
!346 = !DILocation(line: 974, column: 13, scope: !330)
!347 = !DILocation(line: 971, column: 14, scope: !328)
!348 = !DILocation(line: 971, column: 9, scope: !328)
!349 = distinct !DISubprogram(name: "spec_next<u64>", linkageName: "_ZN107_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..iter..range..RangeInclusiveIteratorImpl$GT$9spec_next17hb5be16b40906cf2aE", scope: !298, file: !297, line: 921, type: !301, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !350)
!350 = !{!351, !352, !354}
!351 = !DILocalVariable(name: "self", arg: 1, scope: !349, file: !297, line: 921, type: !317)
!352 = !DILocalVariable(name: "is_iterating", scope: !353, file: !297, line: 925, type: !40, align: 1)
!353 = distinct !DILexicalBlock(scope: !349, file: !297, line: 925, column: 9)
!354 = !DILocalVariable(name: "n", scope: !355, file: !297, line: 928, type: !23, align: 8)
!355 = distinct !DILexicalBlock(scope: !353, file: !297, line: 928, column: 13)
!356 = !DILocation(line: 921, column: 18, scope: !349)
!357 = !DILocation(line: 922, column: 12, scope: !349)
!358 = !DILocation(line: 925, column: 28, scope: !349)
!359 = !DILocation(line: 925, column: 41, scope: !349)
!360 = !DILocation(line: 925, column: 13, scope: !353)
!361 = !DILocation(line: 923, column: 20, scope: !349)
!362 = !DILocation(line: 934, column: 6, scope: !349)
!363 = !DILocation(line: 926, column: 17, scope: !353)
!364 = !DILocation(line: 931, column: 13, scope: !353)
!365 = !DILocation(line: 932, column: 13, scope: !353)
!366 = !DILocation(line: 928, column: 54, scope: !353)
!367 = !DILocation(line: 928, column: 30, scope: !353)
!368 = !DILocation(line: 928, column: 17, scope: !355)
!369 = !DILocation(line: 929, column: 26, scope: !355)
!370 = !DILocation(line: 929, column: 13, scope: !355)
!371 = !DILocation(line: 926, column: 14, scope: !353)
!372 = !DILocation(line: 926, column: 9, scope: !353)
!373 = distinct !DISubprogram(name: "index<bool>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15e82f39403ea56dE", scope: !374, file: !144, line: 285, type: !375, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !380)
!374 = !DINamespace(name: "{impl#4}", scope: !146)
!375 = !DISubroutineType(types: !376)
!376 = !{!249, !377, !249, !253}
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !156, file: !2, size: 64, align: 64, elements: !378, templateParams: !161, identifier: "3e48b56f3047a6495d250669d7a4f287")
!378 = !{!379}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !377, file: !2, baseType: !13, size: 64, align: 64)
!380 = !{!381, !382}
!381 = !DILocalVariable(name: "self", arg: 1, scope: !373, file: !144, line: 285, type: !377)
!382 = !DILocalVariable(name: "slice", arg: 2, scope: !373, file: !144, line: 285, type: !249)
!383 = !DILocation(line: 285, column: 14, scope: !373)
!384 = !DILocation(line: 285, column: 20, scope: !373)
!385 = !DILocation(line: 286, column: 9, scope: !373)
!386 = !DILocation(line: 287, column: 6, scope: !373)
!387 = distinct !DISubprogram(name: "index_mut<bool>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h79188cab2ad3be78E", scope: !374, file: !144, line: 290, type: !388, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !390)
!388 = !DISubroutineType(types: !389)
!389 = !{!281, !377, !281, !253}
!390 = !{!391, !392}
!391 = !DILocalVariable(name: "self", arg: 1, scope: !387, file: !144, line: 290, type: !377)
!392 = !DILocalVariable(name: "slice", arg: 2, scope: !387, file: !144, line: 290, type: !281)
!393 = !DILocation(line: 290, column: 18, scope: !387)
!394 = !DILocation(line: 290, column: 24, scope: !387)
!395 = !DILocation(line: 291, column: 9, scope: !387)
!396 = !DILocation(line: 292, column: 6, scope: !387)
!397 = distinct !DISubprogram(name: "get_unchecked<bool>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3ca9a80ffabdce03E", scope: !398, file: !144, line: 310, type: !399, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !404)
!398 = !DINamespace(name: "{impl#5}", scope: !146)
!399 = !DISubroutineType(types: !400)
!400 = !{!150, !401, !150}
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !156, file: !2, size: 64, align: 64, elements: !402, templateParams: !161, identifier: "e075dc6e7a89d0be4297c8fc5af78aa")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !401, file: !2, baseType: !13, size: 64, align: 64)
!404 = !{!405, !406}
!405 = !DILocalVariable(name: "self", arg: 1, scope: !397, file: !144, line: 310, type: !401)
!406 = !DILocalVariable(name: "slice", arg: 2, scope: !397, file: !144, line: 310, type: !150)
!407 = !DILocation(line: 310, column: 29, scope: !397)
!408 = !DILocation(line: 310, column: 35, scope: !397)
!409 = !DILocation(line: 312, column: 31, scope: !397)
!410 = !DILocation(line: 312, column: 18, scope: !397)
!411 = !DILocation(line: 313, column: 6, scope: !397)
!412 = distinct !DISubprogram(name: "get_unchecked_mut<bool>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h2a3fe2784fd580e4E", scope: !398, file: !144, line: 316, type: !413, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !415)
!413 = !DISubroutineType(types: !414)
!414 = !{!201, !401, !201}
!415 = !{!416, !417}
!416 = !DILocalVariable(name: "self", arg: 1, scope: !412, file: !144, line: 316, type: !401)
!417 = !DILocalVariable(name: "slice", arg: 2, scope: !412, file: !144, line: 316, type: !201)
!418 = !DILocation(line: 316, column: 33, scope: !412)
!419 = !DILocation(line: 316, column: 39, scope: !412)
!420 = !DILocalVariable(name: "self", arg: 1, scope: !421, file: !212, line: 1177, type: !201)
!421 = distinct !DISubprogram(name: "len<bool>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h1349ce4b55886fa4E", scope: !213, file: !212, line: 1177, type: !422, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !424)
!422 = !DISubroutineType(types: !423)
!423 = !{!13, !201}
!424 = !{!420}
!425 = !DILocation(line: 1177, column: 22, scope: !421, inlinedAt: !426)
!426 = distinct !DILocation(line: 318, column: 31, scope: !412)
!427 = !DILocation(line: 1178, column: 9, scope: !421, inlinedAt: !426)
!428 = !DILocation(line: 318, column: 31, scope: !412)
!429 = !DILocation(line: 318, column: 18, scope: !412)
!430 = !DILocation(line: 319, column: 6, scope: !412)
!431 = distinct !DISubprogram(name: "index<bool>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h15d56497395e1855E", scope: !398, file: !144, line: 322, type: !432, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !434)
!432 = !DISubroutineType(types: !433)
!433 = !{!249, !401, !249, !253}
!434 = !{!435, !436}
!435 = !DILocalVariable(name: "self", arg: 1, scope: !431, file: !144, line: 322, type: !401)
!436 = !DILocalVariable(name: "slice", arg: 2, scope: !431, file: !144, line: 322, type: !249)
!437 = !DILocation(line: 322, column: 14, scope: !431)
!438 = !DILocation(line: 322, column: 20, scope: !431)
!439 = !DILocation(line: 323, column: 12, scope: !431)
!440 = !DILocation(line: 327, column: 20, scope: !431)
!441 = !DILocation(line: 324, column: 13, scope: !431)
!442 = !DILocation(line: 328, column: 6, scope: !431)
!443 = distinct !DISubprogram(name: "index_mut<bool>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h4a9a22fc093cdcf9E", scope: !398, file: !144, line: 331, type: !444, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !446)
!444 = !DISubroutineType(types: !445)
!445 = !{!281, !401, !281, !253}
!446 = !{!447, !448}
!447 = !DILocalVariable(name: "self", arg: 1, scope: !443, file: !144, line: 331, type: !401)
!448 = !DILocalVariable(name: "slice", arg: 2, scope: !443, file: !144, line: 331, type: !281)
!449 = !DILocation(line: 331, column: 18, scope: !443)
!450 = !DILocation(line: 331, column: 24, scope: !443)
!451 = !DILocation(line: 332, column: 12, scope: !443)
!452 = !DILocation(line: 336, column: 24, scope: !443)
!453 = !DILocation(line: 333, column: 13, scope: !443)
!454 = !DILocation(line: 337, column: 6, scope: !443)
!455 = distinct !DISubprogram(name: "index<bool>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h5d52c65e07da6234E", scope: !456, file: !144, line: 402, type: !457, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !464)
!456 = !DINamespace(name: "{impl#7}", scope: !146)
!457 = !DISubroutineType(types: !458)
!458 = !{!249, !459, !249, !253}
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !156, file: !2, size: 192, align: 64, elements: !460, templateParams: !161, identifier: "6e11442ddda9dd6e86e3d9e3009cfddb")
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !459, file: !2, baseType: !13, size: 64, align: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !459, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !459, file: !2, baseType: !40, size: 8, align: 8, offset: 128)
!464 = !{!465, !466}
!465 = !DILocalVariable(name: "self", arg: 1, scope: !455, file: !144, line: 402, type: !459)
!466 = !DILocalVariable(name: "slice", arg: 2, scope: !455, file: !144, line: 402, type: !249)
!467 = !DILocation(line: 402, column: 14, scope: !455)
!468 = !DILocation(line: 402, column: 20, scope: !455)
!469 = !DILocation(line: 403, column: 13, scope: !455)
!470 = !DILocation(line: 403, column: 12, scope: !455)
!471 = !DILocation(line: 406, column: 9, scope: !455)
!472 = !DILocation(line: 404, column: 13, scope: !455)
!473 = !DILocation(line: 407, column: 6, scope: !455)
!474 = distinct !DISubprogram(name: "index_mut<bool>", linkageName: "_ZN115_$LT$core..ops..range..RangeInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h0812a8858a050ba1E", scope: !456, file: !144, line: 410, type: !475, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !477)
!475 = !DISubroutineType(types: !476)
!476 = !{!281, !459, !281, !253}
!477 = !{!478, !479}
!478 = !DILocalVariable(name: "self", arg: 1, scope: !474, file: !144, line: 410, type: !459)
!479 = !DILocalVariable(name: "slice", arg: 2, scope: !474, file: !144, line: 410, type: !281)
!480 = !DILocation(line: 410, column: 18, scope: !474)
!481 = !DILocation(line: 410, column: 24, scope: !474)
!482 = !DILocation(line: 411, column: 13, scope: !474)
!483 = !DILocation(line: 411, column: 12, scope: !474)
!484 = !DILocation(line: 414, column: 9, scope: !474)
!485 = !DILocation(line: 412, column: 13, scope: !474)
!486 = !DILocation(line: 415, column: 6, scope: !474)
!487 = distinct !DISubprogram(name: "index<bool>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hfd20876303f79b2bE", scope: !488, file: !144, line: 445, type: !489, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !494)
!488 = !DINamespace(name: "{impl#8}", scope: !146)
!489 = !DISubroutineType(types: !490)
!490 = !{!249, !491, !249, !253}
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<usize>", scope: !156, file: !2, size: 64, align: 64, elements: !492, templateParams: !161, identifier: "91243440ccb71a93d1be2e04e30680a0")
!492 = !{!493}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !491, file: !2, baseType: !13, size: 64, align: 64)
!494 = !{!495, !496}
!495 = !DILocalVariable(name: "self", arg: 1, scope: !487, file: !144, line: 445, type: !491)
!496 = !DILocalVariable(name: "slice", arg: 2, scope: !487, file: !144, line: 445, type: !249)
!497 = !DILocation(line: 445, column: 14, scope: !487)
!498 = !DILocation(line: 445, column: 20, scope: !487)
!499 = !DILocation(line: 446, column: 9, scope: !487)
!500 = !DILocation(line: 447, column: 6, scope: !487)
!501 = distinct !DISubprogram(name: "index_mut<bool>", linkageName: "_ZN117_$LT$core..ops..range..RangeToInclusive$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hd4560bfaae627711E", scope: !488, file: !144, line: 450, type: !502, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !504)
!502 = !DISubroutineType(types: !503)
!503 = !{!281, !491, !281, !253}
!504 = !{!505, !506}
!505 = !DILocalVariable(name: "self", arg: 1, scope: !501, file: !144, line: 450, type: !491)
!506 = !DILocalVariable(name: "slice", arg: 2, scope: !501, file: !144, line: 450, type: !281)
!507 = !DILocation(line: 450, column: 18, scope: !501)
!508 = !DILocation(line: 450, column: 24, scope: !501)
!509 = !DILocation(line: 451, column: 9, scope: !501)
!510 = !DILocation(line: 452, column: 6, scope: !501)
!511 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17h96a99ae44b831ab1E", scope: !513, file: !512, line: 115, type: !516, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !543)
!512 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/collections/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "f520a3b301bedb9c22ac84264ef5f708")
!513 = !DINamespace(name: "{impl#1}", scope: !514)
!514 = !DINamespace(name: "collections", scope: !515)
!515 = !DINamespace(name: "alloc", scope: null)
!516 = !DISubroutineType(types: !517)
!517 = !{!518, !521}
!518 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !514, file: !2, size: 128, align: 64, elements: !519, templateParams: !4, identifier: "b5ed00f382f0d5c5cb05f00eb9601f74")
!519 = !{!520}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !518, file: !2, baseType: !521, size: 128, align: 64)
!521 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !514, file: !2, size: 128, align: 64, elements: !522, identifier: "bd42b2b23f724657f7f1bd089ff6e025")
!522 = !{!523}
!523 = !DICompositeType(tag: DW_TAG_variant_part, scope: !514, file: !2, size: 128, align: 64, elements: !524, templateParams: !4, identifier: "bd42b2b23f724657f7f1bd089ff6e025_variant_part", discriminator: !542)
!524 = !{!525, !527}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !523, file: !2, baseType: !526, size: 128, align: 64, extraData: i64 0)
!526 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !521, file: !2, size: 128, align: 64, elements: !4, templateParams: !4, identifier: "bd42b2b23f724657f7f1bd089ff6e025::CapacityOverflow")
!527 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !523, file: !2, baseType: !528, size: 128, align: 64)
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !521, file: !2, size: 128, align: 64, elements: !529, templateParams: !4, identifier: "bd42b2b23f724657f7f1bd089ff6e025::AllocError")
!529 = !{!530, !540}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !528, file: !2, baseType: !531, size: 128, align: 64)
!531 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !6, file: !2, size: 128, align: 64, elements: !532, templateParams: !4, identifier: "f69d3395c48d400fe21824ae0e4df080")
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "size_", scope: !531, file: !2, baseType: !13, size: 64, align: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "align_", scope: !531, file: !2, baseType: !535, size: 64, align: 64, offset: 64)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsize", scope: !536, file: !2, size: 64, align: 64, elements: !538, templateParams: !4, identifier: "21623c21723d1648102501c4f9f9b08d")
!536 = !DINamespace(name: "nonzero", scope: !537)
!537 = !DINamespace(name: "num", scope: !8)
!538 = !{!539}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !535, file: !2, baseType: !13, size: 64, align: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !528, file: !2, baseType: !541, align: 8)
!541 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !514, file: !2, baseType: !23, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!543 = !{!544}
!544 = !DILocalVariable(name: "kind", arg: 1, scope: !511, file: !512, line: 115, type: !521)
!545 = !DILocation(line: 115, column: 13, scope: !511)
!546 = !DILocation(line: 116, column: 9, scope: !511)
!547 = !DILocation(line: 117, column: 6, scope: !511)
!548 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4cea48849ed67474E", scope: !550, file: !549, line: 1913, type: !551, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !601, retainedNodes: !597)
!549 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "f73030f150a3926f0f5a346ed13cef73")
!550 = !DINamespace(name: "{impl#37}", scope: !116)
!551 = !DISubroutineType(types: !552)
!552 = !{!553, !582}
!553 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !116, file: !2, size: 192, align: 64, elements: !554, identifier: "e4977bc704576c4053e09e46b9490363")
!554 = !{!555}
!555 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !556, templateParams: !574, identifier: "e4977bc704576c4053e09e46b9490363_variant_part", discriminator: !581)
!556 = !{!557, !577}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !555, file: !2, baseType: !558, size: 192, align: 64, extraData: i64 0)
!558 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !553, file: !2, size: 192, align: 64, elements: !559, templateParams: !574, identifier: "e4977bc704576c4053e09e46b9490363::Ok")
!559 = !{!560}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !558, file: !2, baseType: !561, size: 128, align: 64, offset: 64)
!561 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !562, file: !2, size: 128, align: 64, elements: !563, templateParams: !569, identifier: "7a9278b7166ad75b206b800760749ea")
!562 = !DINamespace(name: "non_null", scope: !176)
!563 = !{!564}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !561, file: !2, baseType: !565, size: 128, align: 64)
!565 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !566, templateParams: !4, identifier: "f5bc56280f62752aca6114f169d6965e")
!566 = !{!567, !568}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !565, file: !2, baseType: !262, size: 64, align: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !565, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!569 = !{!570}
!570 = !DITemplateTypeParameter(name: "T", type: !571)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, align: 8, elements: !572)
!572 = !{!573}
!573 = !DISubrange(count: -1, lowerBound: 0)
!574 = !{!575, !576}
!575 = !DITemplateTypeParameter(name: "T", type: !561)
!576 = !DITemplateTypeParameter(name: "E", type: !518)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !555, file: !2, baseType: !578, size: 192, align: 64, extraData: i64 1)
!578 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !553, file: !2, size: 192, align: 64, elements: !579, templateParams: !574, identifier: "e4977bc704576c4053e09e46b9490363::Err")
!579 = !{!580}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !578, file: !2, baseType: !518, size: 128, align: 64, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !116, file: !2, baseType: !23, size: 64, align: 64, flags: DIFlagArtificial)
!582 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !116, file: !2, size: 128, align: 64, elements: !583, identifier: "7dbd706f82187002e83023bc269f03a1")
!583 = !{!584}
!584 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 128, align: 64, elements: !585, templateParams: !590, identifier: "7dbd706f82187002e83023bc269f03a1_variant_part")
!585 = !{!586}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !584, file: !2, baseType: !587, size: 128, align: 64)
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !582, file: !2, size: 128, align: 64, elements: !588, templateParams: !590, identifier: "7dbd706f82187002e83023bc269f03a1::Err")
!588 = !{!589}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !587, file: !2, baseType: !521, size: 128, align: 64)
!590 = !{!591, !596}
!591 = !DITemplateTypeParameter(name: "T", type: !592)
!592 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !593, file: !2, align: 8, elements: !594, identifier: "866eee8446b1bfa4f6d9cf9584e40412")
!593 = !DINamespace(name: "convert", scope: !8)
!594 = !{!595}
!595 = !DICompositeType(tag: DW_TAG_variant_part, scope: !593, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "866eee8446b1bfa4f6d9cf9584e40412_variant_part")
!596 = !DITemplateTypeParameter(name: "E", type: !521)
!597 = !{!598, !599}
!598 = !DILocalVariable(name: "residual", arg: 1, scope: !548, file: !549, line: 1913, type: !582)
!599 = !DILocalVariable(name: "e", scope: !600, file: !549, line: 1915, type: !521, align: 8)
!600 = distinct !DILexicalBlock(scope: !548, file: !549, line: 1915, column: 13)
!601 = !{!575, !596, !602}
!602 = !DITemplateTypeParameter(name: "F", type: !518)
!603 = !DILocation(line: 1913, column: 22, scope: !548)
!604 = !DILocation(line: 1915, column: 17, scope: !548)
!605 = !DILocation(line: 1915, column: 17, scope: !600)
!606 = !DILocation(line: 1915, column: 27, scope: !600)
!607 = !DILocation(line: 1915, column: 23, scope: !600)
!608 = !DILocation(line: 1917, column: 6, scope: !548)
!609 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h6aebebef758041deE", scope: !550, file: !549, line: 1913, type: !610, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !639, retainedNodes: !635)
!610 = !DISubroutineType(types: !611)
!611 = !{!612, !626}
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !116, file: !2, size: 192, align: 64, elements: !613, identifier: "440164621559721dd2015f60ca42af45")
!613 = !{!614}
!614 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !615, templateParams: !620, identifier: "440164621559721dd2015f60ca42af45_variant_part", discriminator: !581)
!615 = !{!616, !622}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !614, file: !2, baseType: !617, size: 192, align: 64, extraData: i64 0)
!617 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !612, file: !2, size: 192, align: 64, elements: !618, templateParams: !620, identifier: "440164621559721dd2015f60ca42af45::Ok")
!618 = !{!619}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !617, file: !2, baseType: !541, align: 8, offset: 64)
!620 = !{!621, !576}
!621 = !DITemplateTypeParameter(name: "T", type: !541)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !614, file: !2, baseType: !623, size: 192, align: 64, extraData: i64 1)
!623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !612, file: !2, size: 192, align: 64, elements: !624, templateParams: !620, identifier: "440164621559721dd2015f60ca42af45::Err")
!624 = !{!625}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !623, file: !2, baseType: !518, size: 128, align: 64, offset: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !116, file: !2, size: 128, align: 64, elements: !627, identifier: "b029acfb30b8f8ccac64e6f8391e344c")
!627 = !{!628}
!628 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 128, align: 64, elements: !629, templateParams: !634, identifier: "b029acfb30b8f8ccac64e6f8391e344c_variant_part")
!629 = !{!630}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !628, file: !2, baseType: !631, size: 128, align: 64)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !626, file: !2, size: 128, align: 64, elements: !632, templateParams: !634, identifier: "b029acfb30b8f8ccac64e6f8391e344c::Err")
!632 = !{!633}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !631, file: !2, baseType: !518, size: 128, align: 64)
!634 = !{!591, !576}
!635 = !{!636, !637}
!636 = !DILocalVariable(name: "residual", arg: 1, scope: !609, file: !549, line: 1913, type: !626)
!637 = !DILocalVariable(name: "e", scope: !638, file: !549, line: 1915, type: !518, align: 8)
!638 = distinct !DILexicalBlock(scope: !609, file: !549, line: 1915, column: 13)
!639 = !{!621, !576, !602}
!640 = !DILocation(line: 1913, column: 22, scope: !609)
!641 = !DILocation(line: 1915, column: 17, scope: !609)
!642 = !DILocation(line: 1915, column: 17, scope: !638)
!643 = !DILocation(line: 1915, column: 27, scope: !638)
!644 = !DILocation(line: 1915, column: 23, scope: !638)
!645 = !DILocation(line: 1917, column: 6, scope: !609)
!646 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h91e7ed57393c166aE", scope: !550, file: !549, line: 1913, type: !647, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !653, retainedNodes: !649)
!647 = !DISubroutineType(types: !648)
!648 = !{!612, !582}
!649 = !{!650, !651}
!650 = !DILocalVariable(name: "residual", arg: 1, scope: !646, file: !549, line: 1913, type: !582)
!651 = !DILocalVariable(name: "e", scope: !652, file: !549, line: 1915, type: !521, align: 8)
!652 = distinct !DILexicalBlock(scope: !646, file: !549, line: 1915, column: 13)
!653 = !{!621, !596, !602}
!654 = !DILocation(line: 1913, column: 22, scope: !646)
!655 = !DILocation(line: 1915, column: 17, scope: !646)
!656 = !DILocation(line: 1915, column: 17, scope: !652)
!657 = !DILocation(line: 1915, column: 27, scope: !652)
!658 = !DILocation(line: 1915, column: 23, scope: !652)
!659 = !DILocation(line: 1917, column: 6, scope: !646)
!660 = distinct !DISubprogram(name: "from_residual<core::alloc::layout::Layout, core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94bbcf75afee15aeE", scope: !550, file: !549, line: 1913, type: !661, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !692, retainedNodes: !688)
!661 = !DISubroutineType(types: !662)
!662 = !{!663, !679}
!663 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !116, file: !2, size: 128, align: 64, elements: !664, identifier: "fe29df956a262954e135d4a574f5da26")
!664 = !{!665}
!665 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 128, align: 64, elements: !666, templateParams: !671, identifier: "fe29df956a262954e135d4a574f5da26_variant_part", discriminator: !678)
!666 = !{!667, !674}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !665, file: !2, baseType: !668, size: 128, align: 64)
!668 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !663, file: !2, size: 128, align: 64, elements: !669, templateParams: !671, identifier: "fe29df956a262954e135d4a574f5da26::Ok")
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !668, file: !2, baseType: !531, size: 128, align: 64)
!671 = !{!672, !673}
!672 = !DITemplateTypeParameter(name: "T", type: !531)
!673 = !DITemplateTypeParameter(name: "E", type: !5)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !665, file: !2, baseType: !675, size: 128, align: 64, extraData: i64 0)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !663, file: !2, size: 128, align: 64, elements: !676, templateParams: !671, identifier: "fe29df956a262954e135d4a574f5da26::Err")
!676 = !{!677}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !675, file: !2, baseType: !5, align: 8)
!678 = !DIDerivedType(tag: DW_TAG_member, scope: !116, file: !2, baseType: !23, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::layout::LayoutError>", scope: !116, file: !2, align: 8, elements: !680, identifier: "70f8e6db75b3986e768f049f32b98569")
!680 = !{!681}
!681 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, align: 8, elements: !682, templateParams: !687, identifier: "70f8e6db75b3986e768f049f32b98569_variant_part")
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !681, file: !2, baseType: !684, align: 8)
!684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !679, file: !2, align: 8, elements: !685, templateParams: !687, identifier: "70f8e6db75b3986e768f049f32b98569::Err")
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !684, file: !2, baseType: !5, align: 8)
!687 = !{!591, !673}
!688 = !{!689, !690}
!689 = !DILocalVariable(name: "residual", arg: 1, scope: !660, file: !549, line: 1913, type: !679)
!690 = !DILocalVariable(name: "e", scope: !691, file: !549, line: 1915, type: !5, align: 1)
!691 = distinct !DILexicalBlock(scope: !660, file: !549, line: 1915, column: 13)
!692 = !{!672, !673, !693}
!693 = !DITemplateTypeParameter(name: "F", type: !5)
!694 = !DILocation(line: 1913, column: 22, scope: !660)
!695 = !DILocation(line: 1915, column: 17, scope: !691)
!696 = !DILocation(line: 1915, column: 27, scope: !691)
!697 = !DILocation(line: 1915, column: 23, scope: !691)
!698 = !DILocation(line: 1917, column: 6, scope: !660)
!699 = distinct !DISubprogram(name: "from_residual<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::LayoutError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbdf056a6c23e6586E", scope: !550, file: !549, line: 1913, type: !700, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !724, retainedNodes: !720)
!700 = !DISubroutineType(types: !701)
!701 = !{!702, !679}
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !116, file: !2, size: 192, align: 64, elements: !703, identifier: "f1386a55091ece7d92996439741f9fac")
!703 = !{!704}
!704 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !705, templateParams: !714, identifier: "f1386a55091ece7d92996439741f9fac_variant_part", discriminator: !678)
!705 = !{!706, !716}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !704, file: !2, baseType: !707, size: 192, align: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !702, file: !2, size: 192, align: 64, elements: !708, templateParams: !714, identifier: "f1386a55091ece7d92996439741f9fac::Ok")
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !707, file: !2, baseType: !710, size: 192, align: 64)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 192, align: 64, elements: !711, templateParams: !4, identifier: "67f85d36b181012f3a00f61c3a83b547")
!711 = !{!712, !713}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !710, file: !2, baseType: !531, size: 128, align: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !710, file: !2, baseType: !13, size: 64, align: 64, offset: 128)
!714 = !{!715, !673}
!715 = !DITemplateTypeParameter(name: "T", type: !710)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !704, file: !2, baseType: !717, size: 192, align: 64, extraData: i64 0)
!717 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !702, file: !2, size: 192, align: 64, elements: !718, templateParams: !714, identifier: "f1386a55091ece7d92996439741f9fac::Err")
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !717, file: !2, baseType: !5, align: 8)
!720 = !{!721, !722}
!721 = !DILocalVariable(name: "residual", arg: 1, scope: !699, file: !549, line: 1913, type: !679)
!722 = !DILocalVariable(name: "e", scope: !723, file: !549, line: 1915, type: !5, align: 1)
!723 = distinct !DILexicalBlock(scope: !699, file: !549, line: 1915, column: 13)
!724 = !{!715, !673, !693}
!725 = !DILocation(line: 1913, column: 22, scope: !699)
!726 = !DILocation(line: 1915, column: 17, scope: !723)
!727 = !DILocation(line: 1915, column: 27, scope: !723)
!728 = !DILocation(line: 1915, column: 23, scope: !723)
!729 = !DILocation(line: 1917, column: 6, scope: !699)
!730 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbf8465f404833e91E", scope: !550, file: !549, line: 1913, type: !731, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !761, retainedNodes: !757)
!731 = !DISubroutineType(types: !732)
!732 = !{!733, !748}
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !116, file: !2, size: 128, align: 64, elements: !734, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a")
!734 = !{!735}
!735 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 128, align: 64, elements: !736, templateParams: !741, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a_variant_part", discriminator: !581)
!736 = !{!737, !744}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !735, file: !2, baseType: !738, size: 128, align: 64)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !733, file: !2, size: 128, align: 64, elements: !739, templateParams: !741, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Ok")
!739 = !{!740}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !738, file: !2, baseType: !561, size: 128, align: 64)
!741 = !{!575, !742}
!742 = !DITemplateTypeParameter(name: "E", type: !743)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !7, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "76621f17fc0738bb8f0dd793239190c0")
!744 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !735, file: !2, baseType: !745, size: 128, align: 64, extraData: i64 0)
!745 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !733, file: !2, size: 128, align: 64, elements: !746, templateParams: !741, identifier: "39e2dadcfc45dc0ea3c81265c9f2367a::Err")
!746 = !{!747}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !745, file: !2, baseType: !743, align: 8)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !116, file: !2, align: 8, elements: !749, identifier: "51cf100009ff4ba85432fdae9dd67163")
!749 = !{!750}
!750 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, align: 8, elements: !751, templateParams: !756, identifier: "51cf100009ff4ba85432fdae9dd67163_variant_part")
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !750, file: !2, baseType: !753, align: 8)
!753 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !748, file: !2, align: 8, elements: !754, templateParams: !756, identifier: "51cf100009ff4ba85432fdae9dd67163::Err")
!754 = !{!755}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !753, file: !2, baseType: !743, align: 8)
!756 = !{!591, !742}
!757 = !{!758, !759}
!758 = !DILocalVariable(name: "residual", arg: 1, scope: !730, file: !549, line: 1913, type: !748)
!759 = !DILocalVariable(name: "e", scope: !760, file: !549, line: 1915, type: !743, align: 1)
!760 = distinct !DILexicalBlock(scope: !730, file: !549, line: 1915, column: 13)
!761 = !{!575, !742, !762}
!762 = !DITemplateTypeParameter(name: "F", type: !743)
!763 = !DILocation(line: 1913, column: 22, scope: !730)
!764 = !DILocation(line: 1915, column: 17, scope: !760)
!765 = !DILocation(line: 1915, column: 27, scope: !760)
!766 = !DILocation(line: 1915, column: 23, scope: !760)
!767 = !DILocation(line: 1917, column: 6, scope: !730)
!768 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc0c7e49ea4c85f66E", scope: !550, file: !549, line: 1913, type: !769, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !775, retainedNodes: !771)
!769 = !DISubroutineType(types: !770)
!770 = !{!553, !626}
!771 = !{!772, !773}
!772 = !DILocalVariable(name: "residual", arg: 1, scope: !768, file: !549, line: 1913, type: !626)
!773 = !DILocalVariable(name: "e", scope: !774, file: !549, line: 1915, type: !518, align: 8)
!774 = distinct !DILexicalBlock(scope: !768, file: !549, line: 1915, column: 13)
!775 = !{!575, !576, !602}
!776 = !DILocation(line: 1913, column: 22, scope: !768)
!777 = !DILocation(line: 1915, column: 17, scope: !768)
!778 = !DILocation(line: 1915, column: 17, scope: !774)
!779 = !DILocation(line: 1915, column: 27, scope: !774)
!780 = !DILocation(line: 1915, column: 23, scope: !774)
!781 = !DILocation(line: 1917, column: 6, scope: !768)
!782 = distinct !DISubprogram(name: "fmt<usize>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h217ed1550bf11341E", scope: !784, file: !783, line: 2088, type: !785, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !802, retainedNodes: !819)
!783 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "db8bc3f807499c7f411a42b648b307a1")
!784 = !DINamespace(name: "{impl#51}", scope: !123)
!785 = !DISubroutineType(types: !786)
!786 = !{!115, !787, !788}
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&usize", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Formatter", baseType: !789, size: 64, align: 64, dwarfAddressSpace: 0)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !123, file: !2, size: 512, align: 64, elements: !790, templateParams: !4, identifier: "37f4daa474efe0abec93026f6af11d04")
!790 = !{!791, !792, !794, !795, !808, !809}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !789, file: !2, baseType: !265, size: 32, align: 32, offset: 384)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !789, file: !2, baseType: !793, size: 32, align: 32, offset: 416)
!793 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_unsigned_char)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !789, file: !2, baseType: !120, size: 8, align: 8, offset: 448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !789, file: !2, baseType: !796, size: 128, align: 64)
!796 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !304, file: !2, size: 128, align: 64, elements: !797, identifier: "4849786e80860f5416c4c6b259f5a683")
!797 = !{!798}
!798 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 128, align: 64, elements: !799, templateParams: !802, identifier: "4849786e80860f5416c4c6b259f5a683_variant_part", discriminator: !316)
!799 = !{!800, !804}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !798, file: !2, baseType: !801, size: 128, align: 64, extraData: i64 0)
!801 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !796, file: !2, size: 128, align: 64, elements: !4, templateParams: !802, identifier: "4849786e80860f5416c4c6b259f5a683::None")
!802 = !{!803}
!803 = !DITemplateTypeParameter(name: "T", type: !13)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !798, file: !2, baseType: !805, size: 128, align: 64, extraData: i64 1)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !796, file: !2, size: 128, align: 64, elements: !806, templateParams: !802, identifier: "4849786e80860f5416c4c6b259f5a683::Some")
!806 = !{!807}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !805, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !789, file: !2, baseType: !796, size: 128, align: 64, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !789, file: !2, baseType: !810, size: 128, align: 64, offset: 256)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !811, templateParams: !4, identifier: "ab0a0458a7bfc4114bcaaa179b3e8910")
!811 = !{!812, !814}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !810, file: !2, baseType: !813, size: 64, align: 64, flags: DIFlagArtificial)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !18, size: 64, align: 64, dwarfAddressSpace: 0)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !810, file: !2, baseType: !815, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !816, size: 64, align: 64, dwarfAddressSpace: 0)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 192, align: 64, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 3, lowerBound: 0)
!819 = !{!820, !821}
!820 = !DILocalVariable(name: "self", arg: 1, scope: !782, file: !783, line: 2088, type: !787)
!821 = !DILocalVariable(name: "f", arg: 2, scope: !782, file: !783, line: 2088, type: !788)
!822 = !DILocation(line: 2088, column: 20, scope: !782)
!823 = !DILocation(line: 2088, column: 27, scope: !782)
!824 = !DILocation(line: 2088, column: 71, scope: !782)
!825 = !DILocation(line: 2088, column: 62, scope: !782)
!826 = !DILocation(line: 2088, column: 84, scope: !782)
!827 = distinct !DISubprogram(name: "fmt<bv::storage::Address>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf31e4cd8b1a6da12E", scope: !784, file: !783, line: 2088, type: !828, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !834, retainedNodes: !831)
!828 = !DISubroutineType(types: !829)
!829 = !{!115, !830, !788}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&Address", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!831 = !{!832, !833}
!832 = !DILocalVariable(name: "self", arg: 1, scope: !827, file: !783, line: 2088, type: !830)
!833 = !DILocalVariable(name: "f", arg: 2, scope: !827, file: !783, line: 2088, type: !788)
!834 = !{!835}
!835 = !DITemplateTypeParameter(name: "T", type: !28)
!836 = !DILocation(line: 2088, column: 20, scope: !827)
!837 = !DILocation(line: 2088, column: 27, scope: !827)
!838 = !DILocation(line: 2088, column: 71, scope: !827)
!839 = !DILocation(line: 2088, column: 62, scope: !827)
!840 = !DILocation(line: 2088, column: 84, scope: !827)
!841 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h20dcf17a6043c229E", scope: !842, file: !297, line: 189, type: !843, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !845)
!842 = !DINamespace(name: "{impl#35}", scope: !299)
!843 = !DISubroutineType(types: !844)
!844 = !{!23, !23, !13}
!845 = !{!846, !847}
!846 = !DILocalVariable(name: "start", arg: 1, scope: !841, file: !297, line: 189, type: !23)
!847 = !DILocalVariable(name: "n", arg: 2, scope: !841, file: !297, line: 189, type: !13)
!848 = !DILocation(line: 189, column: 37, scope: !841)
!849 = !DILocation(line: 189, column: 50, scope: !841)
!850 = !DILocalVariable(name: "self", arg: 1, scope: !851, file: !852, line: 439, type: !23)
!851 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add17h8e486bbf5c57c087E", scope: !853, file: !852, line: 439, type: !854, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !856)
!852 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "8bd5648afa999a95525abfd2832ef4ce")
!853 = !DINamespace(name: "{impl#9}", scope: !537)
!854 = !DISubroutineType(types: !855)
!855 = !{!23, !23, !23}
!856 = !{!850, !857}
!857 = !DILocalVariable(name: "rhs", arg: 2, scope: !851, file: !852, line: 439, type: !23)
!858 = !DILocation(line: 439, column: 43, scope: !851, inlinedAt: !859)
!859 = distinct !DILocation(line: 191, column: 22, scope: !841)
!860 = !DILocation(line: 439, column: 49, scope: !851, inlinedAt: !859)
!861 = !DILocation(line: 442, column: 22, scope: !851, inlinedAt: !859)
!862 = !DILocation(line: 191, column: 22, scope: !841)
!863 = !DILocation(line: 192, column: 10, scope: !841)
!864 = distinct !DISubprogram(name: "backward_unchecked", linkageName: "_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hdd9ebe1ec89e14dbE", scope: !842, file: !297, line: 195, type: !843, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !865)
!865 = !{!866, !867}
!866 = !DILocalVariable(name: "start", arg: 1, scope: !864, file: !297, line: 195, type: !23)
!867 = !DILocalVariable(name: "n", arg: 2, scope: !864, file: !297, line: 195, type: !13)
!868 = !DILocation(line: 195, column: 38, scope: !864)
!869 = !DILocation(line: 195, column: 51, scope: !864)
!870 = !DILocalVariable(name: "self", arg: 1, scope: !871, file: !852, line: 485, type: !23)
!871 = distinct !DISubprogram(name: "unchecked_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_sub17h90c64536f8d5619bE", scope: !853, file: !852, line: 485, type: !854, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !872)
!872 = !{!870, !873}
!873 = !DILocalVariable(name: "rhs", arg: 2, scope: !871, file: !852, line: 485, type: !23)
!874 = !DILocation(line: 485, column: 43, scope: !871, inlinedAt: !875)
!875 = distinct !DILocation(line: 197, column: 22, scope: !864)
!876 = !DILocation(line: 485, column: 49, scope: !871, inlinedAt: !875)
!877 = !DILocation(line: 488, column: 22, scope: !871, inlinedAt: !875)
!878 = !DILocation(line: 197, column: 22, scope: !864)
!879 = !DILocation(line: 198, column: 10, scope: !864)
!880 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core10intrinsics11write_bytes17hd767c011f63a829aE", scope: !882, file: !881, line: 2215, type: !883, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !885)
!881 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/intrinsics.rs", directory: "", checksumkind: CSK_MD5, checksum: "1be464bbefb5340012936033e0ffb61a")
!882 = !DINamespace(name: "intrinsics", scope: !8)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !813, !18, !13}
!885 = !{!886, !887, !888}
!886 = !DILocalVariable(name: "dst", arg: 1, scope: !880, file: !881, line: 2215, type: !813)
!887 = !DILocalVariable(name: "val", arg: 2, scope: !880, file: !881, line: 2215, type: !18)
!888 = !DILocalVariable(name: "count", arg: 3, scope: !880, file: !881, line: 2215, type: !13)
!889 = !{!890}
!890 = !DITemplateTypeParameter(name: "T", type: !18)
!891 = !DILocation(line: 2215, column: 30, scope: !880)
!892 = !DILocation(line: 2215, column: 43, scope: !880)
!893 = !DILocation(line: 2215, column: 52, scope: !880)
!894 = !DILocation(line: 2223, column: 14, scope: !880)
!895 = !DILocation(line: 2224, column: 2, scope: !880)
!896 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3Ord3max17hc1df2138957e5fa7E", scope: !898, file: !897, line: 763, type: !899, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !904, retainedNodes: !901)
!897 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fdac3f6fbed09f2cfeccffe125b9a60")
!898 = !DINamespace(name: "Ord", scope: !130)
!899 = !DISubroutineType(types: !900)
!900 = !{!13, !13, !13}
!901 = !{!902, !903}
!902 = !DILocalVariable(name: "self", arg: 1, scope: !896, file: !897, line: 763, type: !13)
!903 = !DILocalVariable(name: "other", arg: 2, scope: !896, file: !897, line: 763, type: !13)
!904 = !{!905}
!905 = !DITemplateTypeParameter(name: "Self", type: !13)
!906 = !DILocation(line: 763, column: 12, scope: !896)
!907 = !DILocation(line: 763, column: 18, scope: !896)
!908 = !DILocation(line: 767, column: 9, scope: !896)
!909 = !DILocation(line: 768, column: 6, scope: !896)
!910 = distinct !DISubprogram(name: "max<usize>", linkageName: "_ZN4core3cmp3max17h7c4db88abffc71acE", scope: !130, file: !897, line: 1183, type: !899, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !802, retainedNodes: !911)
!911 = !{!912, !913}
!912 = !DILocalVariable(name: "v1", arg: 1, scope: !910, file: !897, line: 1183, type: !13)
!913 = !DILocalVariable(name: "v2", arg: 2, scope: !910, file: !897, line: 1183, type: !13)
!914 = !DILocation(line: 1183, column: 20, scope: !910)
!915 = !DILocation(line: 1183, column: 27, scope: !910)
!916 = !DILocation(line: 1184, column: 5, scope: !910)
!917 = !DILocation(line: 1185, column: 2, scope: !910)
!918 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17h08ebe49c89567163E", scope: !919, file: !897, line: 1334, type: !921, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !923)
!919 = !DINamespace(name: "{impl#55}", scope: !920)
!920 = !DINamespace(name: "impls", scope: !130)
!921 = !DISubroutineType(types: !922)
!922 = !{!129, !12, !12}
!923 = !{!924, !925}
!924 = !DILocalVariable(name: "self", arg: 1, scope: !918, file: !897, line: 1334, type: !12)
!925 = !DILocalVariable(name: "other", arg: 2, scope: !918, file: !897, line: 1334, type: !12)
!926 = !DILocation(line: 1334, column: 24, scope: !918)
!927 = !DILocation(line: 1334, column: 31, scope: !918)
!928 = !DILocation(line: 1337, column: 24, scope: !918)
!929 = !DILocation(line: 1337, column: 32, scope: !918)
!930 = !DILocation(line: 1338, column: 29, scope: !918)
!931 = !DILocation(line: 1338, column: 38, scope: !918)
!932 = !DILocation(line: 1337, column: 41, scope: !918)
!933 = !DILocation(line: 1337, column: 21, scope: !918)
!934 = !DILocation(line: 1340, column: 18, scope: !918)
!935 = !{i8 -1, i8 2}
!936 = !DILocation(line: 1339, column: 28, scope: !918)
!937 = !DILocation(line: 1338, column: 26, scope: !918)
!938 = !DILocation(line: 1338, column: 47, scope: !918)
!939 = distinct !DISubprogram(name: "le", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2le17hfaf6bd025586b9b1E", scope: !940, file: !897, line: 1324, type: !941, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !943)
!940 = !DINamespace(name: "{impl#62}", scope: !920)
!941 = !DISubroutineType(types: !942)
!942 = !{!40, !22, !22}
!943 = !{!944, !945}
!944 = !DILocalVariable(name: "self", arg: 1, scope: !939, file: !897, line: 1324, type: !22)
!945 = !DILocalVariable(name: "other", arg: 2, scope: !939, file: !897, line: 1324, type: !22)
!946 = !DILocation(line: 1324, column: 23, scope: !939)
!947 = !DILocation(line: 1324, column: 30, scope: !939)
!948 = !DILocation(line: 1324, column: 52, scope: !939)
!949 = !DILocation(line: 1324, column: 63, scope: !939)
!950 = !DILocation(line: 1324, column: 73, scope: !939)
!951 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17h2d49b6317963ae6bE", scope: !940, file: !897, line: 1322, type: !941, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !952)
!952 = !{!953, !954}
!953 = !DILocalVariable(name: "self", arg: 1, scope: !951, file: !897, line: 1322, type: !22)
!954 = !DILocalVariable(name: "other", arg: 2, scope: !951, file: !897, line: 1322, type: !22)
!955 = !DILocation(line: 1322, column: 23, scope: !951)
!956 = !DILocation(line: 1322, column: 30, scope: !951)
!957 = !DILocation(line: 1322, column: 52, scope: !951)
!958 = !DILocation(line: 1322, column: 62, scope: !951)
!959 = !DILocation(line: 1322, column: 72, scope: !951)
!960 = distinct !DISubprogram(name: "max_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6max_by17hda2abe60ba3aef3fE", scope: !130, file: !897, line: 1202, type: !961, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !968, retainedNodes: !964)
!961 = !DISubroutineType(types: !962)
!962 = !{!13, !13, !13, !963}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &usize) -> core::cmp::Ordering", baseType: !921, align: 8, dwarfAddressSpace: 0)
!964 = !{!965, !966, !967}
!965 = !DILocalVariable(name: "v1", arg: 1, scope: !960, file: !897, line: 1202, type: !13)
!966 = !DILocalVariable(name: "v2", arg: 2, scope: !960, file: !897, line: 1202, type: !13)
!967 = !DILocalVariable(name: "compare", arg: 3, scope: !960, file: !897, line: 1202, type: !963)
!968 = !{!803, !969}
!969 = !DITemplateTypeParameter(name: "F", type: !963)
!970 = !DILocation(line: 1202, column: 49, scope: !960)
!971 = !DILocation(line: 1202, column: 56, scope: !960)
!972 = !DILocation(line: 1202, column: 63, scope: !960)
!973 = !DILocation(line: 1203, column: 11, scope: !960)
!974 = !DILocation(line: 1203, column: 5, scope: !960)
!975 = !DILocation(line: 1204, column: 45, scope: !960)
!976 = !DILocation(line: 1205, column: 30, scope: !960)
!977 = !DILocation(line: 1207, column: 1, scope: !960)
!978 = !{i8 0, i8 2}
!979 = !DILocation(line: 1207, column: 2, scope: !960)
!980 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h2e2b7f2a3b85d3b5E", scope: !982, file: !981, line: 186, type: !984, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !986)
!981 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "145def6afd4485eef3ff5ede20b1ef31")
!982 = !DINamespace(name: "{impl#89}", scope: !983)
!983 = !DINamespace(name: "num", scope: !123)
!984 = !DISubroutineType(types: !985)
!985 = !{!115, !12, !788}
!986 = !{!987, !988}
!987 = !DILocalVariable(name: "self", arg: 1, scope: !980, file: !981, line: 186, type: !12)
!988 = !DILocalVariable(name: "f", arg: 2, scope: !980, file: !981, line: 186, type: !788)
!989 = !DILocation(line: 186, column: 20, scope: !980)
!990 = !DILocation(line: 186, column: 27, scope: !980)
!991 = !DILocation(line: 187, column: 20, scope: !980)
!992 = !DILocation(line: 189, column: 27, scope: !980)
!993 = !DILocation(line: 188, column: 21, scope: !980)
!994 = !DILocation(line: 187, column: 17, scope: !980)
!995 = !DILocation(line: 194, column: 14, scope: !980)
!996 = !DILocation(line: 192, column: 21, scope: !980)
!997 = !DILocation(line: 190, column: 21, scope: !980)
!998 = !DILocation(line: 189, column: 24, scope: !980)
!999 = distinct !DISubprogram(name: "replace<u64>", linkageName: "_ZN4core3mem7replace17h0dece973e4af45c1E", scope: !1001, file: !1000, line: 823, type: !1002, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1005)
!1000 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "00a9ca3300eee460d5c61559b280a726")
!1001 = !DINamespace(name: "mem", scope: !8)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!23, !1004, !23}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u64", baseType: !23, size: 64, align: 64, dwarfAddressSpace: 0)
!1005 = !{!1006, !1007, !1008}
!1006 = !DILocalVariable(name: "dest", arg: 1, scope: !999, file: !1000, line: 823, type: !1004)
!1007 = !DILocalVariable(name: "src", arg: 2, scope: !999, file: !1000, line: 823, type: !23)
!1008 = !DILocalVariable(name: "result", scope: !1009, file: !1000, line: 828, type: !23, align: 8)
!1009 = distinct !DILexicalBlock(scope: !999, file: !1000, line: 828, column: 9)
!1010 = !DILocation(line: 823, column: 25, scope: !999)
!1011 = !DILocation(line: 823, column: 39, scope: !999)
!1012 = !DILocation(line: 828, column: 22, scope: !999)
!1013 = !DILocation(line: 828, column: 13, scope: !1009)
!1014 = !DILocation(line: 829, column: 9, scope: !1009)
!1015 = !DILocation(line: 832, column: 2, scope: !999)
!1016 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h4471947358403de9E", scope: !1017, file: !852, line: 415, type: !1018, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1020)
!1017 = !DINamespace(name: "{impl#11}", scope: !537)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!796, !13, !13}
!1020 = !{!1021, !1022, !1023, !1025}
!1021 = !DILocalVariable(name: "self", arg: 1, scope: !1016, file: !852, line: 415, type: !13)
!1022 = !DILocalVariable(name: "rhs", arg: 2, scope: !1016, file: !852, line: 415, type: !13)
!1023 = !DILocalVariable(name: "a", scope: !1024, file: !852, line: 416, type: !13, align: 8)
!1024 = distinct !DILexicalBlock(scope: !1016, file: !852, line: 416, column: 13)
!1025 = !DILocalVariable(name: "b", scope: !1024, file: !852, line: 416, type: !40, align: 1)
!1026 = !DILocation(line: 415, column: 34, scope: !1016)
!1027 = !DILocation(line: 415, column: 40, scope: !1016)
!1028 = !DILocalVariable(name: "self", arg: 1, scope: !1029, file: !852, line: 1406, type: !13)
!1029 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h203f0c510338852cE", scope: !1017, file: !852, line: 1406, type: !1030, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1036)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!1032, !13, !13}
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 128, align: 64, elements: !1033, templateParams: !4, identifier: "532fa6618cdb3964411c84139beb9950")
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1032, file: !2, baseType: !13, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1032, file: !2, baseType: !40, size: 8, align: 8, offset: 64)
!1036 = !{!1028, !1037, !1038, !1040}
!1037 = !DILocalVariable(name: "rhs", arg: 2, scope: !1029, file: !852, line: 1406, type: !13)
!1038 = !DILocalVariable(name: "a", scope: !1039, file: !852, line: 1407, type: !23, align: 8)
!1039 = distinct !DILexicalBlock(scope: !1029, file: !852, line: 1407, column: 13)
!1040 = !DILocalVariable(name: "b", scope: !1039, file: !852, line: 1407, type: !40, align: 1)
!1041 = !DILocation(line: 1406, column: 38, scope: !1029, inlinedAt: !1042)
!1042 = distinct !DILocation(line: 416, column: 26, scope: !1016)
!1043 = !DILocation(line: 1406, column: 44, scope: !1029, inlinedAt: !1042)
!1044 = !DILocation(line: 1407, column: 26, scope: !1029, inlinedAt: !1042)
!1045 = !DILocation(line: 1407, column: 18, scope: !1029, inlinedAt: !1042)
!1046 = !DILocation(line: 1407, column: 18, scope: !1039, inlinedAt: !1042)
!1047 = !DILocation(line: 1407, column: 21, scope: !1029, inlinedAt: !1042)
!1048 = !DILocation(line: 1407, column: 21, scope: !1039, inlinedAt: !1042)
!1049 = !DILocation(line: 1408, column: 13, scope: !1039, inlinedAt: !1042)
!1050 = !DILocation(line: 1409, column: 10, scope: !1029, inlinedAt: !1042)
!1051 = !DILocation(line: 416, column: 26, scope: !1016)
!1052 = !DILocation(line: 416, column: 18, scope: !1016)
!1053 = !DILocation(line: 416, column: 18, scope: !1024)
!1054 = !DILocation(line: 416, column: 21, scope: !1016)
!1055 = !DILocation(line: 416, column: 21, scope: !1024)
!1056 = !DILocation(line: 417, column: 16, scope: !1024)
!1057 = !DILocation(line: 417, column: 42, scope: !1024)
!1058 = !DILocation(line: 417, column: 13, scope: !1024)
!1059 = !DILocation(line: 417, column: 30, scope: !1024)
!1060 = !DILocation(line: 418, column: 10, scope: !1016)
!1061 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h576c517f6fef7a16E", scope: !1017, file: !852, line: 507, type: !1018, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1062)
!1062 = !{!1063, !1064, !1065, !1067}
!1063 = !DILocalVariable(name: "self", arg: 1, scope: !1061, file: !852, line: 507, type: !13)
!1064 = !DILocalVariable(name: "rhs", arg: 2, scope: !1061, file: !852, line: 507, type: !13)
!1065 = !DILocalVariable(name: "a", scope: !1066, file: !852, line: 508, type: !13, align: 8)
!1066 = distinct !DILexicalBlock(scope: !1061, file: !852, line: 508, column: 13)
!1067 = !DILocalVariable(name: "b", scope: !1066, file: !852, line: 508, type: !40, align: 1)
!1068 = !DILocation(line: 507, column: 34, scope: !1061)
!1069 = !DILocation(line: 507, column: 40, scope: !1061)
!1070 = !DILocalVariable(name: "self", arg: 1, scope: !1071, file: !852, line: 1518, type: !13)
!1071 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17h597ee499af793895E", scope: !1017, file: !852, line: 1518, type: !1030, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1072)
!1072 = !{!1070, !1073, !1074, !1076}
!1073 = !DILocalVariable(name: "rhs", arg: 2, scope: !1071, file: !852, line: 1518, type: !13)
!1074 = !DILocalVariable(name: "a", scope: !1075, file: !852, line: 1519, type: !23, align: 8)
!1075 = distinct !DILexicalBlock(scope: !1071, file: !852, line: 1519, column: 13)
!1076 = !DILocalVariable(name: "b", scope: !1075, file: !852, line: 1519, type: !40, align: 1)
!1077 = !DILocation(line: 1518, column: 38, scope: !1071, inlinedAt: !1078)
!1078 = distinct !DILocation(line: 508, column: 26, scope: !1061)
!1079 = !DILocation(line: 1518, column: 44, scope: !1071, inlinedAt: !1078)
!1080 = !DILocation(line: 1519, column: 26, scope: !1071, inlinedAt: !1078)
!1081 = !DILocation(line: 1519, column: 18, scope: !1071, inlinedAt: !1078)
!1082 = !DILocation(line: 1519, column: 18, scope: !1075, inlinedAt: !1078)
!1083 = !DILocation(line: 1519, column: 21, scope: !1071, inlinedAt: !1078)
!1084 = !DILocation(line: 1519, column: 21, scope: !1075, inlinedAt: !1078)
!1085 = !DILocation(line: 1520, column: 13, scope: !1075, inlinedAt: !1078)
!1086 = !DILocation(line: 1521, column: 10, scope: !1071, inlinedAt: !1078)
!1087 = !DILocation(line: 508, column: 26, scope: !1061)
!1088 = !DILocation(line: 508, column: 18, scope: !1061)
!1089 = !DILocation(line: 508, column: 18, scope: !1066)
!1090 = !DILocation(line: 508, column: 21, scope: !1061)
!1091 = !DILocation(line: 508, column: 21, scope: !1066)
!1092 = !DILocation(line: 509, column: 16, scope: !1066)
!1093 = !DILocation(line: 509, column: 42, scope: !1066)
!1094 = !DILocation(line: 509, column: 13, scope: !1066)
!1095 = !DILocation(line: 509, column: 30, scope: !1066)
!1096 = !DILocation(line: 510, column: 10, scope: !1061)
!1097 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num7nonzero12NonZeroUsize13new_unchecked17ha4176e00949ef5bbE", scope: !535, file: !1098, line: 54, type: !1099, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1101)
!1098 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/nonzero.rs", directory: "", checksumkind: CSK_MD5, checksum: "07b0126d41e0d52cc6d98b96652bf4bd")
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!535, !13}
!1101 = !{!1102}
!1102 = !DILocalVariable(name: "n", arg: 1, scope: !1097, file: !1098, line: 54, type: !13)
!1103 = !DILocation(line: 54, column: 51, scope: !1097)
!1104 = !DILocation(line: 56, column: 30, scope: !1097)
!1105 = !DILocation(line: 57, column: 18, scope: !1097)
!1106 = !{i64 1, i64 0}
!1107 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3num7nonzero12NonZeroUsize3get17h218dc7b2f08e5dc5E", scope: !535, file: !1098, line: 76, type: !1108, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1110)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!13, !535}
!1110 = !{!1111}
!1111 = !DILocalVariable(name: "self", arg: 1, scope: !1107, file: !1098, line: 76, type: !535)
!1112 = !DILocation(line: 76, column: 34, scope: !1107)
!1113 = !DILocation(line: 78, column: 18, scope: !1107)
!1114 = distinct !DISubprogram(name: "end<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h2e1f77d79faf62ccE", scope: !459, file: !1115, line: 424, type: !1116, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !161, retainedNodes: !1119)
!1115 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "8be113bc81207e75a8f9e27eced95822")
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!12, !1118}
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&RangeInclusive<usize>", baseType: !459, size: 64, align: 64, dwarfAddressSpace: 0)
!1119 = !{!1120}
!1120 = !DILocalVariable(name: "self", arg: 1, scope: !1114, file: !1115, line: 424, type: !1118)
!1121 = !DILocation(line: 424, column: 22, scope: !1114)
!1122 = !DILocation(line: 425, column: 9, scope: !1114)
!1123 = !DILocation(line: 426, column: 6, scope: !1114)
!1124 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h519a8d23a0d0ba3bE", scope: !459, file: !1115, line: 374, type: !1125, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !161, retainedNodes: !1127)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!459, !13, !13}
!1127 = !{!1128, !1129}
!1128 = !DILocalVariable(name: "start", arg: 1, scope: !1124, file: !1115, line: 374, type: !13)
!1129 = !DILocalVariable(name: "end", arg: 2, scope: !1124, file: !1115, line: 374, type: !13)
!1130 = !DILocation(line: 374, column: 22, scope: !1124)
!1131 = !DILocation(line: 374, column: 34, scope: !1124)
!1132 = !DILocation(line: 375, column: 9, scope: !1124)
!1133 = !DILocation(line: 376, column: 6, scope: !1124)
!1134 = distinct !DISubprogram(name: "is_empty<u64>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$8is_empty17h06b0707fb5955191E", scope: !318, file: !1115, line: 539, type: !1135, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !323, retainedNodes: !1138)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!40, !1137}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&RangeInclusive<u64>", baseType: !318, size: 64, align: 64, dwarfAddressSpace: 0)
!1138 = !{!1139}
!1139 = !DILocalVariable(name: "self", arg: 1, scope: !1134, file: !1115, line: 539, type: !1137)
!1140 = !DILocation(line: 539, column: 21, scope: !1134)
!1141 = !DILocation(line: 540, column: 9, scope: !1134)
!1142 = !DILocation(line: 540, column: 29, scope: !1134)
!1143 = !DILocation(line: 540, column: 43, scope: !1134)
!1144 = !DILocation(line: 540, column: 28, scope: !1134)
!1145 = !DILocation(line: 541, column: 6, scope: !1134)
!1146 = !DILocation(line: 540, column: 27, scope: !1134)
!1147 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h4ced7ce810a8492fE", scope: !459, file: !1115, line: 449, type: !1148, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1150)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!155, !459}
!1150 = !{!1151, !1152, !1154}
!1151 = !DILocalVariable(name: "self", arg: 1, scope: !1147, file: !1115, line: 449, type: !459)
!1152 = !DILocalVariable(name: "exclusive_end", scope: !1153, file: !1115, line: 453, type: !13, align: 8)
!1153 = distinct !DILexicalBlock(scope: !1147, file: !1115, line: 453, column: 9)
!1154 = !DILocalVariable(name: "start", scope: !1155, file: !1115, line: 454, type: !13, align: 8)
!1155 = distinct !DILexicalBlock(scope: !1153, file: !1115, line: 454, column: 9)
!1156 = !DILocation(line: 449, column: 36, scope: !1147)
!1157 = !DILocation(line: 454, column: 13, scope: !1155)
!1158 = !DILocation(line: 453, column: 29, scope: !1147)
!1159 = !DILocation(line: 453, column: 13, scope: !1153)
!1160 = !DILocation(line: 454, column: 24, scope: !1153)
!1161 = !DILocation(line: 454, column: 64, scope: !1153)
!1162 = !DILocation(line: 454, column: 21, scope: !1153)
!1163 = !DILocation(line: 454, column: 41, scope: !1153)
!1164 = !DILocation(line: 455, column: 9, scope: !1155)
!1165 = !DILocation(line: 456, column: 6, scope: !1147)
!1166 = distinct !DISubprogram(name: "call_once<fn(&usize, &usize) -> core::cmp::Ordering, (&usize, &usize)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hf87ff210abd12c3aE", scope: !1168, file: !1167, line: 227, type: !1170, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1179, retainedNodes: !1172)
!1167 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "1a40c014f8a7b8b7cd612b461a47e902")
!1168 = !DINamespace(name: "FnOnce", scope: !1169)
!1169 = !DINamespace(name: "function", scope: !157)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!129, !963, !12, !12}
!1172 = !{!1173, !1174}
!1173 = !DILocalVariable(arg: 1, scope: !1166, file: !1167, line: 227, type: !963)
!1174 = !DILocalVariable(arg: 2, scope: !1166, file: !1167, line: 227, type: !1175)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 128, align: 64, elements: !1176, templateParams: !4, identifier: "4bc227a7fa9c3d458d76f51eddc3e0bc")
!1176 = !{!1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1175, file: !2, baseType: !12, size: 64, align: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1175, file: !2, baseType: !12, size: 64, align: 64, offset: 64)
!1179 = !{!1180, !1181}
!1180 = !DITemplateTypeParameter(name: "Self", type: !963)
!1181 = !DITemplateTypeParameter(name: "Args", type: !1175)
!1182 = !DILocation(line: 227, column: 5, scope: !1166)
!1183 = distinct !DISubprogram(name: "slice_from_raw_parts<bool>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h6fe693176a5fd9c3E", scope: !176, file: !1184, line: 257, type: !1185, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1187)
!1184 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "207736266ff0d04d675044b37a0a2de6")
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!150, !153, !13}
!1187 = !{!1188, !1189}
!1188 = !DILocalVariable(name: "data", arg: 1, scope: !1183, file: !1184, line: 257, type: !153)
!1189 = !DILocalVariable(name: "len", arg: 2, scope: !1183, file: !1184, line: 257, type: !13)
!1190 = !DILocation(line: 257, column: 38, scope: !1183)
!1191 = !DILocation(line: 257, column: 54, scope: !1183)
!1192 = !DILocation(line: 258, column: 20, scope: !1183)
!1193 = !DILocation(line: 258, column: 5, scope: !1183)
!1194 = !DILocation(line: 259, column: 2, scope: !1183)
!1195 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<bool>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17ha2ce96a294f7f29cE", scope: !176, file: !1184, line: 289, type: !1196, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1198)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!201, !217, !13}
!1198 = !{!1199, !1200}
!1199 = !DILocalVariable(name: "data", arg: 1, scope: !1195, file: !1184, line: 289, type: !217)
!1200 = !DILocalVariable(name: "len", arg: 2, scope: !1195, file: !1184, line: 289, type: !13)
!1201 = !DILocation(line: 289, column: 42, scope: !1195)
!1202 = !DILocation(line: 289, column: 56, scope: !1195)
!1203 = !DILocalVariable(name: "self", arg: 1, scope: !1204, file: !212, line: 46, type: !217)
!1204 = distinct !DISubprogram(name: "cast<bool, ()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17h57ba7a2cc49b5feaE", scope: !225, file: !212, line: 46, type: !1205, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1209, retainedNodes: !1208)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!1207, !217}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !541, size: 64, align: 64, dwarfAddressSpace: 0)
!1208 = !{!1203}
!1209 = !{!167, !1210}
!1210 = !DITemplateTypeParameter(name: "U", type: !541)
!1211 = !DILocation(line: 46, column: 26, scope: !1204, inlinedAt: !1212)
!1212 = distinct !DILocation(line: 290, column: 24, scope: !1195)
!1213 = !DILocation(line: 47, column: 9, scope: !1204, inlinedAt: !1212)
!1214 = !DILocation(line: 290, column: 24, scope: !1195)
!1215 = !DILocation(line: 290, column: 5, scope: !1195)
!1216 = !DILocation(line: 291, column: 2, scope: !1195)
!1217 = distinct !DISubprogram(name: "drop_in_place<&u8>", linkageName: "_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h95cc251daa138a64E", scope: !176, file: !1184, line: 188, type: !1218, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1223, retainedNodes: !1221)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{null, !1220}
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u8", baseType: !17, size: 64, align: 64, dwarfAddressSpace: 0)
!1221 = !{!1222}
!1222 = !DILocalVariable(arg: 1, scope: !1217, file: !1184, line: 188, type: !1220)
!1223 = !{!1224}
!1224 = !DITemplateTypeParameter(name: "T", type: !17)
!1225 = !DILocation(line: 188, column: 1, scope: !1217)
!1226 = distinct !DISubprogram(name: "drop_in_place<&u64>", linkageName: "_ZN4core3ptr28drop_in_place$LT$$RF$u64$GT$17h41c0d4987cacee14E", scope: !176, file: !1184, line: 188, type: !1227, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1232, retainedNodes: !1230)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{null, !1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &u64", baseType: !22, size: 64, align: 64, dwarfAddressSpace: 0)
!1230 = !{!1231}
!1231 = !DILocalVariable(arg: 1, scope: !1226, file: !1184, line: 188, type: !1229)
!1232 = !{!1233}
!1233 = !DITemplateTypeParameter(name: "T", type: !22)
!1234 = !DILocation(line: 188, column: 1, scope: !1226)
!1235 = distinct !DISubprogram(name: "drop_in_place<&usize>", linkageName: "_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17hed68b759066bd200E", scope: !176, file: !1184, line: 188, type: !1236, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1241, retainedNodes: !1239)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1238}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &usize", baseType: !12, size: 64, align: 64, dwarfAddressSpace: 0)
!1239 = !{!1240}
!1240 = !DILocalVariable(arg: 1, scope: !1235, file: !1184, line: 188, type: !1238)
!1241 = !{!1242}
!1242 = !DITemplateTypeParameter(name: "T", type: !12)
!1243 = !DILocation(line: 188, column: 1, scope: !1235)
!1244 = distinct !DISubprogram(name: "drop_in_place<&bv::storage::Address>", linkageName: "_ZN4core3ptr45drop_in_place$LT$$RF$bv..storage..Address$GT$17hc8e043dc16a0c4a2E", scope: !176, file: !1184, line: 188, type: !1245, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1250, retainedNodes: !1248)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{null, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &Address", baseType: !27, size: 64, align: 64, dwarfAddressSpace: 0)
!1248 = !{!1249}
!1249 = !DILocalVariable(arg: 1, scope: !1244, file: !1184, line: 188, type: !1247)
!1250 = !{!1251}
!1251 = !DITemplateTypeParameter(name: "T", type: !27)
!1252 = !DILocation(line: 188, column: 1, scope: !1244)
!1253 = distinct !DISubprogram(name: "read<bool>", linkageName: "_ZN4core3ptr4read17h416c49d38f6da509E", scope: !176, file: !1184, line: 683, type: !1254, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1256)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!40, !153}
!1256 = !{!1257, !1258}
!1257 = !DILocalVariable(name: "src", arg: 1, scope: !1253, file: !1184, line: 683, type: !153)
!1258 = !DILocalVariable(name: "tmp", scope: !1259, file: !1184, line: 691, type: !1260, align: 1)
!1259 = distinct !DILexicalBlock(scope: !1253, file: !1184, line: 691, column: 5)
!1260 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<bool>", scope: !1261, file: !2, size: 8, align: 8, elements: !1262, templateParams: !166, identifier: "7925ba1804044353b7b847ec90c91e01")
!1261 = !DINamespace(name: "maybe_uninit", scope: !1001)
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1260, file: !2, baseType: !541, align: 8)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1260, file: !2, baseType: !1265, size: 8, align: 8)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<bool>", scope: !1266, file: !2, size: 8, align: 8, elements: !1267, templateParams: !166, identifier: "3f0bdc5d65de79183dda9cca87527671")
!1266 = !DINamespace(name: "manually_drop", scope: !1001)
!1267 = !{!1268}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1265, file: !2, baseType: !40, size: 8, align: 8)
!1269 = !DILocation(line: 683, column: 29, scope: !1253)
!1270 = !DILocation(line: 691, column: 9, scope: !1259)
!1271 = !DILocation(line: 318, column: 9, scope: !1272, inlinedAt: !1276)
!1272 = distinct !DISubprogram(name: "uninit<bool>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hc6a053c0ed1e40c4E", scope: !1260, file: !1273, line: 317, type: !1274, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !4)
!1273 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3671e1e568ab64028d26b6a3f5dc301")
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!1260}
!1276 = distinct !DILocation(line: 691, column: 19, scope: !1253)
!1277 = !DILocation(line: 319, column: 6, scope: !1272, inlinedAt: !1276)
!1278 = !DILocation(line: 691, column: 19, scope: !1253)
!1279 = !DILocalVariable(name: "self", arg: 1, scope: !1280, file: !1273, line: 568, type: !1283)
!1280 = distinct !DISubprogram(name: "as_mut_ptr<bool>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h620912ed984e91c1E", scope: !1260, file: !1273, line: 568, type: !1281, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1284)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!217, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut MaybeUninit<bool>", baseType: !1260, size: 64, align: 64, dwarfAddressSpace: 0)
!1284 = !{!1279}
!1285 = !DILocation(line: 568, column: 29, scope: !1280, inlinedAt: !1286)
!1286 = distinct !DILocation(line: 699, column: 34, scope: !1259)
!1287 = !DILocation(line: 699, column: 34, scope: !1259)
!1288 = !DILocation(line: 699, column: 9, scope: !1259)
!1289 = !DILocation(line: 700, column: 9, scope: !1259)
!1290 = !DILocalVariable(name: "self", arg: 1, scope: !1291, file: !1273, line: 623, type: !1260)
!1291 = distinct !DISubprogram(name: "assume_init<bool>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17hb2dbc9d182548274E", scope: !1260, file: !1273, line: 623, type: !1292, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1294)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!40, !1260, !253}
!1294 = !{!1290}
!1295 = !DILocation(line: 623, column: 37, scope: !1291, inlinedAt: !1296)
!1296 = distinct !DILocation(line: 700, column: 9, scope: !1259)
!1297 = !DILocation(line: 628, column: 38, scope: !1291, inlinedAt: !1296)
!1298 = !DILocalVariable(name: "slot", arg: 1, scope: !1299, file: !1300, line: 87, type: !1265)
!1299 = distinct !DISubprogram(name: "into_inner<bool>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he8261ca1effc52faE", scope: !1265, file: !1300, line: 87, type: !1301, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1303)
!1300 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "1ebb77b55900bbb941b074f7b36dbdc1")
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!40, !1265}
!1303 = !{!1298}
!1304 = !DILocation(line: 87, column: 29, scope: !1299, inlinedAt: !1305)
!1305 = distinct !DILocation(line: 628, column: 13, scope: !1291, inlinedAt: !1296)
!1306 = !DILocation(line: 702, column: 2, scope: !1253)
!1307 = distinct !DISubprogram(name: "read<u64>", linkageName: "_ZN4core3ptr4read17h7d614dc675fd536eE", scope: !176, file: !1184, line: 683, type: !1308, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1311)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!23, !1310}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u64", baseType: !23, size: 64, align: 64, dwarfAddressSpace: 0)
!1311 = !{!1312, !1313}
!1312 = !DILocalVariable(name: "src", arg: 1, scope: !1307, file: !1184, line: 683, type: !1310)
!1313 = !DILocalVariable(name: "tmp", scope: !1314, file: !1184, line: 691, type: !1315, align: 8)
!1314 = distinct !DILexicalBlock(scope: !1307, file: !1184, line: 691, column: 5)
!1315 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u64>", scope: !1261, file: !2, size: 64, align: 64, elements: !1316, templateParams: !310, identifier: "61645ab6e76ed26a29df3e01e8ec5c99")
!1316 = !{!1317, !1318}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1315, file: !2, baseType: !541, align: 8)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1315, file: !2, baseType: !1319, size: 64, align: 64)
!1319 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u64>", scope: !1266, file: !2, size: 64, align: 64, elements: !1320, templateParams: !310, identifier: "c68d3cbf46825f24b1e6243a0207faaf")
!1320 = !{!1321}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1319, file: !2, baseType: !23, size: 64, align: 64)
!1322 = !DILocation(line: 683, column: 29, scope: !1307)
!1323 = !DILocation(line: 691, column: 9, scope: !1314)
!1324 = !DILocation(line: 318, column: 9, scope: !1325, inlinedAt: !1328)
!1325 = distinct !DISubprogram(name: "uninit<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$6uninit17hf09511fdb390c8f8E", scope: !1315, file: !1273, line: 317, type: !1326, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !4)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!1315}
!1328 = distinct !DILocation(line: 691, column: 19, scope: !1307)
!1329 = !DILocation(line: 319, column: 6, scope: !1325, inlinedAt: !1328)
!1330 = !DILocation(line: 691, column: 19, scope: !1307)
!1331 = !DILocalVariable(name: "self", arg: 1, scope: !1332, file: !1273, line: 568, type: !1336)
!1332 = distinct !DISubprogram(name: "as_mut_ptr<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$10as_mut_ptr17h85c8d938b8f33d32E", scope: !1315, file: !1273, line: 568, type: !1333, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1337)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u64", baseType: !23, size: 64, align: 64, dwarfAddressSpace: 0)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut MaybeUninit<u64>", baseType: !1315, size: 64, align: 64, dwarfAddressSpace: 0)
!1337 = !{!1331}
!1338 = !DILocation(line: 568, column: 29, scope: !1332, inlinedAt: !1339)
!1339 = distinct !DILocation(line: 699, column: 34, scope: !1314)
!1340 = !DILocation(line: 699, column: 34, scope: !1314)
!1341 = !DILocation(line: 699, column: 9, scope: !1314)
!1342 = !DILocation(line: 700, column: 9, scope: !1314)
!1343 = !DILocalVariable(name: "self", arg: 1, scope: !1344, file: !1273, line: 623, type: !1315)
!1344 = distinct !DISubprogram(name: "assume_init<u64>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$11assume_init17h2d34b969624f5fcaE", scope: !1315, file: !1273, line: 623, type: !1345, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1347)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!23, !1315, !253}
!1347 = !{!1343}
!1348 = !DILocation(line: 623, column: 37, scope: !1344, inlinedAt: !1349)
!1349 = distinct !DILocation(line: 700, column: 9, scope: !1314)
!1350 = !DILocalVariable(name: "slot", arg: 1, scope: !1351, file: !1300, line: 87, type: !1319)
!1351 = distinct !DISubprogram(name: "into_inner<u64>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$10into_inner17he66be15627a83f86E", scope: !1319, file: !1300, line: 87, type: !1352, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1354)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!23, !1319}
!1354 = !{!1350}
!1355 = !DILocation(line: 87, column: 29, scope: !1351, inlinedAt: !1356)
!1356 = distinct !DILocation(line: 628, column: 13, scope: !1344, inlinedAt: !1349)
!1357 = !DILocation(line: 702, column: 2, scope: !1307)
!1358 = distinct !DISubprogram(name: "drop_in_place<core::alloc::layout::LayoutError>", linkageName: "_ZN4core3ptr53drop_in_place$LT$core..alloc..layout..LayoutError$GT$17h21156811bc7b8f57E", scope: !176, file: !1184, line: 188, type: !1359, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1364, retainedNodes: !1362)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1361}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut LayoutError", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!1362 = !{!1363}
!1363 = !DILocalVariable(arg: 1, scope: !1358, file: !1184, line: 188, type: !1361)
!1364 = !{!1365}
!1365 = !DITemplateTypeParameter(name: "T", type: !5)
!1366 = !DILocation(line: 188, column: 1, scope: !1358)
!1367 = distinct !DISubprogram(name: "write<u64>", linkageName: "_ZN4core3ptr5write17h9af9d6b0f6d7fb2fE", scope: !176, file: !1184, line: 878, type: !1368, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !1370)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1335, !23}
!1370 = !{!1371, !1372}
!1371 = !DILocalVariable(name: "dst", arg: 1, scope: !1367, file: !1184, line: 878, type: !1335)
!1372 = !DILocalVariable(name: "src", arg: 2, scope: !1367, file: !1184, line: 878, type: !23)
!1373 = !DILocation(line: 878, column: 30, scope: !1367)
!1374 = !DILocation(line: 878, column: 43, scope: !1367)
!1375 = !DILocation(line: 890, column: 9, scope: !1367)
!1376 = !DILocation(line: 893, column: 2, scope: !1367)
!1377 = distinct !DISubprogram(name: "write<bool>", linkageName: "_ZN4core3ptr5write17he658c7156b290fdaE", scope: !176, file: !1184, line: 878, type: !1378, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1380)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{null, !217, !40}
!1380 = !{!1381, !1382}
!1381 = !DILocalVariable(name: "dst", arg: 1, scope: !1377, file: !1184, line: 878, type: !217)
!1382 = !DILocalVariable(name: "src", arg: 2, scope: !1377, file: !1184, line: 878, type: !40)
!1383 = !DILocation(line: 878, column: 30, scope: !1377)
!1384 = !DILocation(line: 878, column: 43, scope: !1377)
!1385 = !DILocation(line: 890, column: 9, scope: !1377)
!1386 = !DILocation(line: 893, column: 2, scope: !1377)
!1387 = distinct !DISubprogram(name: "new_unchecked<bool>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc9d96932e2f47dd5E", scope: !1389, file: !1388, line: 87, type: !1396, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1398)
!1388 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "a83acd9c3d0e6cc1331d6a0f78f4f2e9")
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<bool>", scope: !1390, file: !2, size: 64, align: 64, elements: !1391, templateParams: !166, identifier: "921e7911b8f10320106896e551410bc3")
!1390 = !DINamespace(name: "unique", scope: !176)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1389, file: !2, baseType: !153, size: 64, align: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1389, file: !2, baseType: !1394, align: 8)
!1394 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<bool>", scope: !1395, file: !2, align: 8, elements: !4, templateParams: !166, identifier: "bc8ca139ad6d5be7a2f7f4481048e7b0")
!1395 = !DINamespace(name: "marker", scope: !8)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!1389, !217}
!1398 = !{!1399}
!1399 = !DILocalVariable(name: "ptr", arg: 1, scope: !1387, file: !1388, line: 87, type: !217)
!1400 = !DILocation(line: 87, column: 39, scope: !1387)
!1401 = !DILocation(line: 89, column: 18, scope: !1387)
!1402 = !DILocation(line: 90, column: 6, scope: !1387)
!1403 = distinct !DISubprogram(name: "cast<bool, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h17a3df7a1de66d23E", scope: !1389, file: !1388, line: 135, type: !1404, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1413, retainedNodes: !1411)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1406, !1389}
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !1390, file: !2, size: 64, align: 64, elements: !1407, templateParams: !889, identifier: "76ad11c5918345b022d81965d637386")
!1407 = !{!1408, !1409}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1406, file: !2, baseType: !262, size: 64, align: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1406, file: !2, baseType: !1410, align: 8)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !1395, file: !2, align: 8, elements: !4, templateParams: !889, identifier: "d9180f7e28d2761ea11f32bda27bf4b6")
!1411 = !{!1412}
!1412 = !DILocalVariable(name: "self", arg: 1, scope: !1403, file: !1388, line: 135, type: !1389)
!1413 = !{!167, !1414}
!1414 = !DITemplateTypeParameter(name: "U", type: !18)
!1415 = !DILocation(line: 135, column: 26, scope: !1403)
!1416 = !DILocation(line: 139, column: 40, scope: !1403)
!1417 = !DILocation(line: 139, column: 18, scope: !1403)
!1418 = !DILocation(line: 140, column: 6, scope: !1403)
!1419 = distinct !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h9be4a18b8b1d4657E", scope: !1389, file: !1388, line: 105, type: !1420, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1422)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!217, !1389}
!1422 = !{!1423}
!1423 = !DILocalVariable(name: "self", arg: 1, scope: !1419, file: !1388, line: 105, type: !1389)
!1424 = !DILocation(line: 105, column: 25, scope: !1419)
!1425 = !DILocation(line: 107, column: 6, scope: !1419)
!1426 = distinct !DISubprogram(name: "is_null<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h3e95ebc468912652E", scope: !225, file: !212, line: 36, type: !1427, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1429)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!40, !217}
!1429 = !{!1430}
!1430 = !DILocalVariable(name: "self", arg: 1, scope: !1426, file: !212, line: 36, type: !217)
!1431 = !DILocation(line: 36, column: 26, scope: !1426)
!1432 = !DILocation(line: 39, column: 41, scope: !1426)
!1433 = !DILocation(line: 39, column: 9, scope: !1426)
!1434 = !DILocation(line: 40, column: 6, scope: !1426)
!1435 = distinct !DISubprogram(name: "from_raw_parts<[bool]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h50961207f671948aE", scope: !1437, file: !1436, line: 110, type: !1438, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1444, retainedNodes: !1441)
!1436 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c0696840ef99c8132b364245b959d8b")
!1437 = !DINamespace(name: "metadata", scope: !176)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!150, !1440, !13}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !541, size: 64, align: 64, dwarfAddressSpace: 0)
!1441 = !{!1442, !1443}
!1442 = !DILocalVariable(name: "data_address", arg: 1, scope: !1435, file: !1436, line: 111, type: !1440)
!1443 = !DILocalVariable(name: "metadata", arg: 2, scope: !1435, file: !1436, line: 112, type: !13)
!1444 = !{!1445}
!1445 = !DITemplateTypeParameter(name: "T", type: !1446)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, align: 8, elements: !572)
!1447 = !DILocation(line: 111, column: 5, scope: !1435)
!1448 = !DILocation(line: 112, column: 5, scope: !1435)
!1449 = !DILocation(line: 117, column: 36, scope: !1435)
!1450 = !DILocation(line: 117, column: 14, scope: !1435)
!1451 = !DILocation(line: 118, column: 2, scope: !1435)
!1452 = distinct !DISubprogram(name: "from_raw_parts_mut<[bool]>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h4cee035ebcf546b2E", scope: !1437, file: !1436, line: 127, type: !1453, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1444, retainedNodes: !1455)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!201, !1207, !13}
!1455 = !{!1456, !1457}
!1456 = !DILocalVariable(name: "data_address", arg: 1, scope: !1452, file: !1436, line: 128, type: !1207)
!1457 = !DILocalVariable(name: "metadata", arg: 2, scope: !1452, file: !1436, line: 129, type: !13)
!1458 = !DILocation(line: 128, column: 5, scope: !1452)
!1459 = !DILocation(line: 129, column: 5, scope: !1452)
!1460 = !DILocation(line: 134, column: 36, scope: !1452)
!1461 = !DILocation(line: 134, column: 14, scope: !1452)
!1462 = !DILocation(line: 135, column: 2, scope: !1452)
!1463 = distinct !DISubprogram(name: "metadata<[bool]>", linkageName: "_ZN4core3ptr8metadata8metadata17h4498fccf1851f19bE", scope: !1437, file: !1436, line: 93, type: !1464, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1444, retainedNodes: !1466)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!13, !150}
!1466 = !{!1467}
!1467 = !DILocalVariable(name: "ptr", arg: 1, scope: !1463, file: !1436, line: 93, type: !150)
!1468 = !DILocation(line: 93, column: 34, scope: !1463)
!1469 = !DILocation(line: 97, column: 14, scope: !1463)
!1470 = !DILocation(line: 98, column: 2, scope: !1463)
!1471 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h0f39f9776b3ff334E", scope: !561, file: !1472, line: 189, type: !1473, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !569, retainedNodes: !1479)
!1472 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "c5d45e507157c14ac9b8f7e5ac0abc2b")
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!561, !1475}
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 128, align: 64, elements: !1476, templateParams: !4, identifier: "5196b2ee1fdbf734c7f3a78e14d50170")
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1475, file: !2, baseType: !262, size: 64, align: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1475, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!1479 = !{!1480}
!1480 = !DILocalVariable(name: "ptr", arg: 1, scope: !1471, file: !1472, line: 189, type: !1475)
!1481 = !DILocation(line: 189, column: 39, scope: !1471)
!1482 = !DILocation(line: 191, column: 18, scope: !1471)
!1483 = !DILocation(line: 192, column: 6, scope: !1471)
!1484 = distinct !DISubprogram(name: "new_unchecked<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h96a8ed661b0abefeE", scope: !1485, file: !1472, line: 189, type: !1488, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1490)
!1485 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bool>", scope: !562, file: !2, size: 64, align: 64, elements: !1486, templateParams: !166, identifier: "70021e823b25ff50491af71ac9d7eb9e")
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1485, file: !2, baseType: !153, size: 64, align: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!1485, !217}
!1490 = !{!1491}
!1491 = !DILocalVariable(name: "ptr", arg: 1, scope: !1484, file: !1472, line: 189, type: !217)
!1492 = !DILocation(line: 189, column: 39, scope: !1484)
!1493 = !DILocation(line: 191, column: 18, scope: !1484)
!1494 = !DILocation(line: 192, column: 6, scope: !1484)
!1495 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17hfad105d03ddaea6bE", scope: !1496, file: !1472, line: 210, type: !1499, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1513)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !562, file: !2, size: 64, align: 64, elements: !1497, templateParams: !889, identifier: "406fec2678b8bb45d8db3433ccc0ff79")
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1496, file: !2, baseType: !262, size: 64, align: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!1501, !813}
!1501 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !304, file: !2, size: 64, align: 64, elements: !1502, identifier: "1b292be2cef1955b53655c8f22aaab74")
!1502 = !{!1503}
!1503 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 64, align: 64, elements: !1504, templateParams: !1507, identifier: "1b292be2cef1955b53655c8f22aaab74_variant_part", discriminator: !316)
!1504 = !{!1505, !1509}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1503, file: !2, baseType: !1506, size: 64, align: 64, extraData: i64 0)
!1506 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1501, file: !2, size: 64, align: 64, elements: !4, templateParams: !1507, identifier: "1b292be2cef1955b53655c8f22aaab74::None")
!1507 = !{!1508}
!1508 = !DITemplateTypeParameter(name: "T", type: !1496)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1503, file: !2, baseType: !1510, size: 64, align: 64)
!1510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1501, file: !2, size: 64, align: 64, elements: !1511, templateParams: !1507, identifier: "1b292be2cef1955b53655c8f22aaab74::Some")
!1511 = !{!1512}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1510, file: !2, baseType: !1496, size: 64, align: 64)
!1513 = !{!1514}
!1514 = !DILocalVariable(name: "ptr", arg: 1, scope: !1495, file: !1472, line: 210, type: !813)
!1515 = !DILocation(line: 210, column: 16, scope: !1495)
!1516 = !DILocation(line: 211, column: 13, scope: !1495)
!1517 = !DILocation(line: 211, column: 12, scope: !1495)
!1518 = !DILocation(line: 215, column: 13, scope: !1495)
!1519 = !DILocation(line: 211, column: 9, scope: !1495)
!1520 = !DILocation(line: 213, column: 27, scope: !1495)
!1521 = !DILocation(line: 213, column: 13, scope: !1495)
!1522 = !DILocation(line: 217, column: 6, scope: !1495)
!1523 = distinct !DISubprogram(name: "cast<[u8], bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hfe97c25a0260464bE", scope: !561, file: !1472, line: 385, type: !1524, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1528, retainedNodes: !1526)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!1485, !561}
!1526 = !{!1527}
!1527 = !DILocalVariable(name: "self", arg: 1, scope: !1523, file: !1472, line: 385, type: !561)
!1528 = !{!570, !1529}
!1529 = !DITemplateTypeParameter(name: "U", type: !40)
!1530 = !DILocation(line: 385, column: 26, scope: !1523)
!1531 = !DILocation(line: 387, column: 41, scope: !1523)
!1532 = !DILocation(line: 387, column: 18, scope: !1523)
!1533 = !DILocation(line: 388, column: 6, scope: !1523)
!1534 = distinct !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h4fc818808fb581c5E", scope: !1485, file: !1472, line: 268, type: !1535, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1537)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!217, !1485}
!1537 = !{!1538}
!1538 = !DILocalVariable(name: "self", arg: 1, scope: !1534, file: !1472, line: 268, type: !1485)
!1539 = !DILocation(line: 268, column: 25, scope: !1534)
!1540 = !DILocation(line: 270, column: 6, scope: !1534)
!1541 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf74a1babd57275a2E", scope: !561, file: !1472, line: 268, type: !1542, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !569, retainedNodes: !1544)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!1475, !561}
!1544 = !{!1545}
!1545 = !DILocalVariable(name: "self", arg: 1, scope: !1541, file: !1472, line: 268, type: !561)
!1546 = !DILocation(line: 268, column: 25, scope: !1541)
!1547 = !DILocation(line: 269, column: 9, scope: !1541)
!1548 = !DILocation(line: 270, column: 6, scope: !1541)
!1549 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hd67808fc29ab1531E", scope: !561, file: !1472, line: 479, type: !1550, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1552)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!813, !561}
!1552 = !{!1553}
!1553 = !DILocalVariable(name: "self", arg: 1, scope: !1549, file: !1472, line: 479, type: !561)
!1554 = !DILocation(line: 479, column: 29, scope: !1549)
!1555 = !DILocation(line: 480, column: 9, scope: !1549)
!1556 = !DILocation(line: 481, column: 6, scope: !1549)
!1557 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h16585ef7014d7bb8E", scope: !561, file: !1472, line: 460, type: !1558, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1560)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!1496, !561}
!1560 = !{!1561}
!1561 = !DILocalVariable(name: "self", arg: 1, scope: !1557, file: !1472, line: 460, type: !561)
!1562 = !DILocation(line: 460, column: 34, scope: !1557)
!1563 = !DILocation(line: 462, column: 41, scope: !1557)
!1564 = !DILocalVariable(name: "self", arg: 1, scope: !1565, file: !212, line: 1197, type: !1475)
!1565 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$10as_mut_ptr17ha7a90f18ae7732b4E", scope: !213, file: !212, line: 1197, type: !1566, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1568)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!813, !1475}
!1568 = !{!1564}
!1569 = !DILocation(line: 1197, column: 29, scope: !1565, inlinedAt: !1570)
!1570 = distinct !DILocation(line: 462, column: 41, scope: !1557)
!1571 = !DILocation(line: 1198, column: 9, scope: !1565, inlinedAt: !1570)
!1572 = !DILocation(line: 462, column: 18, scope: !1557)
!1573 = !DILocation(line: 463, column: 6, scope: !1557)
!1574 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h24c6436c21aecb1cE", scope: !561, file: !1472, line: 418, type: !1575, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1577)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!561, !1496, !13}
!1577 = !{!1578, !1579}
!1578 = !DILocalVariable(name: "data", arg: 1, scope: !1574, file: !1472, line: 418, type: !1496)
!1579 = !DILocalVariable(name: "len", arg: 2, scope: !1574, file: !1472, line: 418, type: !13)
!1580 = !DILocation(line: 418, column: 39, scope: !1574)
!1581 = !DILocation(line: 418, column: 57, scope: !1574)
!1582 = !DILocation(line: 420, column: 70, scope: !1574)
!1583 = !DILocation(line: 420, column: 38, scope: !1574)
!1584 = !DILocation(line: 420, column: 18, scope: !1574)
!1585 = !DILocation(line: 421, column: 6, scope: !1574)
!1586 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$3len17hff0f99f4b5231b1aE", scope: !561, file: !1472, line: 442, type: !1587, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1589)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!13, !561}
!1589 = !{!1590}
!1590 = !DILocalVariable(name: "self", arg: 1, scope: !1586, file: !1472, line: 442, type: !561)
!1591 = !DILocation(line: 442, column: 22, scope: !1586)
!1592 = !DILocation(line: 443, column: 9, scope: !1586)
!1593 = !DILocalVariable(name: "self", arg: 1, scope: !1594, file: !212, line: 1177, type: !1475)
!1594 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr7mut_ptr41_$LT$impl$u20$$BP$mut$u20$$u5b$T$u5d$$GT$3len17h16939ce2cf27fc8cE", scope: !213, file: !212, line: 1177, type: !1595, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !1597)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!13, !1475}
!1597 = !{!1593}
!1598 = !DILocation(line: 1177, column: 22, scope: !1594, inlinedAt: !1599)
!1599 = distinct !DILocation(line: 443, column: 9, scope: !1586)
!1600 = !DILocation(line: 1178, column: 9, scope: !1594, inlinedAt: !1599)
!1601 = !DILocation(line: 444, column: 6, scope: !1586)
!1602 = distinct !DISubprogram(name: "cast<bool, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf881a6b183a2fce5E", scope: !174, file: !173, line: 47, type: !1603, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1209, retainedNodes: !1605)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!1440, !153}
!1605 = !{!1606}
!1606 = !DILocalVariable(name: "self", arg: 1, scope: !1602, file: !173, line: 47, type: !153)
!1607 = !DILocation(line: 47, column: 26, scope: !1602)
!1608 = !DILocation(line: 48, column: 9, scope: !1602)
!1609 = !DILocation(line: 49, column: 6, scope: !1602)
!1610 = distinct !DISubprogram(name: "len<bool>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hd2763a918c406633E", scope: !1611, file: !173, line: 916, type: !1464, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1612)
!1611 = !DINamespace(name: "{impl#1}", scope: !175)
!1612 = !{!1613}
!1613 = !DILocalVariable(name: "self", arg: 1, scope: !1610, file: !173, line: 916, type: !150)
!1614 = !DILocation(line: 916, column: 22, scope: !1610)
!1615 = !DILocation(line: 917, column: 9, scope: !1610)
!1616 = !DILocation(line: 918, column: 6, scope: !1610)
!1617 = distinct !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hcf4713784bb3b0a7E", scope: !1611, file: !173, line: 936, type: !1618, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1620)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!153, !150}
!1620 = !{!1621}
!1621 = !DILocalVariable(name: "self", arg: 1, scope: !1617, file: !173, line: 936, type: !150)
!1622 = !DILocation(line: 936, column: 25, scope: !1617)
!1623 = !DILocation(line: 937, column: 9, scope: !1617)
!1624 = !DILocation(line: 938, column: 6, scope: !1617)
!1625 = distinct !DISubprogram(name: "next<u64>", linkageName: "_ZN4core4iter5range110_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$4next17hb3521c5c51ca708dE", scope: !1626, file: !297, line: 1016, type: !301, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1629, retainedNodes: !1627)
!1626 = !DINamespace(name: "{impl#12}", scope: !299)
!1627 = !{!1628}
!1628 = !DILocalVariable(name: "self", arg: 1, scope: !1625, file: !297, line: 1016, type: !317)
!1629 = !{!1630}
!1630 = !DITemplateTypeParameter(name: "A", type: !23)
!1631 = !DILocation(line: 1016, column: 13, scope: !1625)
!1632 = !DILocation(line: 1017, column: 9, scope: !1625)
!1633 = !DILocation(line: 1018, column: 6, scope: !1625)
!1634 = distinct !DISubprogram(name: "next_back<u64>", linkageName: "_ZN4core4iter5range125_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..RangeInclusive$LT$A$GT$$GT$9next_back17h97b383ec5907ee62E", scope: !1635, file: !297, line: 1103, type: !301, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1629, retainedNodes: !1636)
!1635 = !DINamespace(name: "{impl#13}", scope: !299)
!1636 = !{!1637}
!1637 = !DILocalVariable(name: "self", arg: 1, scope: !1634, file: !297, line: 1103, type: !317)
!1638 = !DILocation(line: 1103, column: 18, scope: !1634)
!1639 = !DILocation(line: 1104, column: 9, scope: !1634)
!1640 = !DILocation(line: 1105, column: 6, scope: !1634)
!1641 = distinct !DISubprogram(name: "size_align<bool>", linkageName: "_ZN4core5alloc6layout10size_align17h36a0ec7b55639ee2E", scope: !6, file: !1642, line: 13, type: !1643, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !4)
!1642 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "b4b6ecfc5f3b5a48d9382f58835da573")
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!1645}
!1645 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 128, align: 64, elements: !1646, templateParams: !4, identifier: "692671488c701c539e0f5d11a0760e0")
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1645, file: !2, baseType: !13, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1645, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!1649 = !DILocation(line: 14, column: 6, scope: !1641)
!1650 = !DILocation(line: 448, column: 5, scope: !1651, inlinedAt: !1654)
!1651 = distinct !DISubprogram(name: "align_of<bool>", linkageName: "_ZN4core3mem8align_of17h03c815dfe31cf197E", scope: !1001, file: !1000, line: 447, type: !1652, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !4)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!13}
!1654 = distinct !DILocation(line: 14, column: 27, scope: !1641)
!1655 = !DILocation(line: 14, column: 27, scope: !1641)
!1656 = !DILocation(line: 14, column: 5, scope: !1641)
!1657 = !DILocation(line: 15, column: 2, scope: !1641)
!1658 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17h048abb8da252f2baE", scope: !531, file: !1642, line: 264, type: !1659, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1662)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!531, !1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Layout", baseType: !531, size: 64, align: 64, dwarfAddressSpace: 0)
!1662 = !{!1663, !1664, !1666}
!1663 = !DILocalVariable(name: "self", arg: 1, scope: !1658, file: !1642, line: 264, type: !1661)
!1664 = !DILocalVariable(name: "pad", scope: !1665, file: !1642, line: 265, type: !13, align: 8)
!1665 = distinct !DILexicalBlock(scope: !1658, file: !1642, line: 265, column: 9)
!1666 = !DILocalVariable(name: "new_size", scope: !1667, file: !1642, line: 270, type: !13, align: 8)
!1667 = distinct !DILexicalBlock(scope: !1665, file: !1642, line: 270, column: 9)
!1668 = !DILocation(line: 264, column: 25, scope: !1658)
!1669 = !DILocation(line: 265, column: 43, scope: !1658)
!1670 = !DILocation(line: 265, column: 19, scope: !1658)
!1671 = !DILocation(line: 265, column: 13, scope: !1665)
!1672 = !DILocation(line: 270, column: 24, scope: !1665)
!1673 = !DILocation(line: 270, column: 13, scope: !1667)
!1674 = !DILocation(line: 272, column: 43, scope: !1667)
!1675 = !DILocation(line: 272, column: 9, scope: !1667)
!1676 = !DILocation(line: 273, column: 6, scope: !1658)
!1677 = distinct !DISubprogram(name: "from_size_align", linkageName: "_ZN4core5alloc6layout6Layout15from_size_align17h305eb198d945f425E", scope: !531, file: !1642, line: 61, type: !1678, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1680)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!663, !13, !13}
!1680 = !{!1681, !1682}
!1681 = !DILocalVariable(name: "size", arg: 1, scope: !1677, file: !1642, line: 61, type: !13)
!1682 = !DILocalVariable(name: "align", arg: 2, scope: !1677, file: !1642, line: 61, type: !13)
!1683 = !DILocation(line: 61, column: 34, scope: !1677)
!1684 = !DILocation(line: 61, column: 47, scope: !1677)
!1685 = !DILocalVariable(name: "self", arg: 1, scope: !1686, file: !852, line: 1968, type: !13)
!1686 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17h704b3d5a98e2274dE", scope: !1017, file: !852, line: 1968, type: !1687, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1689)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!40, !13}
!1689 = !{!1685}
!1690 = !DILocation(line: 1968, column: 38, scope: !1686, inlinedAt: !1691)
!1691 = distinct !DILocation(line: 62, column: 13, scope: !1677)
!1692 = !DILocalVariable(name: "self", arg: 1, scope: !1693, file: !852, line: 84, type: !13)
!1693 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h91457f41ee5ed2deE", scope: !1017, file: !852, line: 84, type: !1694, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1696)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!265, !13}
!1696 = !{!1692}
!1697 = !DILocation(line: 84, column: 33, scope: !1693, inlinedAt: !1698)
!1698 = distinct !DILocation(line: 1969, column: 13, scope: !1686, inlinedAt: !1691)
!1699 = !DILocation(line: 85, column: 13, scope: !1693, inlinedAt: !1698)
!1700 = !DILocation(line: 1969, column: 13, scope: !1686, inlinedAt: !1691)
!1701 = !DILocation(line: 62, column: 13, scope: !1677)
!1702 = !DILocation(line: 62, column: 12, scope: !1677)
!1703 = !DILocation(line: 80, column: 32, scope: !1677)
!1704 = !DILocation(line: 80, column: 19, scope: !1677)
!1705 = !DILocation(line: 80, column: 12, scope: !1677)
!1706 = !DILocation(line: 63, column: 20, scope: !1677)
!1707 = !DILocation(line: 1, column: 1, scope: !1708)
!1708 = !DILexicalBlockFile(scope: !1677, file: !1709, discriminator: 0)
!1709 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/lib.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "cc738bb8a10883e6a9164b52574c7848")
!1710 = !DILocation(line: 87, column: 6, scope: !1677)
!1711 = !DILocation(line: 86, column: 21, scope: !1677)
!1712 = !DILocation(line: 81, column: 20, scope: !1677)
!1713 = !DILocation(line: 86, column: 18, scope: !1677)
!1714 = distinct !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17hb64fca9ab1a52759E", scope: !531, file: !1642, line: 231, type: !1715, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!13, !1661, !13}
!1717 = !{!1718, !1719, !1720, !1722}
!1718 = !DILocalVariable(name: "self", arg: 1, scope: !1714, file: !1642, line: 231, type: !1661)
!1719 = !DILocalVariable(name: "align", arg: 2, scope: !1714, file: !1642, line: 231, type: !13)
!1720 = !DILocalVariable(name: "len", scope: !1721, file: !1642, line: 232, type: !13, align: 8)
!1721 = distinct !DILexicalBlock(scope: !1714, file: !1642, line: 232, column: 9)
!1722 = !DILocalVariable(name: "len_rounded_up", scope: !1723, file: !1642, line: 253, type: !13, align: 8)
!1723 = distinct !DILexicalBlock(scope: !1721, file: !1642, line: 253, column: 9)
!1724 = !DILocation(line: 231, column: 37, scope: !1714)
!1725 = !DILocation(line: 231, column: 44, scope: !1714)
!1726 = !DILocation(line: 232, column: 19, scope: !1714)
!1727 = !DILocation(line: 232, column: 13, scope: !1721)
!1728 = !DILocalVariable(name: "self", arg: 1, scope: !1729, file: !852, line: 1113, type: !13)
!1729 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hcae9b8584ee33c9bE", scope: !1017, file: !852, line: 1113, type: !899, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1730)
!1730 = !{!1728, !1731}
!1731 = !DILocalVariable(name: "rhs", arg: 2, scope: !1729, file: !852, line: 1113, type: !13)
!1732 = !DILocation(line: 1113, column: 35, scope: !1729, inlinedAt: !1733)
!1733 = distinct !DILocation(line: 253, column: 30, scope: !1721)
!1734 = !DILocation(line: 1113, column: 41, scope: !1729, inlinedAt: !1733)
!1735 = !DILocation(line: 1114, column: 13, scope: !1729, inlinedAt: !1733)
!1736 = !DILocation(line: 253, column: 30, scope: !1721)
!1737 = !DILocalVariable(name: "self", arg: 1, scope: !1738, file: !852, line: 1133, type: !13)
!1738 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hcd6164a347ff4cacE", scope: !1017, file: !852, line: 1133, type: !899, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1739)
!1739 = !{!1737, !1740}
!1740 = !DILocalVariable(name: "rhs", arg: 2, scope: !1738, file: !852, line: 1133, type: !13)
!1741 = !DILocation(line: 1133, column: 35, scope: !1738, inlinedAt: !1742)
!1742 = distinct !DILocation(line: 253, column: 30, scope: !1721)
!1743 = !DILocation(line: 1133, column: 41, scope: !1738, inlinedAt: !1742)
!1744 = !DILocation(line: 1134, column: 13, scope: !1738, inlinedAt: !1742)
!1745 = !DILocation(line: 1133, column: 35, scope: !1738, inlinedAt: !1746)
!1746 = distinct !DILocation(line: 253, column: 73, scope: !1721)
!1747 = !DILocation(line: 1133, column: 41, scope: !1738, inlinedAt: !1746)
!1748 = !DILocation(line: 1134, column: 13, scope: !1738, inlinedAt: !1746)
!1749 = !DILocation(line: 253, column: 73, scope: !1721)
!1750 = !DILocation(line: 253, column: 72, scope: !1721)
!1751 = !DILocation(line: 253, column: 13, scope: !1723)
!1752 = !DILocation(line: 1133, column: 35, scope: !1738, inlinedAt: !1753)
!1753 = distinct !DILocation(line: 254, column: 9, scope: !1723)
!1754 = !DILocation(line: 1133, column: 41, scope: !1738, inlinedAt: !1753)
!1755 = !DILocation(line: 1134, column: 13, scope: !1738, inlinedAt: !1753)
!1756 = !DILocation(line: 254, column: 9, scope: !1723)
!1757 = !DILocation(line: 255, column: 6, scope: !1714)
!1758 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h4081750ac3c94fc5E", scope: !531, file: !1642, line: 98, type: !1759, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1761)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!531, !13, !13}
!1761 = !{!1762, !1763}
!1762 = !DILocalVariable(name: "size", arg: 1, scope: !1758, file: !1642, line: 98, type: !13)
!1763 = !DILocalVariable(name: "align", arg: 2, scope: !1758, file: !1642, line: 98, type: !13)
!1764 = !DILocation(line: 98, column: 51, scope: !1758)
!1765 = !DILocation(line: 98, column: 64, scope: !1758)
!1766 = !DILocation(line: 100, column: 48, scope: !1758)
!1767 = !DILocation(line: 100, column: 9, scope: !1758)
!1768 = !DILocation(line: 101, column: 6, scope: !1758)
!1769 = distinct !DISubprogram(name: "new<bool>", linkageName: "_ZN4core5alloc6layout6Layout3new17h16dd7fccd6be8139E", scope: !531, file: !1642, line: 123, type: !1770, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1772)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!531}
!1772 = !{!1773, !1775}
!1773 = !DILocalVariable(name: "size", scope: !1774, file: !1642, line: 124, type: !13, align: 8)
!1774 = distinct !DILexicalBlock(scope: !1769, file: !1642, line: 124, column: 9)
!1775 = !DILocalVariable(name: "align", scope: !1774, file: !1642, line: 124, type: !13, align: 8)
!1776 = !DILocation(line: 124, column: 29, scope: !1769)
!1777 = !DILocation(line: 124, column: 14, scope: !1769)
!1778 = !DILocation(line: 124, column: 14, scope: !1774)
!1779 = !DILocation(line: 124, column: 20, scope: !1769)
!1780 = !DILocation(line: 124, column: 20, scope: !1774)
!1781 = !DILocation(line: 129, column: 18, scope: !1774)
!1782 = !DILocation(line: 130, column: 6, scope: !1769)
!1783 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h055453a61c147ca6E", scope: !531, file: !1642, line: 107, type: !1784, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1786)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!13, !1661}
!1786 = !{!1787}
!1787 = !DILocalVariable(name: "self", arg: 1, scope: !1783, file: !1642, line: 107, type: !1661)
!1788 = !DILocation(line: 107, column: 23, scope: !1783)
!1789 = !DILocation(line: 108, column: 9, scope: !1783)
!1790 = !DILocation(line: 109, column: 6, scope: !1783)
!1791 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h4fe0a70c81650644E", scope: !531, file: !1642, line: 115, type: !1784, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1792)
!1792 = !{!1793}
!1793 = !DILocalVariable(name: "self", arg: 1, scope: !1791, file: !1642, line: 115, type: !1661)
!1794 = !DILocation(line: 115, column: 24, scope: !1791)
!1795 = !DILocation(line: 116, column: 9, scope: !1791)
!1796 = !DILocation(line: 117, column: 6, scope: !1791)
!1797 = distinct !DISubprogram(name: "array<bool>", linkageName: "_ZN4core5alloc6layout6Layout5array17h953855d8a6ad270aE", scope: !531, file: !1642, line: 393, type: !1798, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !166, retainedNodes: !1800)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!663, !13}
!1800 = !{!1801, !1802, !1804, !1805, !1807, !1809, !1813, !1814}
!1801 = !DILocalVariable(name: "n", arg: 1, scope: !1797, file: !1642, line: 393, type: !13)
!1802 = !DILocalVariable(name: "layout", scope: !1803, file: !1642, line: 394, type: !531, align: 8)
!1803 = distinct !DILexicalBlock(scope: !1797, file: !1642, line: 394, column: 9)
!1804 = !DILocalVariable(name: "offset", scope: !1803, file: !1642, line: 394, type: !13, align: 8)
!1805 = !DILocalVariable(name: "residual", scope: !1806, file: !1642, line: 394, type: !679, align: 1)
!1806 = distinct !DILexicalBlock(scope: !1797, file: !1642, line: 394, column: 60)
!1807 = !DILocalVariable(name: "val", scope: !1808, file: !1642, line: 394, type: !710, align: 8)
!1808 = distinct !DILexicalBlock(scope: !1797, file: !1642, line: 394, column: 32)
!1809 = !DILocalVariable(name: "left_val", scope: !1810, file: !1642, line: 395, type: !12, align: 8)
!1810 = !DILexicalBlockFile(scope: !1811, file: !1642, discriminator: 0)
!1811 = distinct !DILexicalBlock(scope: !1803, file: !1812, line: 38, column: 13)
!1812 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "e357455d1c19e9b2642585126fa64908")
!1813 = !DILocalVariable(name: "right_val", scope: !1810, file: !1642, line: 395, type: !12, align: 8)
!1814 = !DILocalVariable(name: "kind", scope: !1815, file: !1642, line: 395, type: !136, align: 1)
!1815 = !DILexicalBlockFile(scope: !1816, file: !1642, discriminator: 0)
!1816 = distinct !DILexicalBlock(scope: !1811, file: !1812, line: 40, column: 21)
!1817 = !DILocation(line: 393, column: 21, scope: !1797)
!1818 = !DILocation(line: 394, column: 14, scope: !1803)
!1819 = !DILocation(line: 394, column: 60, scope: !1806)
!1820 = !DILocation(line: 394, column: 32, scope: !1808)
!1821 = !DILocation(line: 394, column: 32, scope: !1797)
!1822 = !DILocation(line: 394, column: 14, scope: !1797)
!1823 = !DILocation(line: 394, column: 22, scope: !1797)
!1824 = !DILocation(line: 394, column: 22, scope: !1803)
!1825 = !DILocation(line: 396, column: 12, scope: !1803)
!1826 = !DILocation(line: 394, column: 32, scope: !1806)
!1827 = !DILocation(line: 397, column: 6, scope: !1797)
!1828 = !DILocation(line: 396, column: 9, scope: !1803)
!1829 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h46917801f219027dE", scope: !531, file: !1642, line: 285, type: !1830, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1832)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!702, !1661, !13}
!1832 = !{!1833, !1834, !1835, !1837, !1839, !1841}
!1833 = !DILocalVariable(name: "self", arg: 1, scope: !1829, file: !1642, line: 285, type: !1661)
!1834 = !DILocalVariable(name: "n", arg: 2, scope: !1829, file: !1642, line: 285, type: !13)
!1835 = !DILocalVariable(name: "padded_size", scope: !1836, file: !1642, line: 290, type: !13, align: 8)
!1836 = distinct !DILexicalBlock(scope: !1829, file: !1642, line: 290, column: 9)
!1837 = !DILocalVariable(name: "alloc_size", scope: !1838, file: !1642, line: 291, type: !13, align: 8)
!1838 = distinct !DILexicalBlock(scope: !1836, file: !1642, line: 291, column: 9)
!1839 = !DILocalVariable(name: "residual", scope: !1840, file: !1642, line: 291, type: !679, align: 1)
!1840 = distinct !DILexicalBlock(scope: !1836, file: !1642, line: 291, column: 71)
!1841 = !DILocalVariable(name: "val", scope: !1842, file: !1642, line: 291, type: !13, align: 8)
!1842 = distinct !DILexicalBlock(scope: !1836, file: !1642, line: 291, column: 26)
!1843 = !DILocation(line: 285, column: 19, scope: !1829)
!1844 = !DILocation(line: 285, column: 26, scope: !1829)
!1845 = !DILocation(line: 291, column: 71, scope: !1840)
!1846 = !DILocation(line: 290, column: 27, scope: !1829)
!1847 = !DILocation(line: 290, column: 65, scope: !1829)
!1848 = !DILocation(line: 290, column: 41, scope: !1829)
!1849 = !DILocation(line: 290, column: 13, scope: !1836)
!1850 = !DILocation(line: 291, column: 26, scope: !1836)
!1851 = !DILocation(line: 291, column: 26, scope: !1842)
!1852 = !DILocation(line: 291, column: 13, scope: !1838)
!1853 = !DILocation(line: 295, column: 68, scope: !1838)
!1854 = !DILocation(line: 291, column: 26, scope: !1840)
!1855 = !DILocation(line: 296, column: 6, scope: !1829)
!1856 = !DILocation(line: 295, column: 22, scope: !1838)
!1857 = !DILocation(line: 295, column: 21, scope: !1838)
!1858 = !DILocation(line: 295, column: 18, scope: !1838)
!1859 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h29e0235ef9518cb9E", scope: !531, file: !1642, line: 187, type: !1860, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1862)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!1496, !1661}
!1862 = !{!1863}
!1863 = !DILocalVariable(name: "self", arg: 1, scope: !1859, file: !1642, line: 187, type: !1661)
!1864 = !DILocation(line: 187, column: 27, scope: !1859)
!1865 = !DILocation(line: 189, column: 41, scope: !1859)
!1866 = !DILocation(line: 189, column: 18, scope: !1859)
!1867 = !DILocation(line: 190, column: 6, scope: !1859)
!1868 = distinct !DISubprogram(name: "clone<()>", linkageName: "_ZN4core5clone5Clone5clone17h1c211bccca8199c2E", scope: !1870, file: !1869, line: 121, type: !1872, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1877, retainedNodes: !1875)
!1869 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "234b7513444e11fc1c70a64cfc2357fe")
!1870 = !DINamespace(name: "Clone", scope: !1871)
!1871 = !DINamespace(name: "clone", scope: !8)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !1874}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !541, size: 64, align: 64, dwarfAddressSpace: 0)
!1875 = !{!1876}
!1876 = !DILocalVariable(arg: 1, scope: !1868, file: !1869, line: 121, type: !1874)
!1877 = !{!1878}
!1878 = !DITemplateTypeParameter(name: "Self", type: !541)
!1879 = !DILocation(line: 121, column: 5, scope: !1868)
!1880 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u64$GT$5clone17h91d274c6b860d38bE", scope: !1881, file: !1869, line: 183, type: !1883, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1885)
!1881 = !DINamespace(name: "{impl#9}", scope: !1882)
!1882 = !DINamespace(name: "impls", scope: !1871)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!23, !22}
!1885 = !{!1886}
!1886 = !DILocalVariable(name: "self", arg: 1, scope: !1880, file: !1869, line: 183, type: !22)
!1887 = !DILocation(line: 183, column: 30, scope: !1880)
!1888 = !DILocation(line: 184, column: 25, scope: !1880)
!1889 = !DILocation(line: 185, column: 22, scope: !1880)
!1890 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls53_$LT$impl$u20$core..clone..Clone$u20$for$u20$bool$GT$5clone17hc458405b49b21808E", scope: !1891, file: !1869, line: 183, type: !1892, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !1895)
!1891 = !DINamespace(name: "{impl#19}", scope: !1882)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!40, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !40, size: 64, align: 64, dwarfAddressSpace: 0)
!1895 = !{!1896}
!1896 = !DILocalVariable(name: "self", arg: 1, scope: !1890, file: !1869, line: 183, type: !1894)
!1897 = !DILocation(line: 183, column: 30, scope: !1890)
!1898 = !DILocation(line: 184, column: 25, scope: !1890)
!1899 = !DILocation(line: 185, column: 22, scope: !1890)
!1900 = distinct !DISubprogram(name: "index<bool, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h0be4a3e6e3d05d55E", scope: !1901, file: !144, line: 14, type: !1902, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1907, retainedNodes: !1904)
!1901 = !DINamespace(name: "{impl#0}", scope: !146)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!249, !249, !401, !253}
!1904 = !{!1905, !1906}
!1905 = !DILocalVariable(name: "self", arg: 1, scope: !1900, file: !144, line: 14, type: !249)
!1906 = !DILocalVariable(name: "index", arg: 2, scope: !1900, file: !144, line: 14, type: !401)
!1907 = !{!167, !1908}
!1908 = !DITemplateTypeParameter(name: "I", type: !401)
!1909 = !DILocation(line: 14, column: 14, scope: !1900)
!1910 = !DILocation(line: 14, column: 21, scope: !1900)
!1911 = !DILocation(line: 15, column: 9, scope: !1900)
!1912 = !DILocation(line: 16, column: 6, scope: !1900)
!1913 = distinct !DISubprogram(name: "index<bool, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3978143dcc3cca1eE", scope: !1901, file: !144, line: 14, type: !1914, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1919, retainedNodes: !1916)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!249, !249, !377, !253}
!1916 = !{!1917, !1918}
!1917 = !DILocalVariable(name: "self", arg: 1, scope: !1913, file: !144, line: 14, type: !249)
!1918 = !DILocalVariable(name: "index", arg: 2, scope: !1913, file: !144, line: 14, type: !377)
!1919 = !{!167, !1920}
!1920 = !DITemplateTypeParameter(name: "I", type: !377)
!1921 = !DILocation(line: 14, column: 14, scope: !1913)
!1922 = !DILocation(line: 14, column: 21, scope: !1913)
!1923 = !DILocation(line: 15, column: 9, scope: !1913)
!1924 = !DILocation(line: 16, column: 6, scope: !1913)
!1925 = distinct !DISubprogram(name: "index<bool, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h83389c579e9f629cE", scope: !1901, file: !144, line: 14, type: !1926, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1931, retainedNodes: !1928)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!249, !249, !491, !253}
!1928 = !{!1929, !1930}
!1929 = !DILocalVariable(name: "self", arg: 1, scope: !1925, file: !144, line: 14, type: !249)
!1930 = !DILocalVariable(name: "index", arg: 2, scope: !1925, file: !144, line: 14, type: !491)
!1931 = !{!167, !1932}
!1932 = !DITemplateTypeParameter(name: "I", type: !491)
!1933 = !DILocation(line: 14, column: 14, scope: !1925)
!1934 = !DILocation(line: 14, column: 21, scope: !1925)
!1935 = !DILocation(line: 15, column: 9, scope: !1925)
!1936 = !DILocation(line: 16, column: 6, scope: !1925)
!1937 = distinct !DISubprogram(name: "index<bool, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8db56019e1474894E", scope: !1901, file: !144, line: 14, type: !1938, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1943, retainedNodes: !1940)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!249, !249, !155, !253}
!1940 = !{!1941, !1942}
!1941 = !DILocalVariable(name: "self", arg: 1, scope: !1937, file: !144, line: 14, type: !249)
!1942 = !DILocalVariable(name: "index", arg: 2, scope: !1937, file: !144, line: 14, type: !155)
!1943 = !{!167, !1944}
!1944 = !DITemplateTypeParameter(name: "I", type: !155)
!1945 = !DILocation(line: 14, column: 14, scope: !1937)
!1946 = !DILocation(line: 14, column: 21, scope: !1937)
!1947 = !DILocation(line: 15, column: 9, scope: !1937)
!1948 = !DILocation(line: 16, column: 6, scope: !1937)
!1949 = distinct !DISubprogram(name: "index_mut<bool, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h1751a9fd87524dabE", scope: !1950, file: !144, line: 25, type: !1951, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1907, retainedNodes: !1953)
!1950 = !DINamespace(name: "{impl#1}", scope: !146)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!281, !281, !401, !253}
!1953 = !{!1954, !1955}
!1954 = !DILocalVariable(name: "self", arg: 1, scope: !1949, file: !144, line: 25, type: !281)
!1955 = !DILocalVariable(name: "index", arg: 2, scope: !1949, file: !144, line: 25, type: !401)
!1956 = !DILocation(line: 25, column: 18, scope: !1949)
!1957 = !DILocation(line: 25, column: 29, scope: !1949)
!1958 = !DILocation(line: 26, column: 9, scope: !1949)
!1959 = !DILocation(line: 27, column: 6, scope: !1949)
!1960 = distinct !DISubprogram(name: "index_mut<bool, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5d5b828fe4bb4643E", scope: !1950, file: !144, line: 25, type: !1961, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1943, retainedNodes: !1963)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!281, !281, !155, !253}
!1963 = !{!1964, !1965}
!1964 = !DILocalVariable(name: "self", arg: 1, scope: !1960, file: !144, line: 25, type: !281)
!1965 = !DILocalVariable(name: "index", arg: 2, scope: !1960, file: !144, line: 25, type: !155)
!1966 = !DILocation(line: 25, column: 18, scope: !1960)
!1967 = !DILocation(line: 25, column: 29, scope: !1960)
!1968 = !DILocation(line: 26, column: 9, scope: !1960)
!1969 = !DILocation(line: 27, column: 6, scope: !1960)
!1970 = distinct !DISubprogram(name: "index_mut<bool, core::ops::range::RangeToInclusive<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h8a9535dd529280f7E", scope: !1950, file: !144, line: 25, type: !1971, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1931, retainedNodes: !1973)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!281, !281, !491, !253}
!1973 = !{!1974, !1975}
!1974 = !DILocalVariable(name: "self", arg: 1, scope: !1970, file: !144, line: 25, type: !281)
!1975 = !DILocalVariable(name: "index", arg: 2, scope: !1970, file: !144, line: 25, type: !491)
!1976 = !DILocation(line: 25, column: 18, scope: !1970)
!1977 = !DILocation(line: 25, column: 29, scope: !1970)
!1978 = !DILocation(line: 26, column: 9, scope: !1970)
!1979 = !DILocation(line: 27, column: 6, scope: !1970)
!1980 = distinct !DISubprogram(name: "index_mut<bool, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h9608ef68fd8d20caE", scope: !1950, file: !144, line: 25, type: !1981, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1919, retainedNodes: !1983)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!281, !281, !377, !253}
!1983 = !{!1984, !1985}
!1984 = !DILocalVariable(name: "self", arg: 1, scope: !1980, file: !144, line: 25, type: !281)
!1985 = !DILocalVariable(name: "index", arg: 2, scope: !1980, file: !144, line: 25, type: !377)
!1986 = !DILocation(line: 25, column: 18, scope: !1980)
!1987 = !DILocation(line: 25, column: 29, scope: !1980)
!1988 = !DILocation(line: 26, column: 9, scope: !1980)
!1989 = !DILocation(line: 27, column: 6, scope: !1980)
!1990 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h31e1addddddbd2ccE", scope: !1501, file: !1991, line: 914, type: !1992, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2002, retainedNodes: !2007)
!1991 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "ae2d10012265ee4a26e1fe00b9dc31b2")
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!1994, !1501, !743}
!1994 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !116, file: !2, size: 64, align: 64, elements: !1995, identifier: "ae14187b6b914de222cba478783c9cfb")
!1995 = !{!1996}
!1996 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 64, align: 64, elements: !1997, templateParams: !2002, identifier: "ae14187b6b914de222cba478783c9cfb_variant_part", discriminator: !581)
!1997 = !{!1998, !2003}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1996, file: !2, baseType: !1999, size: 64, align: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1994, file: !2, size: 64, align: 64, elements: !2000, templateParams: !2002, identifier: "ae14187b6b914de222cba478783c9cfb::Ok")
!2000 = !{!2001}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1999, file: !2, baseType: !1496, size: 64, align: 64)
!2002 = !{!1508, !742}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1996, file: !2, baseType: !2004, size: 64, align: 64, extraData: i64 0)
!2004 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1994, file: !2, size: 64, align: 64, elements: !2005, templateParams: !2002, identifier: "ae14187b6b914de222cba478783c9cfb::Err")
!2005 = !{!2006}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2004, file: !2, baseType: !743, align: 8)
!2007 = !{!2008, !2009, !2010}
!2008 = !DILocalVariable(name: "self", arg: 1, scope: !1990, file: !1991, line: 914, type: !1501)
!2009 = !DILocalVariable(name: "err", arg: 2, scope: !1990, file: !1991, line: 914, type: !743)
!2010 = !DILocalVariable(name: "v", scope: !2011, file: !1991, line: 916, type: !1496, align: 8)
!2011 = distinct !DILexicalBlock(scope: !1990, file: !1991, line: 916, column: 13)
!2012 = !DILocation(line: 914, column: 21, scope: !1990)
!2013 = !DILocation(line: 914, column: 27, scope: !1990)
!2014 = !DILocation(line: 915, column: 15, scope: !1990)
!2015 = !DILocation(line: 915, column: 9, scope: !1990)
!2016 = !DILocation(line: 917, column: 25, scope: !1990)
!2017 = !DILocation(line: 917, column: 21, scope: !1990)
!2018 = !DILocation(line: 917, column: 28, scope: !1990)
!2019 = !DILocation(line: 916, column: 18, scope: !1990)
!2020 = !DILocation(line: 916, column: 18, scope: !2011)
!2021 = !DILocation(line: 916, column: 24, scope: !2011)
!2022 = !DILocation(line: 916, column: 28, scope: !1990)
!2023 = !DILocation(line: 919, column: 5, scope: !1990)
!2024 = !DILocation(line: 919, column: 6, scope: !1990)
!2025 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h8c6e6ca43fdffaacE", scope: !796, file: !1991, line: 914, type: !2026, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2036, retainedNodes: !2041)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!2028, !796, !521}
!2028 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !116, file: !2, size: 192, align: 64, elements: !2029, identifier: "e0755cd150811430a70aec0d8bc5019d")
!2029 = !{!2030}
!2030 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !2031, templateParams: !2036, identifier: "e0755cd150811430a70aec0d8bc5019d_variant_part", discriminator: !581)
!2031 = !{!2032, !2037}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2030, file: !2, baseType: !2033, size: 192, align: 64, extraData: i64 0)
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2028, file: !2, size: 192, align: 64, elements: !2034, templateParams: !2036, identifier: "e0755cd150811430a70aec0d8bc5019d::Ok")
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2033, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!2036 = !{!803, !596}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2030, file: !2, baseType: !2038, size: 192, align: 64, extraData: i64 1)
!2038 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2028, file: !2, size: 192, align: 64, elements: !2039, templateParams: !2036, identifier: "e0755cd150811430a70aec0d8bc5019d::Err")
!2039 = !{!2040}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2038, file: !2, baseType: !521, size: 128, align: 64, offset: 64)
!2041 = !{!2042, !2043, !2044}
!2042 = !DILocalVariable(name: "self", arg: 1, scope: !2025, file: !1991, line: 914, type: !796)
!2043 = !DILocalVariable(name: "err", arg: 2, scope: !2025, file: !1991, line: 914, type: !521)
!2044 = !DILocalVariable(name: "v", scope: !2045, file: !1991, line: 916, type: !13, align: 8)
!2045 = distinct !DILexicalBlock(scope: !2025, file: !1991, line: 916, column: 13)
!2046 = !DILocation(line: 914, column: 21, scope: !2025)
!2047 = !DILocation(line: 914, column: 27, scope: !2025)
!2048 = !DILocation(line: 915, column: 15, scope: !2025)
!2049 = !DILocation(line: 915, column: 9, scope: !2025)
!2050 = !DILocation(line: 917, column: 25, scope: !2025)
!2051 = !DILocation(line: 917, column: 21, scope: !2025)
!2052 = !DILocation(line: 917, column: 28, scope: !2025)
!2053 = !DILocation(line: 916, column: 18, scope: !2025)
!2054 = !DILocation(line: 916, column: 18, scope: !2045)
!2055 = !DILocation(line: 916, column: 24, scope: !2045)
!2056 = !DILocation(line: 916, column: 28, scope: !2025)
!2057 = !DILocation(line: 919, column: 5, scope: !2025)
!2058 = !DILocation(line: 919, column: 6, scope: !2025)
!2059 = distinct !DISubprogram(name: "ok_or<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17ha70ed32c01f32cf6E", scope: !796, file: !1991, line: 914, type: !2060, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2070, retainedNodes: !2075)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!2062, !796, !5}
!2062 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::alloc::layout::LayoutError>", scope: !116, file: !2, size: 128, align: 64, elements: !2063, identifier: "bcfcb322480b2d26d4da0769e4ceae7b")
!2063 = !{!2064}
!2064 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 128, align: 64, elements: !2065, templateParams: !2070, identifier: "bcfcb322480b2d26d4da0769e4ceae7b_variant_part", discriminator: !581)
!2065 = !{!2066, !2071}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2064, file: !2, baseType: !2067, size: 128, align: 64, extraData: i64 0)
!2067 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2062, file: !2, size: 128, align: 64, elements: !2068, templateParams: !2070, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Ok")
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2067, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!2070 = !{!803, !673}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2064, file: !2, baseType: !2072, size: 128, align: 64, extraData: i64 1)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2062, file: !2, size: 128, align: 64, elements: !2073, templateParams: !2070, identifier: "bcfcb322480b2d26d4da0769e4ceae7b::Err")
!2073 = !{!2074}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2072, file: !2, baseType: !5, align: 8, offset: 64)
!2075 = !{!2076, !2077, !2078}
!2076 = !DILocalVariable(name: "self", arg: 1, scope: !2059, file: !1991, line: 914, type: !796)
!2077 = !DILocalVariable(name: "err", arg: 2, scope: !2059, file: !1991, line: 914, type: !5)
!2078 = !DILocalVariable(name: "v", scope: !2079, file: !1991, line: 916, type: !13, align: 8)
!2079 = distinct !DILexicalBlock(scope: !2059, file: !1991, line: 916, column: 13)
!2080 = !DILocation(line: 914, column: 21, scope: !2059)
!2081 = !DILocation(line: 914, column: 27, scope: !2059)
!2082 = !DILocation(line: 915, column: 15, scope: !2059)
!2083 = !DILocation(line: 915, column: 9, scope: !2059)
!2084 = !DILocation(line: 917, column: 25, scope: !2059)
!2085 = !DILocation(line: 917, column: 21, scope: !2059)
!2086 = !DILocation(line: 917, column: 28, scope: !2059)
!2087 = !DILocation(line: 916, column: 18, scope: !2059)
!2088 = !DILocation(line: 916, column: 18, scope: !2079)
!2089 = !DILocation(line: 916, column: 24, scope: !2079)
!2090 = !DILocation(line: 916, column: 28, scope: !2059)
!2091 = !DILocation(line: 919, column: 5, scope: !2059)
!2092 = !DILocation(line: 919, column: 6, scope: !2059)
!2093 = distinct !DISubprogram(name: "expect<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h5984e025ace1e275E", scope: !796, file: !1991, line: 695, type: !2094, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !802, retainedNodes: !2096)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!13, !796, !259, !253}
!2096 = !{!2097, !2098, !2099}
!2097 = !DILocalVariable(name: "self", arg: 1, scope: !2093, file: !1991, line: 695, type: !796)
!2098 = !DILocalVariable(name: "msg", arg: 2, scope: !2093, file: !1991, line: 695, type: !259)
!2099 = !DILocalVariable(name: "val", scope: !2100, file: !1991, line: 697, type: !13, align: 8)
!2100 = distinct !DILexicalBlock(scope: !2093, file: !1991, line: 697, column: 13)
!2101 = !DILocation(line: 695, column: 19, scope: !2093)
!2102 = !DILocation(line: 695, column: 25, scope: !2093)
!2103 = !DILocation(line: 696, column: 15, scope: !2093)
!2104 = !DILocation(line: 696, column: 9, scope: !2093)
!2105 = !DILocation(line: 698, column: 21, scope: !2093)
!2106 = !DILocation(line: 697, column: 18, scope: !2093)
!2107 = !DILocation(line: 697, column: 18, scope: !2100)
!2108 = !DILocation(line: 700, column: 6, scope: !2093)
!2109 = distinct !DISubprogram(name: "expect<(u64, u64)>", linkageName: "_ZN4core6option15Option$LT$T$GT$6expect17h7cba6b55af8f9671E", scope: !2110, file: !1991, line: 695, type: !2126, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2116, retainedNodes: !2128)
!2110 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(u64, u64)>", scope: !304, file: !2, size: 192, align: 64, elements: !2111, identifier: "fc1d6f08f29c10844ca520a580502900")
!2111 = !{!2112}
!2112 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 192, align: 64, elements: !2113, templateParams: !2116, identifier: "fc1d6f08f29c10844ca520a580502900_variant_part", discriminator: !316)
!2113 = !{!2114, !2122}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2112, file: !2, baseType: !2115, size: 192, align: 64, extraData: i64 0)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2110, file: !2, size: 192, align: 64, elements: !4, templateParams: !2116, identifier: "fc1d6f08f29c10844ca520a580502900::None")
!2116 = !{!2117}
!2117 = !DITemplateTypeParameter(name: "T", type: !2118)
!2118 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, u64)", file: !2, size: 128, align: 64, elements: !2119, templateParams: !4, identifier: "abf73a3ee1357c2273bc4250daa12012")
!2119 = !{!2120, !2121}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2118, file: !2, baseType: !23, size: 64, align: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2118, file: !2, baseType: !23, size: 64, align: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2112, file: !2, baseType: !2123, size: 192, align: 64, extraData: i64 1)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2110, file: !2, size: 192, align: 64, elements: !2124, templateParams: !2116, identifier: "fc1d6f08f29c10844ca520a580502900::Some")
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2123, file: !2, baseType: !2118, size: 128, align: 64, offset: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!2118, !2110, !259, !253}
!2128 = !{!2129, !2130, !2131}
!2129 = !DILocalVariable(name: "self", arg: 1, scope: !2109, file: !1991, line: 695, type: !2110)
!2130 = !DILocalVariable(name: "msg", arg: 2, scope: !2109, file: !1991, line: 695, type: !259)
!2131 = !DILocalVariable(name: "val", scope: !2132, file: !1991, line: 697, type: !2118, align: 8)
!2132 = distinct !DILexicalBlock(scope: !2109, file: !1991, line: 697, column: 13)
!2133 = !DILocation(line: 695, column: 19, scope: !2109)
!2134 = !DILocation(line: 695, column: 25, scope: !2109)
!2135 = !DILocation(line: 696, column: 15, scope: !2109)
!2136 = !DILocation(line: 696, column: 9, scope: !2109)
!2137 = !DILocation(line: 698, column: 21, scope: !2109)
!2138 = !DILocation(line: 697, column: 18, scope: !2109)
!2139 = !DILocation(line: 697, column: 18, scope: !2132)
!2140 = !DILocation(line: 700, column: 6, scope: !2109)
!2141 = distinct !DISubprogram(name: "unwrap<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17he128bd3c53d5c5e4E", scope: !663, file: !549, line: 1296, type: !2142, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !671, retainedNodes: !2144)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!531, !663, !253}
!2144 = !{!2145, !2146, !2148}
!2145 = !DILocalVariable(name: "self", arg: 1, scope: !2141, file: !549, line: 1296, type: !663)
!2146 = !DILocalVariable(name: "t", scope: !2147, file: !549, line: 1298, type: !531, align: 8)
!2147 = distinct !DILexicalBlock(scope: !2141, file: !549, line: 1298, column: 13)
!2148 = !DILocalVariable(name: "e", scope: !2149, file: !549, line: 1299, type: !5, align: 1)
!2149 = distinct !DILexicalBlock(scope: !2141, file: !549, line: 1299, column: 13)
!2150 = !DILocation(line: 1296, column: 19, scope: !2141)
!2151 = !DILocation(line: 1299, column: 17, scope: !2149)
!2152 = !DILocation(line: 1297, column: 15, scope: !2141)
!2153 = !DILocation(line: 1297, column: 9, scope: !2141)
!2154 = !DILocation(line: 1298, column: 16, scope: !2141)
!2155 = !DILocation(line: 1298, column: 16, scope: !2147)
!2156 = !DILocation(line: 1301, column: 6, scope: !2141)
!2157 = !DILocation(line: 1299, column: 84, scope: !2149)
!2158 = !DILocation(line: 1299, column: 23, scope: !2149)
!2159 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::finish_grow::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h01c030a1c9425b29E", scope: !663, file: !549, line: 850, type: !2160, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2185, retainedNodes: !2178)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{!2162, !663, !2175}
!2162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", scope: !116, file: !2, size: 192, align: 64, elements: !2163, identifier: "89b45a8052f9ee6e94a39e61f0fcdf87")
!2163 = !{!2164}
!2164 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !2165, templateParams: !2170, identifier: "89b45a8052f9ee6e94a39e61f0fcdf87_variant_part", discriminator: !581)
!2165 = !{!2166, !2171}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2164, file: !2, baseType: !2167, size: 192, align: 64, extraData: i64 0)
!2167 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2162, file: !2, size: 192, align: 64, elements: !2168, templateParams: !2170, identifier: "89b45a8052f9ee6e94a39e61f0fcdf87::Ok")
!2168 = !{!2169}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2167, file: !2, baseType: !531, size: 128, align: 64, offset: 64)
!2170 = !{!672, !596}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2164, file: !2, baseType: !2172, size: 192, align: 64, extraData: i64 1)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2162, file: !2, size: 192, align: 64, elements: !2173, templateParams: !2170, identifier: "89b45a8052f9ee6e94a39e61f0fcdf87::Err")
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2172, file: !2, baseType: !521, size: 128, align: 64, offset: 64)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2176, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "fc1a049dc099774bb15063c21c5c1833")
!2176 = !DINamespace(name: "finish_grow", scope: !2177)
!2177 = !DINamespace(name: "raw_vec", scope: !515)
!2178 = !{!2179, !2180, !2181, !2183}
!2179 = !DILocalVariable(name: "self", arg: 1, scope: !2159, file: !549, line: 850, type: !663)
!2180 = !DILocalVariable(name: "op", arg: 2, scope: !2159, file: !549, line: 850, type: !2175)
!2181 = !DILocalVariable(name: "t", scope: !2182, file: !549, line: 852, type: !531, align: 8)
!2182 = distinct !DILexicalBlock(scope: !2159, file: !549, line: 852, column: 13)
!2183 = !DILocalVariable(name: "e", scope: !2184, file: !549, line: 853, type: !5, align: 1)
!2184 = distinct !DILexicalBlock(scope: !2159, file: !549, line: 853, column: 13)
!2185 = !{!672, !673, !2186, !2187}
!2186 = !DITemplateTypeParameter(name: "F", type: !521)
!2187 = !DITemplateTypeParameter(name: "O", type: !2175)
!2188 = !DILocation(line: 850, column: 42, scope: !2159)
!2189 = !DILocation(line: 850, column: 48, scope: !2159)
!2190 = !DILocation(line: 853, column: 17, scope: !2184)
!2191 = !DILocation(line: 851, column: 15, scope: !2159)
!2192 = !DILocation(line: 851, column: 9, scope: !2159)
!2193 = !DILocation(line: 852, column: 16, scope: !2159)
!2194 = !DILocation(line: 852, column: 16, scope: !2182)
!2195 = !DILocation(line: 852, column: 22, scope: !2182)
!2196 = !DILocation(line: 852, column: 26, scope: !2159)
!2197 = !DILocation(line: 853, column: 27, scope: !2184)
!2198 = !DILocation(line: 853, column: 23, scope: !2184)
!2199 = !DILocation(line: 853, column: 32, scope: !2159)
!2200 = !DILocation(line: 855, column: 5, scope: !2159)
!2201 = !DILocation(line: 855, column: 6, scope: !2159)
!2202 = distinct !DISubprogram(name: "map_err<(), alloc::collections::TryReserveError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::handle_reserve::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17he453e2481c596369E", scope: !612, file: !549, line: 850, type: !2203, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2227, retainedNodes: !2220)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!2205, !612, !2218}
!2205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveErrorKind>", scope: !116, file: !2, size: 192, align: 64, elements: !2206, identifier: "c5234daba5ceedbef9db3c5bfbdbd9dc")
!2206 = !{!2207}
!2207 = !DICompositeType(tag: DW_TAG_variant_part, scope: !116, file: !2, size: 192, align: 64, elements: !2208, templateParams: !2213, identifier: "c5234daba5ceedbef9db3c5bfbdbd9dc_variant_part", discriminator: !581)
!2208 = !{!2209, !2214}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2207, file: !2, baseType: !2210, size: 192, align: 64, extraData: i64 0)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2205, file: !2, size: 192, align: 64, elements: !2211, templateParams: !2213, identifier: "c5234daba5ceedbef9db3c5bfbdbd9dc::Ok")
!2211 = !{!2212}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2210, file: !2, baseType: !541, align: 8, offset: 64)
!2213 = !{!621, !596}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2207, file: !2, baseType: !2215, size: 192, align: 64, extraData: i64 1)
!2215 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2205, file: !2, size: 192, align: 64, elements: !2216, templateParams: !2213, identifier: "c5234daba5ceedbef9db3c5bfbdbd9dc::Err")
!2216 = !{!2217}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2215, file: !2, baseType: !521, size: 128, align: 64, offset: 64)
!2218 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2219, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "4c722b013b473e7c60ec7ea8d7106754")
!2219 = !DINamespace(name: "handle_reserve", scope: !2177)
!2220 = !{!2221, !2222, !2223, !2225}
!2221 = !DILocalVariable(name: "self", arg: 1, scope: !2202, file: !549, line: 850, type: !612)
!2222 = !DILocalVariable(name: "op", arg: 2, scope: !2202, file: !549, line: 850, type: !2218)
!2223 = !DILocalVariable(name: "t", scope: !2224, file: !549, line: 852, type: !541, align: 1)
!2224 = distinct !DILexicalBlock(scope: !2202, file: !549, line: 852, column: 13)
!2225 = !DILocalVariable(name: "e", scope: !2226, file: !549, line: 853, type: !518, align: 8)
!2226 = distinct !DILexicalBlock(scope: !2202, file: !549, line: 853, column: 13)
!2227 = !{!621, !576, !2186, !2228}
!2228 = !DITemplateTypeParameter(name: "O", type: !2218)
!2229 = !DILocation(line: 850, column: 42, scope: !2202)
!2230 = !DILocation(line: 850, column: 48, scope: !2202)
!2231 = !DILocation(line: 852, column: 16, scope: !2224)
!2232 = !DILocation(line: 851, column: 15, scope: !2202)
!2233 = !DILocation(line: 851, column: 9, scope: !2202)
!2234 = !DILocation(line: 852, column: 22, scope: !2224)
!2235 = !DILocation(line: 852, column: 26, scope: !2202)
!2236 = !DILocation(line: 853, column: 17, scope: !2202)
!2237 = !DILocation(line: 853, column: 17, scope: !2226)
!2238 = !DILocation(line: 853, column: 27, scope: !2226)
!2239 = !DILocation(line: 853, column: 23, scope: !2226)
!2240 = !DILocation(line: 853, column: 32, scope: !2202)
!2241 = !DILocation(line: 855, column: 5, scope: !2202)
!2242 = !DILocation(line: 855, column: 6, scope: !2202)
!2243 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hfdf869cc5d5702ccE", scope: !733, file: !549, line: 850, type: !2244, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2256, retainedNodes: !2249)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!553, !733, !2246}
!2246 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#1}", scope: !2176, file: !2, size: 64, align: 64, elements: !2247, templateParams: !4, identifier: "ec8bac5ff84b3e83eb0365f2c01075c3")
!2247 = !{!2248}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !2246, file: !2, baseType: !1661, size: 64, align: 64)
!2249 = !{!2250, !2251, !2252, !2254}
!2250 = !DILocalVariable(name: "self", arg: 1, scope: !2243, file: !549, line: 850, type: !733)
!2251 = !DILocalVariable(name: "op", arg: 2, scope: !2243, file: !549, line: 850, type: !2246)
!2252 = !DILocalVariable(name: "t", scope: !2253, file: !549, line: 852, type: !561, align: 8)
!2253 = distinct !DILexicalBlock(scope: !2243, file: !549, line: 852, column: 13)
!2254 = !DILocalVariable(name: "e", scope: !2255, file: !549, line: 853, type: !743, align: 1)
!2255 = distinct !DILexicalBlock(scope: !2243, file: !549, line: 853, column: 13)
!2256 = !{!575, !742, !602, !2257}
!2257 = !DITemplateTypeParameter(name: "O", type: !2246)
!2258 = !DILocation(line: 850, column: 42, scope: !2243)
!2259 = !DILocation(line: 850, column: 48, scope: !2243)
!2260 = !DILocation(line: 853, column: 17, scope: !2255)
!2261 = !DILocation(line: 851, column: 15, scope: !2243)
!2262 = !DILocation(line: 851, column: 9, scope: !2243)
!2263 = !DILocation(line: 852, column: 16, scope: !2243)
!2264 = !DILocation(line: 852, column: 16, scope: !2253)
!2265 = !DILocation(line: 852, column: 22, scope: !2253)
!2266 = !DILocation(line: 852, column: 26, scope: !2243)
!2267 = !DILocation(line: 853, column: 27, scope: !2255)
!2268 = !DILocation(line: 853, column: 23, scope: !2255)
!2269 = !DILocation(line: 853, column: 32, scope: !2243)
!2270 = !DILocation(line: 855, column: 5, scope: !2243)
!2271 = !DILocation(line: 855, column: 6, scope: !2243)
!2272 = distinct !DISubprogram(name: "from<core::alloc::layout::LayoutError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17ha5a5014715615456E", scope: !2274, file: !2273, line: 547, type: !2275, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !1364, retainedNodes: !2277)
!2273 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "013dcb324a64d449769af1e8bbdf7aa9")
!2274 = !DINamespace(name: "{impl#4}", scope: !593)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{null, !5}
!2277 = !{!2278}
!2278 = !DILocalVariable(name: "t", arg: 1, scope: !2272, file: !2273, line: 547, type: !5)
!2279 = !DILocation(line: 547, column: 13, scope: !2272)
!2280 = !DILocation(line: 549, column: 6, scope: !2272)
!2281 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hd88d581771ef8982E", scope: !2274, file: !2273, line: 547, type: !2282, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2286, retainedNodes: !2284)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!518, !518}
!2284 = !{!2285}
!2285 = !DILocalVariable(name: "t", arg: 1, scope: !2281, file: !2273, line: 547, type: !518)
!2286 = !{!2287}
!2287 = !DITemplateTypeParameter(name: "T", type: !518)
!2288 = !DILocation(line: 547, column: 13, scope: !2281)
!2289 = !DILocation(line: 549, column: 6, scope: !2281)
!2290 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17he4383908b69e61b1E", scope: !2274, file: !2273, line: 547, type: !2291, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2295, retainedNodes: !2293)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{null, !743}
!2293 = !{!2294}
!2294 = !DILocalVariable(name: "t", arg: 1, scope: !2290, file: !2273, line: 547, type: !743)
!2295 = !{!2296}
!2296 = !DITemplateTypeParameter(name: "T", type: !743)
!2297 = !DILocation(line: 547, column: 13, scope: !2290)
!2298 = !DILocation(line: 549, column: 6, scope: !2290)
!2299 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h08cfa515d1644ebaE", scope: !2300, file: !2273, line: 539, type: !516, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2303, retainedNodes: !2301)
!2300 = !DINamespace(name: "{impl#3}", scope: !593)
!2301 = !{!2302}
!2302 = !DILocalVariable(name: "self", arg: 1, scope: !2299, file: !2273, line: 539, type: !521)
!2303 = !{!2304, !2305}
!2304 = !DITemplateTypeParameter(name: "T", type: !521)
!2305 = !DITemplateTypeParameter(name: "U", type: !518)
!2306 = !DILocation(line: 539, column: 13, scope: !2299)
!2307 = !DILocation(line: 540, column: 9, scope: !2299)
!2308 = !DILocation(line: 541, column: 6, scope: !2299)
!2309 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h539509a173ce81a8E", scope: !518, file: !512, line: 73, type: !2310, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2313)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!521, !2312}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveError", baseType: !518, size: 64, align: 64, dwarfAddressSpace: 0)
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "self", arg: 1, scope: !2309, file: !512, line: 73, type: !2312)
!2315 = !DILocation(line: 73, column: 17, scope: !2309)
!2316 = !DILocation(line: 74, column: 9, scope: !2309)
!2317 = !DILocation(line: 75, column: 6, scope: !2309)
!2318 = distinct !DISubprogram(name: "as_mut_ptr<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h4458ddfb2c9094c3E", scope: !2320, file: !2319, line: 1165, type: !2334, scopeLine: 1165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2337)
!2319 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/vec/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "0dcf6d541d2b937b08991a440659841e")
!2320 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<bool, alloc::alloc::Global>", scope: !2321, file: !2, size: 192, align: 64, elements: !2322, templateParams: !2331, identifier: "36a31e1b4aba8d609d6bf5e4f8d5679a")
!2321 = !DINamespace(name: "vec", scope: !515)
!2322 = !{!2323, !2333}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2320, file: !2, baseType: !2324, size: 128, align: 64)
!2324 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<bool, alloc::alloc::Global>", scope: !2177, file: !2, size: 128, align: 64, elements: !2325, templateParams: !2331, identifier: "93b33a8d7ee68422662a42289e969a91")
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2324, file: !2, baseType: !1389, size: 64, align: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2324, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2324, file: !2, baseType: !2329, align: 8)
!2329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !2330, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "4ea658df9108d173874181de92fdae66")
!2330 = !DINamespace(name: "alloc", scope: !515)
!2331 = !{!167, !2332}
!2332 = !DITemplateTypeParameter(name: "A", type: !2329)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2320, file: !2, baseType: !13, size: 64, align: 64, offset: 128)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!217, !2336}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Vec<bool, alloc::alloc::Global>", baseType: !2320, size: 64, align: 64, dwarfAddressSpace: 0)
!2337 = !{!2338, !2339}
!2338 = !DILocalVariable(name: "self", arg: 1, scope: !2318, file: !2319, line: 1165, type: !2336)
!2339 = !DILocalVariable(name: "ptr", scope: !2340, file: !2319, line: 1168, type: !217, align: 8)
!2340 = distinct !DILexicalBlock(scope: !2318, file: !2319, line: 1168, column: 9)
!2341 = !DILocation(line: 1165, column: 23, scope: !2318)
!2342 = !DILocation(line: 1168, column: 19, scope: !2318)
!2343 = !DILocation(line: 1168, column: 13, scope: !2340)
!2344 = !DILocation(line: 1170, column: 21, scope: !2340)
!2345 = !DILocation(line: 1170, column: 20, scope: !2340)
!2346 = !DILocation(line: 1170, column: 13, scope: !2340)
!2347 = !DILocation(line: 1173, column: 6, scope: !2318)
!2348 = distinct !DISubprogram(name: "len<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17hf675dc307bacf4f2E", scope: !2320, file: !2319, line: 1831, type: !2349, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2352)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!13, !2351}
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Vec<bool, alloc::alloc::Global>", baseType: !2320, size: 64, align: 64, dwarfAddressSpace: 0)
!2352 = !{!2353}
!2353 = !DILocalVariable(name: "self", arg: 1, scope: !2348, file: !2319, line: 1831, type: !2351)
!2354 = !DILocation(line: 1831, column: 16, scope: !2348)
!2355 = !DILocation(line: 1832, column: 9, scope: !2348)
!2356 = !DILocation(line: 1833, column: 6, scope: !2348)
!2357 = distinct !DISubprogram(name: "pop<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h397e98b92c6900d5E", scope: !2320, file: !2319, line: 1695, type: !2358, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2371)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!2360, !2336}
!2360 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<bool>", scope: !304, file: !2, size: 8, align: 8, elements: !2361, identifier: "b1b4e129eab5b24c5a8cd79cc855c534")
!2361 = !{!2362}
!2362 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 8, align: 8, elements: !2363, templateParams: !166, identifier: "b1b4e129eab5b24c5a8cd79cc855c534_variant_part", discriminator: !2370)
!2363 = !{!2364, !2366}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2362, file: !2, baseType: !2365, size: 8, align: 8, extraData: i64 2)
!2365 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2360, file: !2, size: 8, align: 8, elements: !4, templateParams: !166, identifier: "b1b4e129eab5b24c5a8cd79cc855c534::None")
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2362, file: !2, baseType: !2367, size: 8, align: 8)
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2360, file: !2, size: 8, align: 8, elements: !2368, templateParams: !166, identifier: "b1b4e129eab5b24c5a8cd79cc855c534::Some")
!2368 = !{!2369}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2367, file: !2, baseType: !40, size: 8, align: 8)
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !304, file: !2, baseType: !18, size: 8, align: 8, flags: DIFlagArtificial)
!2371 = !{!2372}
!2372 = !DILocalVariable(name: "self", arg: 1, scope: !2357, file: !2319, line: 1695, type: !2336)
!2373 = !DILocation(line: 1695, column: 16, scope: !2357)
!2374 = !DILocation(line: 1696, column: 12, scope: !2357)
!2375 = !DILocation(line: 1697, column: 13, scope: !2357)
!2376 = !DILocation(line: 1696, column: 9, scope: !2357)
!2377 = !DILocation(line: 1700, column: 17, scope: !2357)
!2378 = !DILocation(line: 1701, column: 32, scope: !2357)
!2379 = !DILocation(line: 1701, column: 50, scope: !2357)
!2380 = !DILocation(line: 511, column: 29, scope: !172, inlinedAt: !2381)
!2381 = distinct !DILocation(line: 1701, column: 32, scope: !2357)
!2382 = !DILocation(line: 511, column: 35, scope: !172, inlinedAt: !2381)
!2383 = !DILocation(line: 230, column: 32, scope: !185, inlinedAt: !2384)
!2384 = distinct !DILocation(line: 516, column: 18, scope: !172, inlinedAt: !2381)
!2385 = !DILocation(line: 230, column: 38, scope: !185, inlinedAt: !2384)
!2386 = !DILocation(line: 235, column: 18, scope: !185, inlinedAt: !2384)
!2387 = !DILocation(line: 1701, column: 22, scope: !2357)
!2388 = !DILocation(line: 1701, column: 17, scope: !2357)
!2389 = !DILocation(line: 1704, column: 6, scope: !2357)
!2390 = !{i8 0, i8 3}
!2391 = distinct !DISubprogram(name: "push<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6fb46a7a3785d933E", scope: !2320, file: !2319, line: 1670, type: !2392, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2394)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2336, !40}
!2394 = !{!2395, !2396, !2397}
!2395 = !DILocalVariable(name: "self", arg: 1, scope: !2391, file: !2319, line: 1670, type: !2336)
!2396 = !DILocalVariable(name: "value", arg: 2, scope: !2391, file: !2319, line: 1670, type: !40)
!2397 = !DILocalVariable(name: "end", scope: !2398, file: !2319, line: 1677, type: !217, align: 8)
!2398 = distinct !DILexicalBlock(scope: !2391, file: !2319, line: 1677, column: 13)
!2399 = !DILocation(line: 1670, column: 17, scope: !2391)
!2400 = !DILocation(line: 1670, column: 28, scope: !2391)
!2401 = !DILocation(line: 1673, column: 12, scope: !2391)
!2402 = !DILocation(line: 1673, column: 24, scope: !2391)
!2403 = !DILocalVariable(name: "self", arg: 1, scope: !2404, file: !2405, line: 247, type: !2408)
!2404 = distinct !DISubprogram(name: "capacity<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h282c42c4fdcc2392E", scope: !2324, file: !2405, line: 247, type: !2406, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2409)
!2405 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/raw_vec.rs", directory: "", checksumkind: CSK_MD5, checksum: "af779b5d8a9b5b87b5f2ee679bd752ec")
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!13, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&RawVec<bool, alloc::alloc::Global>", baseType: !2324, size: 64, align: 64, dwarfAddressSpace: 0)
!2409 = !{!2403}
!2410 = !DILocation(line: 247, column: 21, scope: !2404, inlinedAt: !2411)
!2411 = distinct !DILocation(line: 1673, column: 24, scope: !2391)
!2412 = !DILocation(line: 248, column: 59, scope: !2404, inlinedAt: !2411)
!2413 = !DILocation(line: 249, column: 6, scope: !2404, inlinedAt: !2411)
!2414 = !DILocation(line: 1677, column: 23, scope: !2391)
!2415 = !DILocation(line: 1674, column: 13, scope: !2391)
!2416 = !DILocation(line: 1673, column: 9, scope: !2391)
!2417 = !DILocation(line: 1677, column: 45, scope: !2391)
!2418 = !DILocation(line: 618, column: 29, scope: !224, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 1677, column: 23, scope: !2391)
!2420 = !DILocation(line: 618, column: 35, scope: !224, inlinedAt: !2419)
!2421 = !DILocation(line: 235, column: 32, scope: !234, inlinedAt: !2422)
!2422 = distinct !DILocation(line: 623, column: 18, scope: !224, inlinedAt: !2419)
!2423 = !DILocation(line: 235, column: 38, scope: !234, inlinedAt: !2422)
!2424 = !DILocation(line: 242, column: 18, scope: !234, inlinedAt: !2422)
!2425 = !DILocation(line: 1677, column: 17, scope: !2398)
!2426 = !DILocation(line: 1678, column: 13, scope: !2398)
!2427 = !DILocation(line: 1679, column: 13, scope: !2398)
!2428 = !DILocation(line: 1681, column: 6, scope: !2391)
!2429 = distinct !DISubprogram(name: "as_ptr<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17hdcc31aa30150e3e8E", scope: !2320, file: !2319, line: 1129, type: !2430, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2432)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!153, !2351}
!2432 = !{!2433, !2434}
!2433 = !DILocalVariable(name: "self", arg: 1, scope: !2429, file: !2319, line: 1129, type: !2351)
!2434 = !DILocalVariable(name: "ptr", scope: !2435, file: !2319, line: 1132, type: !217, align: 8)
!2435 = distinct !DILexicalBlock(scope: !2429, file: !2319, line: 1132, column: 9)
!2436 = !DILocation(line: 1129, column: 19, scope: !2429)
!2437 = !DILocation(line: 1132, column: 19, scope: !2429)
!2438 = !DILocation(line: 1132, column: 13, scope: !2435)
!2439 = !DILocation(line: 1134, column: 21, scope: !2435)
!2440 = !DILocation(line: 1134, column: 20, scope: !2435)
!2441 = !DILocation(line: 1134, column: 13, scope: !2435)
!2442 = !DILocation(line: 1137, column: 6, scope: !2429)
!2443 = distinct !DISubprogram(name: "reserve<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1241b9d1ce11e0efE", scope: !2320, file: !2319, line: 804, type: !2444, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2446)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !2336, !13}
!2446 = !{!2447, !2448}
!2447 = !DILocalVariable(name: "self", arg: 1, scope: !2443, file: !2319, line: 804, type: !2336)
!2448 = !DILocalVariable(name: "additional", arg: 2, scope: !2443, file: !2319, line: 804, type: !13)
!2449 = !DILocation(line: 804, column: 20, scope: !2443)
!2450 = !DILocation(line: 804, column: 31, scope: !2443)
!2451 = !DILocation(line: 805, column: 9, scope: !2443)
!2452 = !DILocation(line: 805, column: 26, scope: !2443)
!2453 = !DILocation(line: 806, column: 6, scope: !2443)
!2454 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17h36cc8ceac3dc486fE", scope: !2330, file: !2455, line: 154, type: !2456, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2458)
!2455 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/alloc/src/alloc.rs", directory: "", checksumkind: CSK_MD5, checksum: "0a7e892cc60caf2edd41bc1c0d3c42e0")
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!813, !531}
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "layout", arg: 1, scope: !2454, file: !2455, line: 154, type: !531)
!2460 = !DILocation(line: 154, column: 28, scope: !2454)
!2461 = !DILocation(line: 155, column: 34, scope: !2454)
!2462 = !DILocation(line: 155, column: 49, scope: !2454)
!2463 = !DILocation(line: 155, column: 14, scope: !2454)
!2464 = !DILocation(line: 156, column: 2, scope: !2454)
!2465 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17hc99aa5946a304424E", scope: !2330, file: !2455, line: 85, type: !2456, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2466)
!2466 = !{!2467}
!2467 = !DILocalVariable(name: "layout", arg: 1, scope: !2465, file: !2455, line: 85, type: !531)
!2468 = !DILocation(line: 85, column: 21, scope: !2465)
!2469 = !DILocation(line: 86, column: 27, scope: !2465)
!2470 = !DILocation(line: 86, column: 42, scope: !2465)
!2471 = !DILocation(line: 86, column: 14, scope: !2465)
!2472 = !DILocation(line: 87, column: 2, scope: !2465)
!2473 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h3cd61ca2b5ad4fc1E", scope: !2329, file: !2455, line: 161, type: !2474, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2477)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!733, !2476, !531, !40}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Global", baseType: !2329, size: 64, align: 64, dwarfAddressSpace: 0)
!2477 = !{!2478, !2479, !2480, !2481, !2483, !2485, !2487, !2489}
!2478 = !DILocalVariable(name: "self", arg: 1, scope: !2473, file: !2455, line: 161, type: !2476)
!2479 = !DILocalVariable(name: "layout", arg: 2, scope: !2473, file: !2455, line: 161, type: !531)
!2480 = !DILocalVariable(name: "zeroed", arg: 3, scope: !2473, file: !2455, line: 161, type: !40)
!2481 = !DILocalVariable(name: "size", scope: !2482, file: !2455, line: 165, type: !13, align: 8)
!2482 = distinct !DILexicalBlock(scope: !2473, file: !2455, line: 165, column: 13)
!2483 = !DILocalVariable(name: "raw_ptr", scope: !2484, file: !2455, line: 166, type: !813, align: 8)
!2484 = distinct !DILexicalBlock(scope: !2482, file: !2455, line: 166, column: 17)
!2485 = !DILocalVariable(name: "ptr", scope: !2486, file: !2455, line: 167, type: !1496, align: 8)
!2486 = distinct !DILexicalBlock(scope: !2484, file: !2455, line: 167, column: 17)
!2487 = !DILocalVariable(name: "residual", scope: !2488, file: !2455, line: 167, type: !748, align: 1)
!2488 = distinct !DILexicalBlock(scope: !2484, file: !2455, line: 167, column: 66)
!2489 = !DILocalVariable(name: "val", scope: !2490, file: !2455, line: 167, type: !1496, align: 8)
!2490 = distinct !DILexicalBlock(scope: !2484, file: !2455, line: 167, column: 27)
!2491 = !DILocation(line: 161, column: 19, scope: !2473)
!2492 = !DILocation(line: 161, column: 26, scope: !2473)
!2493 = !DILocation(line: 161, column: 42, scope: !2473)
!2494 = !DILocation(line: 166, column: 21, scope: !2484)
!2495 = !DILocation(line: 167, column: 66, scope: !2488)
!2496 = !DILocation(line: 162, column: 15, scope: !2473)
!2497 = !DILocation(line: 162, column: 9, scope: !2473)
!2498 = !DILocation(line: 163, column: 51, scope: !2473)
!2499 = !DILocation(line: 165, column: 13, scope: !2473)
!2500 = !DILocation(line: 165, column: 13, scope: !2482)
!2501 = !DILocation(line: 166, column: 34, scope: !2482)
!2502 = !DILocation(line: 166, column: 79, scope: !2482)
!2503 = !DILocation(line: 166, column: 73, scope: !2482)
!2504 = !DILocation(line: 166, column: 56, scope: !2482)
!2505 = !DILocation(line: 166, column: 43, scope: !2482)
!2506 = !DILocation(line: 166, column: 31, scope: !2482)
!2507 = !DILocation(line: 167, column: 40, scope: !2484)
!2508 = !DILocation(line: 167, column: 27, scope: !2484)
!2509 = !DILocation(line: 167, column: 27, scope: !2490)
!2510 = !DILocation(line: 167, column: 21, scope: !2486)
!2511 = !DILocation(line: 168, column: 20, scope: !2486)
!2512 = !DILocation(line: 167, column: 27, scope: !2488)
!2513 = !DILocation(line: 171, column: 6, scope: !2473)
!2514 = !DILocation(line: 168, column: 17, scope: !2486)
!2515 = !DILocation(line: 169, column: 13, scope: !2473)
!2516 = !DILocation(line: 163, column: 21, scope: !2473)
!2517 = !DILocation(line: 163, column: 18, scope: !2473)
!2518 = !DILocation(line: 163, column: 72, scope: !2473)
!2519 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17hda0541a69333da36E", scope: !2329, file: !2455, line: 175, type: !2520, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2522)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!733, !2476, !1496, !531, !531, !40}
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528, !2530, !2531, !2533, !2535, !2537, !2539, !2541, !2543, !2545, !2547}
!2523 = !DILocalVariable(name: "self", arg: 1, scope: !2519, file: !2455, line: 176, type: !2476)
!2524 = !DILocalVariable(name: "ptr", arg: 2, scope: !2519, file: !2455, line: 177, type: !1496)
!2525 = !DILocalVariable(name: "old_layout", arg: 3, scope: !2519, file: !2455, line: 178, type: !531)
!2526 = !DILocalVariable(name: "new_layout", arg: 4, scope: !2519, file: !2455, line: 179, type: !531)
!2527 = !DILocalVariable(name: "zeroed", arg: 5, scope: !2519, file: !2455, line: 180, type: !40)
!2528 = !DILocalVariable(name: "old_size", scope: !2529, file: !2455, line: 192, type: !13, align: 8)
!2529 = distinct !DILexicalBlock(scope: !2519, file: !2455, line: 192, column: 13)
!2530 = !DILocalVariable(name: "old_size", scope: !2529, file: !2455, line: 192, type: !12, align: 8)
!2531 = !DILocalVariable(name: "new_size", scope: !2532, file: !2455, line: 193, type: !13, align: 8)
!2532 = distinct !DILexicalBlock(scope: !2529, file: !2455, line: 193, column: 17)
!2533 = !DILocalVariable(name: "raw_ptr", scope: !2534, file: !2455, line: 198, type: !813, align: 8)
!2534 = distinct !DILexicalBlock(scope: !2532, file: !2455, line: 198, column: 17)
!2535 = !DILocalVariable(name: "ptr", scope: !2536, file: !2455, line: 199, type: !1496, align: 8)
!2536 = distinct !DILexicalBlock(scope: !2534, file: !2455, line: 199, column: 17)
!2537 = !DILocalVariable(name: "residual", scope: !2538, file: !2455, line: 199, type: !748, align: 1)
!2538 = distinct !DILexicalBlock(scope: !2534, file: !2455, line: 199, column: 66)
!2539 = !DILocalVariable(name: "val", scope: !2540, file: !2455, line: 199, type: !1496, align: 8)
!2540 = distinct !DILexicalBlock(scope: !2534, file: !2455, line: 199, column: 27)
!2541 = !DILocalVariable(name: "old_size", scope: !2542, file: !2455, line: 211, type: !13, align: 8)
!2542 = distinct !DILexicalBlock(scope: !2519, file: !2455, line: 211, column: 13)
!2543 = !DILocalVariable(name: "new_ptr", scope: !2544, file: !2455, line: 212, type: !561, align: 8)
!2544 = distinct !DILexicalBlock(scope: !2542, file: !2455, line: 212, column: 17)
!2545 = !DILocalVariable(name: "residual", scope: !2546, file: !2455, line: 212, type: !748, align: 1)
!2546 = distinct !DILexicalBlock(scope: !2542, file: !2455, line: 212, column: 66)
!2547 = !DILocalVariable(name: "val", scope: !2548, file: !2455, line: 212, type: !561, align: 8)
!2548 = distinct !DILexicalBlock(scope: !2542, file: !2455, line: 212, column: 31)
!2549 = !DILocation(line: 176, column: 9, scope: !2519)
!2550 = !DILocation(line: 177, column: 9, scope: !2519)
!2551 = !DILocation(line: 178, column: 9, scope: !2519)
!2552 = !DILocation(line: 179, column: 9, scope: !2519)
!2553 = !DILocation(line: 180, column: 9, scope: !2519)
!2554 = !DILocation(line: 199, column: 66, scope: !2538)
!2555 = !DILocation(line: 212, column: 66, scope: !2546)
!2556 = !DILocation(line: 187, column: 15, scope: !2519)
!2557 = !DILocation(line: 187, column: 9, scope: !2519)
!2558 = !DILocation(line: 188, column: 34, scope: !2519)
!2559 = !DILocation(line: 188, column: 18, scope: !2519)
!2560 = !DILocation(line: 192, column: 13, scope: !2519)
!2561 = !DILocation(line: 192, column: 13, scope: !2529)
!2562 = !DILocation(line: 192, column: 25, scope: !2519)
!2563 = !DILocation(line: 192, column: 47, scope: !2519)
!2564 = !DILocation(line: 211, column: 13, scope: !2519)
!2565 = !DILocation(line: 211, column: 13, scope: !2542)
!2566 = !DILocation(line: 212, column: 47, scope: !2542)
!2567 = !DILocation(line: 212, column: 31, scope: !2542)
!2568 = !DILocation(line: 193, column: 32, scope: !2529)
!2569 = !DILocation(line: 193, column: 21, scope: !2532)
!2570 = !DILocation(line: 196, column: 48, scope: !2532)
!2571 = !DILocation(line: 196, column: 36, scope: !2532)
!2572 = !DILocation(line: 196, column: 17, scope: !2532)
!2573 = !DILocation(line: 198, column: 39, scope: !2532)
!2574 = !DILocation(line: 198, column: 53, scope: !2532)
!2575 = !DILocation(line: 198, column: 31, scope: !2532)
!2576 = !DILocation(line: 198, column: 21, scope: !2534)
!2577 = !DILocation(line: 199, column: 27, scope: !2534)
!2578 = !DILocation(line: 199, column: 27, scope: !2540)
!2579 = !DILocation(line: 199, column: 21, scope: !2536)
!2580 = !DILocation(line: 200, column: 20, scope: !2536)
!2581 = !DILocation(line: 199, column: 27, scope: !2538)
!2582 = !DILocation(line: 1, column: 1, scope: !2583)
!2583 = !DILexicalBlockFile(scope: !2519, file: !1709, discriminator: 0)
!2584 = !DILocation(line: 218, column: 6, scope: !2519)
!2585 = !DILocation(line: 203, column: 20, scope: !2536)
!2586 = !DILocalVariable(name: "self", arg: 1, scope: !2587, file: !212, line: 618, type: !813)
!2587 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hed0d8e435800aae4E", scope: !225, file: !212, line: 618, type: !2588, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !2590)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!813, !813, !13}
!2590 = !{!2586, !2591}
!2591 = !DILocalVariable(name: "count", arg: 2, scope: !2587, file: !212, line: 618, type: !13)
!2592 = !DILocation(line: 618, column: 29, scope: !2587, inlinedAt: !2593)
!2593 = distinct !DILocation(line: 201, column: 21, scope: !2536)
!2594 = !DILocation(line: 618, column: 35, scope: !2587, inlinedAt: !2593)
!2595 = !DILocalVariable(name: "self", arg: 1, scope: !2596, file: !212, line: 235, type: !813)
!2596 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hb6d357fdda7443b0E", scope: !225, file: !212, line: 235, type: !2597, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !2599)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!813, !813, !188}
!2599 = !{!2595, !2600}
!2600 = !DILocalVariable(name: "count", arg: 2, scope: !2596, file: !212, line: 235, type: !188)
!2601 = !DILocation(line: 235, column: 32, scope: !2596, inlinedAt: !2602)
!2602 = distinct !DILocation(line: 623, column: 18, scope: !2587, inlinedAt: !2593)
!2603 = !DILocation(line: 235, column: 38, scope: !2596, inlinedAt: !2602)
!2604 = !DILocation(line: 242, column: 18, scope: !2596, inlinedAt: !2602)
!2605 = !DILocation(line: 201, column: 21, scope: !2536)
!2606 = !DILocation(line: 201, column: 58, scope: !2536)
!2607 = !DILocalVariable(name: "self", arg: 1, scope: !2608, file: !212, line: 1024, type: !813)
!2608 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17hbc3a44498f8a01c9E", scope: !225, file: !212, line: 1024, type: !883, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !889, retainedNodes: !2609)
!2609 = !{!2607, !2610, !2611}
!2610 = !DILocalVariable(name: "val", arg: 2, scope: !2608, file: !212, line: 1024, type: !18)
!2611 = !DILocalVariable(name: "count", arg: 3, scope: !2608, file: !212, line: 1024, type: !13)
!2612 = !DILocation(line: 1024, column: 31, scope: !2608, inlinedAt: !2613)
!2613 = distinct !DILocation(line: 201, column: 21, scope: !2536)
!2614 = !DILocation(line: 1024, column: 37, scope: !2608, inlinedAt: !2613)
!2615 = !DILocation(line: 1024, column: 46, scope: !2608, inlinedAt: !2613)
!2616 = !DILocation(line: 1029, column: 18, scope: !2608, inlinedAt: !2613)
!2617 = !DILocation(line: 200, column: 17, scope: !2536)
!2618 = !DILocation(line: 203, column: 17, scope: !2536)
!2619 = !DILocation(line: 204, column: 13, scope: !2519)
!2620 = !DILocation(line: 212, column: 31, scope: !2548)
!2621 = !DILocation(line: 212, column: 21, scope: !2544)
!2622 = !DILocation(line: 213, column: 42, scope: !2544)
!2623 = !DILocation(line: 212, column: 31, scope: !2546)
!2624 = !DILocation(line: 213, column: 56, scope: !2544)
!2625 = !DILocation(line: 213, column: 17, scope: !2544)
!2626 = !DILocation(line: 214, column: 38, scope: !2544)
!2627 = !DILocation(line: 214, column: 17, scope: !2544)
!2628 = !DILocation(line: 215, column: 17, scope: !2544)
!2629 = !DILocation(line: 216, column: 13, scope: !2519)
!2630 = !DILocation(line: 188, column: 52, scope: !2519)
!2631 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17heb0da81b37f5244dE", scope: !2330, file: !2455, line: 103, type: !2632, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2634)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{null, !813, !531}
!2634 = !{!2635, !2636}
!2635 = !DILocalVariable(name: "ptr", arg: 1, scope: !2631, file: !2455, line: 103, type: !813)
!2636 = !DILocalVariable(name: "layout", arg: 2, scope: !2631, file: !2455, line: 103, type: !531)
!2637 = !DILocation(line: 103, column: 23, scope: !2631)
!2638 = !DILocation(line: 103, column: 37, scope: !2631)
!2639 = !DILocation(line: 104, column: 34, scope: !2631)
!2640 = !DILocation(line: 104, column: 49, scope: !2631)
!2641 = !DILocation(line: 104, column: 14, scope: !2631)
!2642 = !DILocation(line: 105, column: 2, scope: !2631)
!2643 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17hbab7a46186789c8aE", scope: !2330, file: !2455, line: 121, type: !2644, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2646)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!813, !813, !531, !13}
!2646 = !{!2647, !2648, !2649}
!2647 = !DILocalVariable(name: "ptr", arg: 1, scope: !2643, file: !2455, line: 121, type: !813)
!2648 = !DILocalVariable(name: "layout", arg: 2, scope: !2643, file: !2455, line: 121, type: !531)
!2649 = !DILocalVariable(name: "new_size", arg: 3, scope: !2643, file: !2455, line: 121, type: !13)
!2650 = !DILocation(line: 121, column: 23, scope: !2643)
!2651 = !DILocation(line: 121, column: 37, scope: !2643)
!2652 = !DILocation(line: 121, column: 53, scope: !2643)
!2653 = !DILocation(line: 122, column: 34, scope: !2643)
!2654 = !DILocation(line: 122, column: 49, scope: !2643)
!2655 = !DILocation(line: 122, column: 14, scope: !2643)
!2656 = !DILocation(line: 123, column: 2, scope: !2643)
!2657 = distinct !DISubprogram(name: "alloc_guard", linkageName: "_ZN5alloc7raw_vec11alloc_guard17h81c978058e88b617E", scope: !2177, file: !2405, line: 546, type: !2658, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2660)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!612, !13}
!2660 = !{!2661}
!2661 = !DILocalVariable(name: "alloc_size", arg: 1, scope: !2657, file: !2405, line: 546, type: !13)
!2662 = !DILocation(line: 546, column: 16, scope: !2657)
!2663 = !DILocation(line: 547, column: 8, scope: !2657)
!2664 = !DILocation(line: 550, column: 9, scope: !2657)
!2665 = !DILocation(line: 547, column: 5, scope: !2657)
!2666 = !DILocation(line: 548, column: 13, scope: !2657)
!2667 = !DILocation(line: 548, column: 9, scope: !2657)
!2668 = !DILocation(line: 552, column: 2, scope: !2657)
!2669 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow17hbbb78aa164b6c003E", scope: !2177, file: !2405, line: 489, type: !2670, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2715, retainedNodes: !2689)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!553, !663, !2672, !2688}
!2672 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !304, file: !2, size: 192, align: 64, elements: !2673, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9")
!2673 = !{!2674}
!2674 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, size: 192, align: 64, elements: !2675, templateParams: !2678, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9_variant_part", discriminator: !316)
!2675 = !{!2676, !2684}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2674, file: !2, baseType: !2677, size: 192, align: 64, extraData: i64 0)
!2677 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2672, file: !2, size: 192, align: 64, elements: !4, templateParams: !2678, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::None")
!2678 = !{!2679}
!2679 = !DITemplateTypeParameter(name: "T", type: !2680)
!2680 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 192, align: 64, elements: !2681, templateParams: !4, identifier: "3fe1073d7ca6ffbfe47dfea13e45e84e")
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2680, file: !2, baseType: !1496, size: 64, align: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2680, file: !2, baseType: !531, size: 128, align: 64, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2674, file: !2, baseType: !2685, size: 192, align: 64)
!2685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2672, file: !2, size: 192, align: 64, elements: !2686, templateParams: !2678, identifier: "138bd1abb75886e1ac4ec14ab3bb94c9::Some")
!2686 = !{!2687}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2685, file: !2, baseType: !2680, size: 192, align: 64)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Global", baseType: !2329, size: 64, align: 64, dwarfAddressSpace: 0)
!2689 = !{!2690, !2691, !2692, !2693, !2695, !2697, !2699, !2701, !2703, !2705, !2707, !2708, !2711, !2712}
!2690 = !DILocalVariable(name: "new_layout", arg: 1, scope: !2669, file: !2405, line: 490, type: !663)
!2691 = !DILocalVariable(name: "current_memory", arg: 2, scope: !2669, file: !2405, line: 491, type: !2672)
!2692 = !DILocalVariable(name: "alloc", arg: 3, scope: !2669, file: !2405, line: 492, type: !2688)
!2693 = !DILocalVariable(name: "new_layout", scope: !2694, file: !2405, line: 498, type: !531, align: 8)
!2694 = distinct !DILexicalBlock(scope: !2669, file: !2405, line: 498, column: 5)
!2695 = !DILocalVariable(name: "residual", scope: !2696, file: !2405, line: 498, type: !582, align: 8)
!2696 = distinct !DILexicalBlock(scope: !2669, file: !2405, line: 498, column: 62)
!2697 = !DILocalVariable(name: "val", scope: !2698, file: !2405, line: 498, type: !531, align: 8)
!2698 = distinct !DILexicalBlock(scope: !2669, file: !2405, line: 498, column: 22)
!2699 = !DILocalVariable(name: "residual", scope: !2700, file: !2405, line: 500, type: !626, align: 8)
!2700 = distinct !DILexicalBlock(scope: !2694, file: !2405, line: 500, column: 35)
!2701 = !DILocalVariable(name: "val", scope: !2702, file: !2405, line: 500, type: !541, align: 1)
!2702 = distinct !DILexicalBlock(scope: !2694, file: !2405, line: 500, column: 5)
!2703 = !DILocalVariable(name: "memory", scope: !2704, file: !2405, line: 502, type: !733, align: 8)
!2704 = distinct !DILexicalBlock(scope: !2694, file: !2405, line: 502, column: 5)
!2705 = !DILocalVariable(name: "ptr", scope: !2706, file: !2405, line: 502, type: !1496, align: 8)
!2706 = distinct !DILexicalBlock(scope: !2694, file: !2405, line: 502, column: 25)
!2707 = !DILocalVariable(name: "old_layout", scope: !2706, file: !2405, line: 502, type: !531, align: 8)
!2708 = !DILocalVariable(name: "left_val", scope: !2709, file: !2405, line: 503, type: !12, align: 8)
!2709 = !DILexicalBlockFile(scope: !2710, file: !2405, discriminator: 0)
!2710 = distinct !DILexicalBlock(scope: !2694, file: !1812, line: 38, column: 13)
!2711 = !DILocalVariable(name: "right_val", scope: !2709, file: !2405, line: 503, type: !12, align: 8)
!2712 = !DILocalVariable(name: "kind", scope: !2713, file: !2405, line: 503, type: !136, align: 1)
!2713 = !DILexicalBlockFile(scope: !2714, file: !2405, discriminator: 0)
!2714 = distinct !DILexicalBlock(scope: !2710, file: !1812, line: 40, column: 21)
!2715 = !{!2332}
!2716 = !DILocation(line: 490, column: 5, scope: !2669)
!2717 = !DILocation(line: 491, column: 5, scope: !2669)
!2718 = !DILocation(line: 492, column: 5, scope: !2669)
!2719 = !DILocation(line: 498, column: 9, scope: !2694)
!2720 = !DILocation(line: 500, column: 5, scope: !2702)
!2721 = !DILocation(line: 502, column: 9, scope: !2704)
!2722 = !DILocation(line: 502, column: 36, scope: !2706)
!2723 = !DILocation(line: 498, column: 22, scope: !2669)
!2724 = !DILocation(line: 498, column: 22, scope: !2698)
!2725 = !DILocation(line: 500, column: 17, scope: !2694)
!2726 = !DILocation(line: 498, column: 62, scope: !2669)
!2727 = !DILocation(line: 498, column: 62, scope: !2696)
!2728 = !DILocation(line: 498, column: 22, scope: !2696)
!2729 = !DILocation(line: 1, column: 1, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2669, file: !1709, discriminator: 0)
!2731 = !DILocation(line: 514, column: 2, scope: !2669)
!2732 = !DILocation(line: 500, column: 5, scope: !2694)
!2733 = !DILocation(line: 502, column: 25, scope: !2694)
!2734 = !DILocation(line: 500, column: 35, scope: !2694)
!2735 = !DILocation(line: 500, column: 35, scope: !2700)
!2736 = !DILocation(line: 500, column: 5, scope: !2700)
!2737 = !DILocation(line: 1, column: 1, scope: !2738)
!2738 = !DILexicalBlockFile(scope: !2694, file: !1709, discriminator: 0)
!2739 = !DILocation(line: 502, column: 31, scope: !2694)
!2740 = !DILocation(line: 502, column: 31, scope: !2706)
!2741 = !DILocation(line: 502, column: 36, scope: !2694)
!2742 = !DILocation(line: 506, column: 32, scope: !2694)
!2743 = !DILocation(line: 510, column: 24, scope: !2694)
!2744 = !DILocation(line: 510, column: 9, scope: !2694)
!2745 = !DILocation(line: 502, column: 18, scope: !2694)
!2746 = !DILocation(line: 513, column: 5, scope: !2704)
!2747 = !DILocation(line: 513, column: 20, scope: !2704)
!2748 = !DILocation(line: 506, column: 54, scope: !2694)
!2749 = !DILocation(line: 506, column: 13, scope: !2694)
!2750 = !DILocation(line: 507, column: 29, scope: !2694)
!2751 = !DILocation(line: 507, column: 41, scope: !2694)
!2752 = !DILocation(line: 507, column: 13, scope: !2694)
!2753 = distinct !DISubprogram(name: "{closure#1}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc1e1a461dffa210aE", scope: !2176, file: !2405, line: 513, type: !2754, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2715, retainedNodes: !2756)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!518, !2246, !743}
!2756 = !{!2757, !2758}
!2757 = !DILocalVariable(name: "new_layout", scope: !2753, file: !2405, line: 498, type: !531, align: 8)
!2758 = !DILocalVariable(arg: 2, scope: !2753, file: !2405, line: 513, type: !743)
!2759 = !DILocation(line: 498, column: 9, scope: !2753)
!2760 = !DILocation(line: 513, column: 21, scope: !2753)
!2761 = !DILocation(line: 513, column: 45, scope: !2753)
!2762 = !DILocation(line: 513, column: 24, scope: !2753)
!2763 = !DILocation(line: 513, column: 84, scope: !2753)
!2764 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hf908f8c73d0bd43fE", scope: !2176, file: !2405, line: 498, type: !2765, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2715, retainedNodes: !2767)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!521, !2175, !5}
!2767 = !{!2768, !2769}
!2768 = !DILocalVariable(arg: 1, scope: !2764, file: !2405, line: 498, type: !2175)
!2769 = !DILocalVariable(arg: 2, scope: !2764, file: !2405, line: 498, type: !5)
!2770 = !DILocation(line: 498, column: 41, scope: !2764)
!2771 = !DILocation(line: 498, column: 42, scope: !2764)
!2772 = !DILocation(line: 498, column: 45, scope: !2764)
!2773 = !DILocation(line: 498, column: 61, scope: !2764)
!2774 = distinct !DISubprogram(name: "handle_reserve", linkageName: "_ZN5alloc7raw_vec14handle_reserve17hc650e120b1fbb9b7E", scope: !2177, file: !2405, line: 528, type: !2775, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2777)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !612}
!2777 = !{!2778, !2779}
!2778 = !DILocalVariable(name: "result", arg: 1, scope: !2774, file: !2405, line: 528, type: !612)
!2779 = !DILocalVariable(name: "layout", scope: !2780, file: !2405, line: 531, type: !531, align: 8)
!2780 = distinct !DILexicalBlock(scope: !2774, file: !2405, line: 531, column: 9)
!2781 = !DILocation(line: 528, column: 19, scope: !2774)
!2782 = !DILocation(line: 529, column: 11, scope: !2774)
!2783 = !DILocation(line: 529, column: 5, scope: !2774)
!2784 = !DILocation(line: 534, column: 2, scope: !2774)
!2785 = !DILocation(line: 530, column: 34, scope: !2774)
!2786 = !DILocation(line: 531, column: 26, scope: !2774)
!2787 = !DILocation(line: 531, column: 26, scope: !2780)
!2788 = !DILocation(line: 531, column: 43, scope: !2780)
!2789 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17h9b49ae39cdd766b7E", scope: !2219, file: !2405, line: 529, type: !2790, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2792)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!521, !2218, !518}
!2792 = !{!2793, !2794}
!2793 = !DILocalVariable(name: "e", arg: 2, scope: !2789, file: !2405, line: 529, type: !518)
!2794 = !DILocalVariable(arg: 1, scope: !2789, file: !2405, line: 529, type: !2218)
!2795 = !DILocation(line: 529, column: 26, scope: !2789)
!2796 = !DILocation(line: 529, column: 27, scope: !2789)
!2797 = !DILocation(line: 529, column: 30, scope: !2789)
!2798 = !DILocation(line: 529, column: 38, scope: !2789)
!2799 = distinct !DISubprogram(name: "needs_to_grow<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13needs_to_grow17had2d43f97c011768E", scope: !2324, file: !2405, line: 401, type: !2800, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2802)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!40, !2408, !13, !13}
!2802 = !{!2803, !2804, !2805}
!2803 = !DILocalVariable(name: "self", arg: 1, scope: !2799, file: !2405, line: 401, type: !2408)
!2804 = !DILocalVariable(name: "len", arg: 2, scope: !2799, file: !2405, line: 401, type: !13)
!2805 = !DILocalVariable(name: "additional", arg: 3, scope: !2799, file: !2405, line: 401, type: !13)
!2806 = !DILocation(line: 401, column: 22, scope: !2799)
!2807 = !DILocation(line: 401, column: 29, scope: !2799)
!2808 = !DILocation(line: 401, column: 41, scope: !2799)
!2809 = !DILocation(line: 247, column: 21, scope: !2404, inlinedAt: !2810)
!2810 = distinct !DILocation(line: 402, column: 22, scope: !2799)
!2811 = !DILocation(line: 248, column: 59, scope: !2404, inlinedAt: !2810)
!2812 = !DILocation(line: 249, column: 6, scope: !2404, inlinedAt: !2810)
!2813 = !DILocation(line: 402, column: 22, scope: !2799)
!2814 = !DILocation(line: 1133, column: 35, scope: !1738, inlinedAt: !2815)
!2815 = distinct !DILocation(line: 402, column: 22, scope: !2799)
!2816 = !DILocation(line: 1133, column: 41, scope: !1738, inlinedAt: !2815)
!2817 = !DILocation(line: 1134, column: 13, scope: !1738, inlinedAt: !2815)
!2818 = !DILocation(line: 402, column: 9, scope: !2799)
!2819 = !DILocation(line: 403, column: 6, scope: !2799)
!2820 = distinct !DISubprogram(name: "current_memory<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb8413c8d469ac08fE", scope: !2324, file: !2405, line: 256, type: !2821, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2823)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!2672, !2408}
!2823 = !{!2824, !2825, !2827, !2829}
!2824 = !DILocalVariable(name: "self", arg: 1, scope: !2820, file: !2405, line: 256, type: !2408)
!2825 = !DILocalVariable(name: "align", scope: !2826, file: !2405, line: 263, type: !13, align: 8)
!2826 = distinct !DILexicalBlock(scope: !2820, file: !2405, line: 263, column: 17)
!2827 = !DILocalVariable(name: "size", scope: !2828, file: !2405, line: 264, type: !13, align: 8)
!2828 = distinct !DILexicalBlock(scope: !2826, file: !2405, line: 264, column: 17)
!2829 = !DILocalVariable(name: "layout", scope: !2830, file: !2405, line: 265, type: !531, align: 8)
!2830 = distinct !DILexicalBlock(scope: !2828, file: !2405, line: 265, column: 17)
!2831 = !DILocation(line: 256, column: 23, scope: !2820)
!2832 = !DILocation(line: 257, column: 12, scope: !2820)
!2833 = !DILocation(line: 257, column: 40, scope: !2820)
!2834 = !DILocation(line: 448, column: 5, scope: !1651, inlinedAt: !2835)
!2835 = distinct !DILocation(line: 263, column: 29, scope: !2820)
!2836 = !DILocation(line: 263, column: 29, scope: !2820)
!2837 = !DILocation(line: 263, column: 21, scope: !2826)
!2838 = !DILocation(line: 258, column: 13, scope: !2820)
!2839 = !DILocation(line: 257, column: 9, scope: !2820)
!2840 = !DILocation(line: 269, column: 6, scope: !2820)
!2841 = !DILocation(line: 264, column: 28, scope: !2826)
!2842 = !DILocation(line: 264, column: 50, scope: !2826)
!2843 = !DILocation(line: 264, column: 21, scope: !2828)
!2844 = !DILocation(line: 265, column: 30, scope: !2828)
!2845 = !DILocation(line: 265, column: 21, scope: !2830)
!2846 = !DILocation(line: 266, column: 23, scope: !2830)
!2847 = !DILocation(line: 266, column: 22, scope: !2830)
!2848 = !DILocation(line: 266, column: 17, scope: !2830)
!2849 = distinct !DISubprogram(name: "grow_amortized<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h8be8d45b573286caE", scope: !2324, file: !2405, line: 422, type: !2850, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2853)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!612, !2852, !13, !13}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut RawVec<bool, alloc::alloc::Global>", baseType: !2324, size: 64, align: 64, dwarfAddressSpace: 0)
!2853 = !{!2854, !2855, !2856, !2857, !2859, !2861, !2863, !2865, !2867, !2869, !2871, !2873}
!2854 = !DILocalVariable(name: "self", arg: 1, scope: !2849, file: !2405, line: 422, type: !2852)
!2855 = !DILocalVariable(name: "len", arg: 2, scope: !2849, file: !2405, line: 422, type: !13)
!2856 = !DILocalVariable(name: "additional", arg: 3, scope: !2849, file: !2405, line: 422, type: !13)
!2857 = !DILocalVariable(name: "required_cap", scope: !2858, file: !2405, line: 433, type: !13, align: 8)
!2858 = distinct !DILexicalBlock(scope: !2849, file: !2405, line: 433, column: 9)
!2859 = !DILocalVariable(name: "residual", scope: !2860, file: !2405, line: 433, type: !582, align: 8)
!2860 = distinct !DILexicalBlock(scope: !2849, file: !2405, line: 433, column: 79)
!2861 = !DILocalVariable(name: "val", scope: !2862, file: !2405, line: 433, type: !13, align: 8)
!2862 = distinct !DILexicalBlock(scope: !2849, file: !2405, line: 433, column: 28)
!2863 = !DILocalVariable(name: "cap", scope: !2864, file: !2405, line: 437, type: !13, align: 8)
!2864 = distinct !DILexicalBlock(scope: !2858, file: !2405, line: 437, column: 9)
!2865 = !DILocalVariable(name: "cap", scope: !2866, file: !2405, line: 438, type: !13, align: 8)
!2866 = distinct !DILexicalBlock(scope: !2864, file: !2405, line: 438, column: 9)
!2867 = !DILocalVariable(name: "new_layout", scope: !2868, file: !2405, line: 440, type: !663, align: 8)
!2868 = distinct !DILexicalBlock(scope: !2866, file: !2405, line: 440, column: 9)
!2869 = !DILocalVariable(name: "ptr", scope: !2870, file: !2405, line: 443, type: !561, align: 8)
!2870 = distinct !DILexicalBlock(scope: !2868, file: !2405, line: 443, column: 9)
!2871 = !DILocalVariable(name: "residual", scope: !2872, file: !2405, line: 443, type: !626, align: 8)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !2405, line: 443, column: 82)
!2873 = !DILocalVariable(name: "val", scope: !2874, file: !2405, line: 443, type: !561, align: 8)
!2874 = distinct !DILexicalBlock(scope: !2868, file: !2405, line: 443, column: 19)
!2875 = !DILocation(line: 422, column: 23, scope: !2849)
!2876 = !DILocation(line: 422, column: 34, scope: !2849)
!2877 = !DILocation(line: 422, column: 46, scope: !2849)
!2878 = !DILocation(line: 426, column: 12, scope: !2849)
!2879 = !DILocation(line: 429, column: 24, scope: !2849)
!2880 = !DILocation(line: 433, column: 28, scope: !2849)
!2881 = !DILocation(line: 433, column: 62, scope: !2849)
!2882 = !DILocation(line: 433, column: 28, scope: !2862)
!2883 = !DILocation(line: 433, column: 13, scope: !2858)
!2884 = !DILocation(line: 437, column: 28, scope: !2858)
!2885 = !DILocation(line: 437, column: 19, scope: !2858)
!2886 = !DILocation(line: 437, column: 13, scope: !2864)
!2887 = !DILocation(line: 433, column: 79, scope: !2849)
!2888 = !DILocation(line: 433, column: 79, scope: !2860)
!2889 = !DILocation(line: 433, column: 28, scope: !2860)
!2890 = !DILocation(line: 1, column: 1, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !2849, file: !1709, discriminator: 0)
!2892 = !DILocation(line: 438, column: 19, scope: !2864)
!2893 = !DILocation(line: 438, column: 13, scope: !2866)
!2894 = !DILocation(line: 440, column: 26, scope: !2866)
!2895 = !DILocation(line: 440, column: 13, scope: !2868)
!2896 = !DILocation(line: 443, column: 43, scope: !2868)
!2897 = !DILocation(line: 443, column: 66, scope: !2868)
!2898 = !DILocation(line: 443, column: 19, scope: !2868)
!2899 = !DILocation(line: 443, column: 19, scope: !2874)
!2900 = !DILocation(line: 443, column: 13, scope: !2870)
!2901 = !DILocation(line: 444, column: 9, scope: !2870)
!2902 = !DILocation(line: 443, column: 82, scope: !2868)
!2903 = !DILocation(line: 443, column: 82, scope: !2872)
!2904 = !DILocation(line: 443, column: 19, scope: !2872)
!2905 = !DILocation(line: 1, column: 1, scope: !2906)
!2906 = !DILexicalBlockFile(scope: !2858, file: !1709, discriminator: 0)
!2907 = !DILocation(line: 446, column: 6, scope: !2849)
!2908 = !DILocation(line: 445, column: 9, scope: !2870)
!2909 = !DILocation(line: 429, column: 20, scope: !2849)
!2910 = distinct !DISubprogram(name: "capacity_from_bytes<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$19capacity_from_bytes17hc65ab8c025986f37E", scope: !2324, file: !2405, line: 405, type: !2911, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2913)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!13, !13}
!2913 = !{!2914, !2915, !2918, !2919}
!2914 = !DILocalVariable(name: "excess", arg: 1, scope: !2910, file: !2405, line: 405, type: !13)
!2915 = !DILocalVariable(name: "left_val", scope: !2916, file: !2405, line: 406, type: !12, align: 8)
!2916 = !DILexicalBlockFile(scope: !2917, file: !2405, discriminator: 0)
!2917 = distinct !DILexicalBlock(scope: !2910, file: !1812, line: 87, column: 13)
!2918 = !DILocalVariable(name: "right_val", scope: !2916, file: !2405, line: 406, type: !12, align: 8)
!2919 = !DILocalVariable(name: "kind", scope: !2920, file: !2405, line: 406, type: !136, align: 1)
!2920 = !DILexicalBlockFile(scope: !2921, file: !2405, discriminator: 0)
!2921 = distinct !DILexicalBlock(scope: !2917, file: !1812, line: 89, column: 21)
!2922 = !DILocation(line: 405, column: 28, scope: !2910)
!2923 = !DILocation(line: 407, column: 18, scope: !2910)
!2924 = !DILocation(line: 407, column: 9, scope: !2910)
!2925 = !DILocation(line: 408, column: 6, scope: !2910)
!2926 = distinct !DISubprogram(name: "ptr<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h698bdd8dcb7f722fE", scope: !2324, file: !2405, line: 239, type: !2927, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2929)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!217, !2408}
!2929 = !{!2930}
!2930 = !DILocalVariable(name: "self", arg: 1, scope: !2926, file: !2405, line: 239, type: !2408)
!2931 = !DILocation(line: 239, column: 16, scope: !2926)
!2932 = !DILocation(line: 240, column: 9, scope: !2926)
!2933 = !DILocation(line: 241, column: 6, scope: !2926)
!2934 = distinct !DISubprogram(name: "reserve<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17heca5afb0eba90d72E", scope: !2324, file: !2405, line: 323, type: !2935, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2937)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{null, !2852, !13, !13}
!2937 = !{!2938, !2939, !2940}
!2938 = !DILocalVariable(name: "self", arg: 1, scope: !2934, file: !2405, line: 323, type: !2852)
!2939 = !DILocalVariable(name: "len", arg: 2, scope: !2934, file: !2405, line: 323, type: !13)
!2940 = !DILocalVariable(name: "additional", arg: 3, scope: !2934, file: !2405, line: 323, type: !13)
!2941 = !DILocation(line: 323, column: 20, scope: !2934)
!2942 = !DILocation(line: 323, column: 31, scope: !2934)
!2943 = !DILocation(line: 323, column: 43, scope: !2934)
!2944 = !DILocation(line: 337, column: 12, scope: !2934)
!2945 = !DILocation(line: 340, column: 6, scope: !2934)
!2946 = !DILocation(line: 338, column: 13, scope: !2934)
!2947 = !DILocation(line: 337, column: 9, scope: !2934)
!2948 = distinct !DISubprogram(name: "do_reserve_and_handle<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hc345d6d28bdb066cE", scope: !2949, file: !2405, line: 329, type: !2935, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2951)
!2949 = !DINamespace(name: "reserve", scope: !2950)
!2950 = !DINamespace(name: "{impl#1}", scope: !2177)
!2951 = !{!2952, !2953, !2954}
!2952 = !DILocalVariable(name: "slf", arg: 1, scope: !2948, file: !2405, line: 330, type: !2852)
!2953 = !DILocalVariable(name: "len", arg: 2, scope: !2948, file: !2405, line: 331, type: !13)
!2954 = !DILocalVariable(name: "additional", arg: 3, scope: !2948, file: !2405, line: 332, type: !13)
!2955 = !DILocation(line: 330, column: 13, scope: !2948)
!2956 = !DILocation(line: 331, column: 13, scope: !2948)
!2957 = !DILocation(line: 332, column: 13, scope: !2948)
!2958 = !DILocation(line: 334, column: 28, scope: !2948)
!2959 = !DILocation(line: 334, column: 13, scope: !2948)
!2960 = !DILocation(line: 335, column: 10, scope: !2948)
!2961 = distinct !DISubprogram(name: "set_ptr<bool, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7set_ptr17h063dd788d55ce58cE", scope: !2324, file: !2405, line: 410, type: !2962, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2331, retainedNodes: !2964)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{null, !2852, !561}
!2964 = !{!2965, !2966}
!2965 = !DILocalVariable(name: "self", arg: 1, scope: !2961, file: !2405, line: 410, type: !2852)
!2966 = !DILocalVariable(name: "ptr", arg: 2, scope: !2961, file: !2405, line: 410, type: !561)
!2967 = !DILocation(line: 410, column: 16, scope: !2961)
!2968 = !DILocation(line: 410, column: 27, scope: !2961)
!2969 = !DILocation(line: 411, column: 51, scope: !2961)
!2970 = !DILocation(line: 411, column: 29, scope: !2961)
!2971 = !DILocation(line: 411, column: 9, scope: !2961)
!2972 = !DILocation(line: 412, column: 46, scope: !2961)
!2973 = !DILocation(line: 412, column: 20, scope: !2961)
!2974 = !DILocation(line: 412, column: 9, scope: !2961)
!2975 = !DILocation(line: 413, column: 6, scope: !2961)
!2976 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17hb5dcd020ae9ba376E", scope: !2977, file: !2455, line: 235, type: !2978, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2980)
!2977 = !DINamespace(name: "{impl#1}", scope: !2330)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{null, !2476, !1496, !531}
!2980 = !{!2981, !2982, !2983}
!2981 = !DILocalVariable(name: "self", arg: 1, scope: !2976, file: !2455, line: 235, type: !2476)
!2982 = !DILocalVariable(name: "ptr", arg: 2, scope: !2976, file: !2455, line: 235, type: !1496)
!2983 = !DILocalVariable(name: "layout", arg: 3, scope: !2976, file: !2455, line: 235, type: !531)
!2984 = !DILocation(line: 235, column: 26, scope: !2976)
!2985 = !DILocation(line: 235, column: 33, scope: !2976)
!2986 = !DILocation(line: 235, column: 51, scope: !2976)
!2987 = !DILocation(line: 236, column: 12, scope: !2976)
!2988 = !DILocation(line: 236, column: 9, scope: !2976)
!2989 = !DILocation(line: 239, column: 30, scope: !2976)
!2990 = !DILocation(line: 239, column: 44, scope: !2976)
!2991 = !DILocation(line: 239, column: 22, scope: !2976)
!2992 = !DILocation(line: 241, column: 6, scope: !2976)
!2993 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hd6632653361e170bE", scope: !2977, file: !2455, line: 244, type: !2994, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !2996)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!733, !2476, !1496, !531, !531}
!2996 = !{!2997, !2998, !2999, !3000}
!2997 = !DILocalVariable(name: "self", arg: 1, scope: !2993, file: !2455, line: 245, type: !2476)
!2998 = !DILocalVariable(name: "ptr", arg: 2, scope: !2993, file: !2455, line: 246, type: !1496)
!2999 = !DILocalVariable(name: "old_layout", arg: 3, scope: !2993, file: !2455, line: 247, type: !531)
!3000 = !DILocalVariable(name: "new_layout", arg: 4, scope: !2993, file: !2455, line: 248, type: !531)
!3001 = !DILocation(line: 245, column: 9, scope: !2993)
!3002 = !DILocation(line: 246, column: 9, scope: !2993)
!3003 = !DILocation(line: 247, column: 9, scope: !2993)
!3004 = !DILocation(line: 248, column: 9, scope: !2993)
!3005 = !DILocation(line: 251, column: 18, scope: !2993)
!3006 = !DILocation(line: 252, column: 6, scope: !2993)
!3007 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h84e35486521aacf0E", scope: !2977, file: !2455, line: 225, type: !3008, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3010)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!733, !2476, !531}
!3010 = !{!3011, !3012}
!3011 = !DILocalVariable(name: "self", arg: 1, scope: !3007, file: !2455, line: 225, type: !2476)
!3012 = !DILocalVariable(name: "layout", arg: 2, scope: !3007, file: !2455, line: 225, type: !531)
!3013 = !DILocation(line: 225, column: 17, scope: !3007)
!3014 = !DILocation(line: 225, column: 24, scope: !3007)
!3015 = !DILocation(line: 226, column: 9, scope: !3007)
!3016 = !DILocation(line: 227, column: 6, scope: !3007)
!3017 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17hd396fa0e4196c08dE", scope: !3018, file: !1642, line: 30, type: !1659, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3019)
!3018 = !DINamespace(name: "{impl#3}", scope: !6)
!3019 = !{!3020}
!3020 = !DILocalVariable(name: "self", arg: 1, scope: !3017, file: !1642, line: 30, type: !1661)
!3021 = !DILocation(line: 30, column: 16, scope: !3017)
!3022 = !DILocation(line: 30, column: 21, scope: !3017)
!3023 = distinct !DISubprogram(name: "branch<u64>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfe8fe4e88735ca69E", scope: !3024, file: !1991, line: 2023, type: !3025, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !310, retainedNodes: !3051)
!3024 = !DINamespace(name: "{impl#40}", scope: !304)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!3027, !303}
!3027 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, u64>", scope: !3028, file: !2, size: 128, align: 64, elements: !3029, identifier: "6f71c437e09010012371bfa5e9994540")
!3028 = !DINamespace(name: "control_flow", scope: !157)
!3029 = !{!3030}
!3030 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 128, align: 64, elements: !3031, templateParams: !3036, identifier: "6f71c437e09010012371bfa5e9994540_variant_part", discriminator: !3050)
!3031 = !{!3032, !3046}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3030, file: !2, baseType: !3033, size: 128, align: 64, extraData: i64 0)
!3033 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3027, file: !2, size: 128, align: 64, elements: !3034, templateParams: !3036, identifier: "6f71c437e09010012371bfa5e9994540::Continue")
!3034 = !{!3035}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3033, file: !2, baseType: !23, size: 64, align: 64, offset: 64)
!3036 = !{!3037, !3045}
!3037 = !DITemplateTypeParameter(name: "B", type: !3038)
!3038 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !304, file: !2, align: 8, elements: !3039, identifier: "69e681f2568c3113446c36892492605a")
!3039 = !{!3040}
!3040 = !DICompositeType(tag: DW_TAG_variant_part, scope: !304, file: !2, align: 8, elements: !3041, templateParams: !3044, identifier: "69e681f2568c3113446c36892492605a_variant_part")
!3041 = !{!3042}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3040, file: !2, baseType: !3043, align: 8)
!3043 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3038, file: !2, align: 8, elements: !4, templateParams: !3044, identifier: "69e681f2568c3113446c36892492605a::None")
!3044 = !{!591}
!3045 = !DITemplateTypeParameter(name: "C", type: !23)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3030, file: !2, baseType: !3047, size: 128, align: 64, extraData: i64 1)
!3047 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3027, file: !2, size: 128, align: 64, elements: !3048, templateParams: !3036, identifier: "6f71c437e09010012371bfa5e9994540::Break")
!3048 = !{!3049}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3047, file: !2, baseType: !3038, align: 8, offset: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3028, file: !2, baseType: !23, size: 64, align: 64, flags: DIFlagArtificial)
!3051 = !{!3052, !3053}
!3052 = !DILocalVariable(name: "self", arg: 1, scope: !3023, file: !1991, line: 2023, type: !303)
!3053 = !DILocalVariable(name: "v", scope: !3054, file: !1991, line: 2025, type: !23, align: 8)
!3054 = distinct !DILexicalBlock(scope: !3023, file: !1991, line: 2025, column: 13)
!3055 = !DILocation(line: 2023, column: 15, scope: !3023)
!3056 = !DILocation(line: 2024, column: 15, scope: !3023)
!3057 = !DILocation(line: 2024, column: 9, scope: !3023)
!3058 = !DILocation(line: 2026, column: 21, scope: !3023)
!3059 = !DILocation(line: 2026, column: 44, scope: !3023)
!3060 = !DILocation(line: 2025, column: 18, scope: !3023)
!3061 = !DILocation(line: 2025, column: 18, scope: !3054)
!3062 = !DILocation(line: 2025, column: 24, scope: !3054)
!3063 = !DILocation(line: 2028, column: 5, scope: !3023)
!3064 = !DILocation(line: 2028, column: 6, scope: !3023)
!3065 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17had00e079f95a9eb0E", scope: !3066, file: !512, line: 79, type: !3067, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3070)
!3066 = !DINamespace(name: "{impl#10}", scope: !514)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!521, !3069}
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&TryReserveErrorKind", baseType: !521, size: 64, align: 64, dwarfAddressSpace: 0)
!3070 = !{!3071, !3072, !3074}
!3071 = !DILocalVariable(name: "self", arg: 1, scope: !3065, file: !512, line: 79, type: !3069)
!3072 = !DILocalVariable(name: "__self_0", scope: !3073, file: !512, line: 93, type: !1661, align: 8)
!3073 = distinct !DILexicalBlock(scope: !3065, file: !512, line: 79, column: 10)
!3074 = !DILocalVariable(name: "__self_1", scope: !3073, file: !512, line: 104, type: !1874, align: 8)
!3075 = !DILocation(line: 79, column: 10, scope: !3065)
!3076 = !DILocation(line: 93, column: 9, scope: !3065)
!3077 = !DILocation(line: 93, column: 9, scope: !3073)
!3078 = !DILocation(line: 104, column: 9, scope: !3065)
!3079 = !DILocation(line: 104, column: 9, scope: !3073)
!3080 = !DILocation(line: 79, column: 10, scope: !3073)
!3081 = !DILocation(line: 79, column: 14, scope: !3065)
!3082 = !DILocation(line: 79, column: 15, scope: !3065)
!3083 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h29ca9301afe2ce77E", scope: !3084, file: !549, line: 1902, type: !3085, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2002, retainedNodes: !3102)
!3084 = !DINamespace(name: "{impl#36}", scope: !116)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!3087, !1994}
!3087 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !3028, file: !2, size: 64, align: 64, elements: !3088, identifier: "aba8f8de5c30a5a713a7e2dd6a715755")
!3088 = !{!3089}
!3089 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 64, align: 64, elements: !3090, templateParams: !3095, identifier: "aba8f8de5c30a5a713a7e2dd6a715755_variant_part", discriminator: !3050)
!3090 = !{!3091, !3098}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3089, file: !2, baseType: !3092, size: 64, align: 64)
!3092 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3087, file: !2, size: 64, align: 64, elements: !3093, templateParams: !3095, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Continue")
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3092, file: !2, baseType: !1496, size: 64, align: 64)
!3095 = !{!3096, !3097}
!3096 = !DITemplateTypeParameter(name: "B", type: !748)
!3097 = !DITemplateTypeParameter(name: "C", type: !1496)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3089, file: !2, baseType: !3099, size: 64, align: 64, extraData: i64 0)
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3087, file: !2, size: 64, align: 64, elements: !3100, templateParams: !3095, identifier: "aba8f8de5c30a5a713a7e2dd6a715755::Break")
!3100 = !{!3101}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3099, file: !2, baseType: !748, align: 8)
!3102 = !{!3103, !3104, !3106}
!3103 = !DILocalVariable(name: "self", arg: 1, scope: !3083, file: !549, line: 1902, type: !1994)
!3104 = !DILocalVariable(name: "v", scope: !3105, file: !549, line: 1904, type: !1496, align: 8)
!3105 = distinct !DILexicalBlock(scope: !3083, file: !549, line: 1904, column: 13)
!3106 = !DILocalVariable(name: "e", scope: !3107, file: !549, line: 1905, type: !743, align: 1)
!3107 = distinct !DILexicalBlock(scope: !3083, file: !549, line: 1905, column: 13)
!3108 = !DILocation(line: 1902, column: 15, scope: !3083)
!3109 = !DILocation(line: 1905, column: 17, scope: !3107)
!3110 = !DILocation(line: 1903, column: 15, scope: !3083)
!3111 = !DILocation(line: 1903, column: 9, scope: !3083)
!3112 = !DILocation(line: 1904, column: 16, scope: !3083)
!3113 = !DILocation(line: 1904, column: 16, scope: !3105)
!3114 = !DILocation(line: 1904, column: 22, scope: !3105)
!3115 = !DILocation(line: 1904, column: 45, scope: !3083)
!3116 = !DILocation(line: 1905, column: 42, scope: !3107)
!3117 = !DILocation(line: 1905, column: 23, scope: !3107)
!3118 = !DILocation(line: 1905, column: 48, scope: !3083)
!3119 = !DILocation(line: 1907, column: 6, scope: !3083)
!3120 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6c9c748e1807e59dE", scope: !3084, file: !549, line: 1902, type: !3121, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !741, retainedNodes: !3137)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!3123, !733}
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3028, file: !2, size: 128, align: 64, elements: !3124, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7")
!3124 = !{!3125}
!3125 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 128, align: 64, elements: !3126, templateParams: !3131, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7_variant_part", discriminator: !3050)
!3126 = !{!3127, !3133}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3125, file: !2, baseType: !3128, size: 128, align: 64)
!3128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3123, file: !2, size: 128, align: 64, elements: !3129, templateParams: !3131, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Continue")
!3129 = !{!3130}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3128, file: !2, baseType: !561, size: 128, align: 64)
!3131 = !{!3096, !3132}
!3132 = !DITemplateTypeParameter(name: "C", type: !561)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3125, file: !2, baseType: !3134, size: 128, align: 64, extraData: i64 0)
!3134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3123, file: !2, size: 128, align: 64, elements: !3135, templateParams: !3131, identifier: "d2d133e2ff29a67bdebbee54f9f5e8c7::Break")
!3135 = !{!3136}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3134, file: !2, baseType: !748, align: 8)
!3137 = !{!3138, !3139, !3141}
!3138 = !DILocalVariable(name: "self", arg: 1, scope: !3120, file: !549, line: 1902, type: !733)
!3139 = !DILocalVariable(name: "v", scope: !3140, file: !549, line: 1904, type: !561, align: 8)
!3140 = distinct !DILexicalBlock(scope: !3120, file: !549, line: 1904, column: 13)
!3141 = !DILocalVariable(name: "e", scope: !3142, file: !549, line: 1905, type: !743, align: 1)
!3142 = distinct !DILexicalBlock(scope: !3120, file: !549, line: 1905, column: 13)
!3143 = !DILocation(line: 1902, column: 15, scope: !3120)
!3144 = !DILocation(line: 1905, column: 17, scope: !3142)
!3145 = !DILocation(line: 1903, column: 15, scope: !3120)
!3146 = !DILocation(line: 1903, column: 9, scope: !3120)
!3147 = !DILocation(line: 1904, column: 16, scope: !3120)
!3148 = !DILocation(line: 1904, column: 16, scope: !3140)
!3149 = !DILocation(line: 1904, column: 22, scope: !3140)
!3150 = !DILocation(line: 1904, column: 45, scope: !3120)
!3151 = !DILocation(line: 1905, column: 42, scope: !3142)
!3152 = !DILocation(line: 1905, column: 23, scope: !3142)
!3153 = !DILocation(line: 1905, column: 48, scope: !3120)
!3154 = !DILocation(line: 1907, column: 6, scope: !3120)
!3155 = distinct !DISubprogram(name: "branch<usize, core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7099560655e1fba1E", scope: !3084, file: !549, line: 1902, type: !3156, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2070, retainedNodes: !3173)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!3158, !2062}
!3158 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, usize>", scope: !3028, file: !2, size: 128, align: 64, elements: !3159, identifier: "9684fe477d2dc57caff34cda2f8fb57b")
!3159 = !{!3160}
!3160 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 128, align: 64, elements: !3161, templateParams: !3166, identifier: "9684fe477d2dc57caff34cda2f8fb57b_variant_part", discriminator: !3050)
!3161 = !{!3162, !3169}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3160, file: !2, baseType: !3163, size: 128, align: 64, extraData: i64 0)
!3163 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3158, file: !2, size: 128, align: 64, elements: !3164, templateParams: !3166, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Continue")
!3164 = !{!3165}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3163, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!3166 = !{!3167, !3168}
!3167 = !DITemplateTypeParameter(name: "B", type: !679)
!3168 = !DITemplateTypeParameter(name: "C", type: !13)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3160, file: !2, baseType: !3170, size: 128, align: 64, extraData: i64 1)
!3170 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3158, file: !2, size: 128, align: 64, elements: !3171, templateParams: !3166, identifier: "9684fe477d2dc57caff34cda2f8fb57b::Break")
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3170, file: !2, baseType: !679, align: 8, offset: 64)
!3173 = !{!3174, !3175, !3177}
!3174 = !DILocalVariable(name: "self", arg: 1, scope: !3155, file: !549, line: 1902, type: !2062)
!3175 = !DILocalVariable(name: "v", scope: !3176, file: !549, line: 1904, type: !13, align: 8)
!3176 = distinct !DILexicalBlock(scope: !3155, file: !549, line: 1904, column: 13)
!3177 = !DILocalVariable(name: "e", scope: !3178, file: !549, line: 1905, type: !5, align: 1)
!3178 = distinct !DILexicalBlock(scope: !3155, file: !549, line: 1905, column: 13)
!3179 = !DILocation(line: 1902, column: 15, scope: !3155)
!3180 = !DILocation(line: 1905, column: 17, scope: !3178)
!3181 = !DILocation(line: 1903, column: 15, scope: !3155)
!3182 = !DILocation(line: 1903, column: 9, scope: !3155)
!3183 = !DILocation(line: 1904, column: 16, scope: !3155)
!3184 = !DILocation(line: 1904, column: 16, scope: !3176)
!3185 = !DILocation(line: 1904, column: 22, scope: !3176)
!3186 = !DILocation(line: 1904, column: 45, scope: !3155)
!3187 = !DILocation(line: 1905, column: 42, scope: !3178)
!3188 = !DILocation(line: 1905, column: 23, scope: !3178)
!3189 = !DILocation(line: 1905, column: 48, scope: !3155)
!3190 = !DILocation(line: 1907, column: 6, scope: !3155)
!3191 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h77c5012d43a3ecadE", scope: !3084, file: !549, line: 1902, type: !3192, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2036, retainedNodes: !3208)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{!3194, !2028}
!3194 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !3028, file: !2, size: 192, align: 64, elements: !3195, identifier: "c73c593fa01e57853e5a12a3f0a1c2ef")
!3195 = !{!3196}
!3196 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 192, align: 64, elements: !3197, templateParams: !3202, identifier: "c73c593fa01e57853e5a12a3f0a1c2ef_variant_part", discriminator: !3050)
!3197 = !{!3198, !3204}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3196, file: !2, baseType: !3199, size: 192, align: 64, extraData: i64 0)
!3199 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3194, file: !2, size: 192, align: 64, elements: !3200, templateParams: !3202, identifier: "c73c593fa01e57853e5a12a3f0a1c2ef::Continue")
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3199, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!3202 = !{!3203, !3168}
!3203 = !DITemplateTypeParameter(name: "B", type: !582)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3196, file: !2, baseType: !3205, size: 192, align: 64, extraData: i64 1)
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3194, file: !2, size: 192, align: 64, elements: !3206, templateParams: !3202, identifier: "c73c593fa01e57853e5a12a3f0a1c2ef::Break")
!3206 = !{!3207}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3205, file: !2, baseType: !582, size: 128, align: 64, offset: 64)
!3208 = !{!3209, !3210, !3212}
!3209 = !DILocalVariable(name: "self", arg: 1, scope: !3191, file: !549, line: 1902, type: !2028)
!3210 = !DILocalVariable(name: "v", scope: !3211, file: !549, line: 1904, type: !13, align: 8)
!3211 = distinct !DILexicalBlock(scope: !3191, file: !549, line: 1904, column: 13)
!3212 = !DILocalVariable(name: "e", scope: !3213, file: !549, line: 1905, type: !521, align: 8)
!3213 = distinct !DILexicalBlock(scope: !3191, file: !549, line: 1905, column: 13)
!3214 = !DILocation(line: 1902, column: 15, scope: !3191)
!3215 = !DILocation(line: 1903, column: 15, scope: !3191)
!3216 = !DILocation(line: 1903, column: 9, scope: !3191)
!3217 = !DILocation(line: 1904, column: 16, scope: !3191)
!3218 = !DILocation(line: 1904, column: 16, scope: !3211)
!3219 = !DILocation(line: 1904, column: 22, scope: !3211)
!3220 = !DILocation(line: 1904, column: 45, scope: !3191)
!3221 = !DILocation(line: 1905, column: 17, scope: !3191)
!3222 = !DILocation(line: 1905, column: 17, scope: !3213)
!3223 = !DILocation(line: 1905, column: 42, scope: !3213)
!3224 = !DILocation(line: 1905, column: 23, scope: !3213)
!3225 = !DILocation(line: 1905, column: 48, scope: !3191)
!3226 = !DILocation(line: 1907, column: 6, scope: !3191)
!3227 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8102a282bb5f570cE", scope: !3084, file: !549, line: 1902, type: !3228, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !574, retainedNodes: !3244)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{!3230, !553}
!3230 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !3028, file: !2, size: 192, align: 64, elements: !3231, identifier: "dc7a7f7bc5cc4aac12c37b5274aa6536")
!3231 = !{!3232}
!3232 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 192, align: 64, elements: !3233, templateParams: !3238, identifier: "dc7a7f7bc5cc4aac12c37b5274aa6536_variant_part", discriminator: !3050)
!3233 = !{!3234, !3240}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3232, file: !2, baseType: !3235, size: 192, align: 64, extraData: i64 0)
!3235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3230, file: !2, size: 192, align: 64, elements: !3236, templateParams: !3238, identifier: "dc7a7f7bc5cc4aac12c37b5274aa6536::Continue")
!3236 = !{!3237}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3235, file: !2, baseType: !561, size: 128, align: 64, offset: 64)
!3238 = !{!3239, !3132}
!3239 = !DITemplateTypeParameter(name: "B", type: !626)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3232, file: !2, baseType: !3241, size: 192, align: 64, extraData: i64 1)
!3241 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3230, file: !2, size: 192, align: 64, elements: !3242, templateParams: !3238, identifier: "dc7a7f7bc5cc4aac12c37b5274aa6536::Break")
!3242 = !{!3243}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3241, file: !2, baseType: !626, size: 128, align: 64, offset: 64)
!3244 = !{!3245, !3246, !3248}
!3245 = !DILocalVariable(name: "self", arg: 1, scope: !3227, file: !549, line: 1902, type: !553)
!3246 = !DILocalVariable(name: "v", scope: !3247, file: !549, line: 1904, type: !561, align: 8)
!3247 = distinct !DILexicalBlock(scope: !3227, file: !549, line: 1904, column: 13)
!3248 = !DILocalVariable(name: "e", scope: !3249, file: !549, line: 1905, type: !518, align: 8)
!3249 = distinct !DILexicalBlock(scope: !3227, file: !549, line: 1905, column: 13)
!3250 = !DILocation(line: 1902, column: 15, scope: !3227)
!3251 = !DILocation(line: 1903, column: 15, scope: !3227)
!3252 = !DILocation(line: 1903, column: 9, scope: !3227)
!3253 = !DILocation(line: 1904, column: 16, scope: !3227)
!3254 = !DILocation(line: 1904, column: 16, scope: !3247)
!3255 = !DILocation(line: 1904, column: 22, scope: !3247)
!3256 = !DILocation(line: 1904, column: 45, scope: !3227)
!3257 = !DILocation(line: 1905, column: 17, scope: !3227)
!3258 = !DILocation(line: 1905, column: 17, scope: !3249)
!3259 = !DILocation(line: 1905, column: 42, scope: !3249)
!3260 = !DILocation(line: 1905, column: 23, scope: !3249)
!3261 = !DILocation(line: 1905, column: 48, scope: !3227)
!3262 = !DILocation(line: 1907, column: 6, scope: !3227)
!3263 = distinct !DISubprogram(name: "branch<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hee81a03be240d715E", scope: !3084, file: !549, line: 1902, type: !3264, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !714, retainedNodes: !3281)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!3266, !702}
!3266 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::layout::LayoutError>, (core::alloc::layout::Layout, usize)>", scope: !3028, file: !2, size: 192, align: 64, elements: !3267, identifier: "c4d497dd31886320b9bdf21802754aec")
!3267 = !{!3268}
!3268 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 192, align: 64, elements: !3269, templateParams: !3274, identifier: "c4d497dd31886320b9bdf21802754aec_variant_part", discriminator: !3280)
!3269 = !{!3270, !3276}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3268, file: !2, baseType: !3271, size: 192, align: 64)
!3271 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3266, file: !2, size: 192, align: 64, elements: !3272, templateParams: !3274, identifier: "c4d497dd31886320b9bdf21802754aec::Continue")
!3272 = !{!3273}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3271, file: !2, baseType: !710, size: 192, align: 64)
!3274 = !{!3167, !3275}
!3275 = !DITemplateTypeParameter(name: "C", type: !710)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3268, file: !2, baseType: !3277, size: 192, align: 64, extraData: i64 0)
!3277 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3266, file: !2, size: 192, align: 64, elements: !3278, templateParams: !3274, identifier: "c4d497dd31886320b9bdf21802754aec::Break")
!3278 = !{!3279}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3277, file: !2, baseType: !679, align: 8)
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3028, file: !2, baseType: !23, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!3281 = !{!3282, !3283, !3285}
!3282 = !DILocalVariable(name: "self", arg: 1, scope: !3263, file: !549, line: 1902, type: !702)
!3283 = !DILocalVariable(name: "v", scope: !3284, file: !549, line: 1904, type: !710, align: 8)
!3284 = distinct !DILexicalBlock(scope: !3263, file: !549, line: 1904, column: 13)
!3285 = !DILocalVariable(name: "e", scope: !3286, file: !549, line: 1905, type: !5, align: 1)
!3286 = distinct !DILexicalBlock(scope: !3263, file: !549, line: 1905, column: 13)
!3287 = !DILocation(line: 1902, column: 15, scope: !3263)
!3288 = !DILocation(line: 1904, column: 16, scope: !3284)
!3289 = !DILocation(line: 1905, column: 17, scope: !3286)
!3290 = !DILocation(line: 1903, column: 15, scope: !3263)
!3291 = !DILocation(line: 1903, column: 9, scope: !3263)
!3292 = !DILocation(line: 1904, column: 16, scope: !3263)
!3293 = !DILocation(line: 1904, column: 44, scope: !3284)
!3294 = !DILocation(line: 1904, column: 22, scope: !3284)
!3295 = !DILocation(line: 1904, column: 45, scope: !3263)
!3296 = !DILocation(line: 1905, column: 42, scope: !3286)
!3297 = !DILocation(line: 1905, column: 23, scope: !3286)
!3298 = !DILocation(line: 1905, column: 48, scope: !3263)
!3299 = !DILocation(line: 1907, column: 6, scope: !3263)
!3300 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf69c3a4752c71cb0E", scope: !3084, file: !549, line: 1902, type: !3301, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !620, retainedNodes: !3317)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!3303, !612}
!3303 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !3028, file: !2, size: 192, align: 64, elements: !3304, identifier: "928a0252cf384a2411d123ca47f7c45a")
!3304 = !{!3305}
!3305 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 192, align: 64, elements: !3306, templateParams: !3311, identifier: "928a0252cf384a2411d123ca47f7c45a_variant_part", discriminator: !3050)
!3306 = !{!3307, !3313}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3305, file: !2, baseType: !3308, size: 192, align: 64, extraData: i64 0)
!3308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3303, file: !2, size: 192, align: 64, elements: !3309, templateParams: !3311, identifier: "928a0252cf384a2411d123ca47f7c45a::Continue")
!3309 = !{!3310}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3308, file: !2, baseType: !541, align: 8, offset: 64)
!3311 = !{!3239, !3312}
!3312 = !DITemplateTypeParameter(name: "C", type: !541)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3305, file: !2, baseType: !3314, size: 192, align: 64, extraData: i64 1)
!3314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3303, file: !2, size: 192, align: 64, elements: !3315, templateParams: !3311, identifier: "928a0252cf384a2411d123ca47f7c45a::Break")
!3315 = !{!3316}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3314, file: !2, baseType: !626, size: 128, align: 64, offset: 64)
!3317 = !{!3318, !3319, !3321}
!3318 = !DILocalVariable(name: "self", arg: 1, scope: !3300, file: !549, line: 1902, type: !612)
!3319 = !DILocalVariable(name: "v", scope: !3320, file: !549, line: 1904, type: !541, align: 1)
!3320 = distinct !DILexicalBlock(scope: !3300, file: !549, line: 1904, column: 13)
!3321 = !DILocalVariable(name: "e", scope: !3322, file: !549, line: 1905, type: !518, align: 8)
!3322 = distinct !DILexicalBlock(scope: !3300, file: !549, line: 1905, column: 13)
!3323 = !DILocation(line: 1902, column: 15, scope: !3300)
!3324 = !DILocation(line: 1904, column: 16, scope: !3320)
!3325 = !DILocation(line: 1903, column: 15, scope: !3300)
!3326 = !DILocation(line: 1903, column: 9, scope: !3300)
!3327 = !DILocation(line: 1904, column: 22, scope: !3320)
!3328 = !DILocation(line: 1904, column: 45, scope: !3300)
!3329 = !DILocation(line: 1905, column: 17, scope: !3300)
!3330 = !DILocation(line: 1905, column: 17, scope: !3322)
!3331 = !DILocation(line: 1905, column: 42, scope: !3322)
!3332 = !DILocation(line: 1905, column: 23, scope: !3322)
!3333 = !DILocation(line: 1905, column: 48, scope: !3300)
!3334 = !DILocation(line: 1907, column: 6, scope: !3300)
!3335 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfc83705232c58ea3E", scope: !3084, file: !549, line: 1902, type: !3336, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2170, retainedNodes: !3352)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!3338, !2162}
!3338 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", scope: !3028, file: !2, size: 192, align: 64, elements: !3339, identifier: "e898d347d20858f88033f0cd5c7536fb")
!3339 = !{!3340}
!3340 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3028, file: !2, size: 192, align: 64, elements: !3341, templateParams: !3346, identifier: "e898d347d20858f88033f0cd5c7536fb_variant_part", discriminator: !3050)
!3341 = !{!3342, !3348}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3340, file: !2, baseType: !3343, size: 192, align: 64, extraData: i64 0)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3338, file: !2, size: 192, align: 64, elements: !3344, templateParams: !3346, identifier: "e898d347d20858f88033f0cd5c7536fb::Continue")
!3344 = !{!3345}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3343, file: !2, baseType: !531, size: 128, align: 64, offset: 64)
!3346 = !{!3203, !3347}
!3347 = !DITemplateTypeParameter(name: "C", type: !531)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3340, file: !2, baseType: !3349, size: 192, align: 64, extraData: i64 1)
!3349 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3338, file: !2, size: 192, align: 64, elements: !3350, templateParams: !3346, identifier: "e898d347d20858f88033f0cd5c7536fb::Break")
!3350 = !{!3351}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3349, file: !2, baseType: !582, size: 128, align: 64, offset: 64)
!3352 = !{!3353, !3354, !3356}
!3353 = !DILocalVariable(name: "self", arg: 1, scope: !3335, file: !549, line: 1902, type: !2162)
!3354 = !DILocalVariable(name: "v", scope: !3355, file: !549, line: 1904, type: !531, align: 8)
!3355 = distinct !DILexicalBlock(scope: !3335, file: !549, line: 1904, column: 13)
!3356 = !DILocalVariable(name: "e", scope: !3357, file: !549, line: 1905, type: !521, align: 8)
!3357 = distinct !DILexicalBlock(scope: !3335, file: !549, line: 1905, column: 13)
!3358 = !DILocation(line: 1902, column: 15, scope: !3335)
!3359 = !DILocation(line: 1903, column: 15, scope: !3335)
!3360 = !DILocation(line: 1903, column: 9, scope: !3335)
!3361 = !DILocation(line: 1904, column: 16, scope: !3335)
!3362 = !DILocation(line: 1904, column: 16, scope: !3355)
!3363 = !DILocation(line: 1904, column: 22, scope: !3355)
!3364 = !DILocation(line: 1904, column: 45, scope: !3335)
!3365 = !DILocation(line: 1905, column: 17, scope: !3335)
!3366 = !DILocation(line: 1905, column: 17, scope: !3357)
!3367 = !DILocation(line: 1905, column: 42, scope: !3357)
!3368 = !DILocation(line: 1905, column: 23, scope: !3357)
!3369 = !DILocation(line: 1905, column: 48, scope: !3335)
!3370 = !DILocation(line: 1907, column: 6, scope: !3335)
!3371 = distinct !DISubprogram(name: "clone<u64>", linkageName: "_ZN82_$LT$core..ops..range..RangeInclusive$LT$Idx$GT$$u20$as$u20$core..clone..Clone$GT$5clone17hdadbb3e827565b36E", scope: !3372, file: !1115, line: 339, type: !3373, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !323, retainedNodes: !3375)
!3372 = !DINamespace(name: "{impl#56}", scope: !156)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!318, !1137}
!3375 = !{!3376, !3377, !3379, !3380}
!3376 = !DILocalVariable(name: "self", arg: 1, scope: !3371, file: !1115, line: 339, type: !1137)
!3377 = !DILocalVariable(name: "__self_0_0", scope: !3378, file: !1115, line: 347, type: !22, align: 8)
!3378 = distinct !DILexicalBlock(scope: !3371, file: !1115, line: 339, column: 10)
!3379 = !DILocalVariable(name: "__self_0_1", scope: !3378, file: !1115, line: 348, type: !22, align: 8)
!3380 = !DILocalVariable(name: "__self_0_2", scope: !3378, file: !1115, line: 356, type: !1894, align: 8)
!3381 = !DILocation(line: 339, column: 10, scope: !3371)
!3382 = !DILocation(line: 347, column: 5, scope: !3371)
!3383 = !DILocation(line: 347, column: 5, scope: !3378)
!3384 = !DILocation(line: 348, column: 5, scope: !3371)
!3385 = !DILocation(line: 348, column: 5, scope: !3378)
!3386 = !DILocation(line: 356, column: 5, scope: !3371)
!3387 = !DILocation(line: 356, column: 5, scope: !3378)
!3388 = !DILocation(line: 339, column: 10, scope: !3378)
!3389 = !DILocation(line: 339, column: 15, scope: !3371)
!3390 = distinct !DISubprogram(name: "from_residual<(u64, u64)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h9024dd1559bf535cE", scope: !3391, file: !1991, line: 2034, type: !3392, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !2116, retainedNodes: !3394)
!3391 = !DINamespace(name: "{impl#41}", scope: !304)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!2110, !3038}
!3394 = !{!3395}
!3395 = !DILocalVariable(name: "residual", arg: 1, scope: !3390, file: !1991, line: 2034, type: !3038)
!3396 = !DILocation(line: 2034, column: 22, scope: !3390)
!3397 = !DILocation(line: 2036, column: 21, scope: !3390)
!3398 = !DILocation(line: 2038, column: 6, scope: !3390)
!3399 = distinct !DISubprogram(name: "get_inclusive_bounds", linkageName: "_ZN2bv12range_compat20get_inclusive_bounds17h83267853c5e42a76E", scope: !3401, file: !3400, line: 7, type: !3402, scopeLine: 7, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3404)
!3400 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/range_compat.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "b22a41e01c9ee093b2b4a18e2c68ef07")
!3401 = !DINamespace(name: "range_compat", scope: !30)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!2110, !318}
!3404 = !{!3405, !3406, !3408, !3410, !3412, !3414, !3416}
!3405 = !DILocalVariable(name: "range", arg: 1, scope: !3399, file: !3400, line: 7, type: !318)
!3406 = !DILocalVariable(name: "r1", scope: !3407, file: !3400, line: 8, type: !318, align: 8)
!3407 = distinct !DILexicalBlock(scope: !3399, file: !3400, line: 8, column: 5)
!3408 = !DILocalVariable(name: "r2", scope: !3409, file: !3400, line: 9, type: !318, align: 8)
!3409 = distinct !DILexicalBlock(scope: !3407, file: !3400, line: 9, column: 5)
!3410 = !DILocalVariable(name: "residual", scope: !3411, file: !3400, line: 10, type: !3038, align: 1)
!3411 = distinct !DILexicalBlock(scope: !3409, file: !3400, line: 10, column: 20)
!3412 = !DILocalVariable(name: "val", scope: !3413, file: !3400, line: 10, type: !23, align: 8)
!3413 = distinct !DILexicalBlock(scope: !3409, file: !3400, line: 10, column: 11)
!3414 = !DILocalVariable(name: "residual", scope: !3415, file: !3400, line: 10, type: !3038, align: 1)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !3400, line: 10, column: 37)
!3416 = !DILocalVariable(name: "val", scope: !3417, file: !3400, line: 10, type: !23, align: 8)
!3417 = distinct !DILexicalBlock(scope: !3409, file: !3400, line: 10, column: 23)
!3418 = !DILocation(line: 7, column: 29, scope: !3399)
!3419 = !DILocation(line: 8, column: 9, scope: !3407)
!3420 = !DILocation(line: 9, column: 9, scope: !3409)
!3421 = !DILocation(line: 10, column: 20, scope: !3411)
!3422 = !DILocation(line: 10, column: 37, scope: !3415)
!3423 = !DILocation(line: 8, column: 18, scope: !3399)
!3424 = !DILocation(line: 9, column: 18, scope: !3407)
!3425 = !DILocation(line: 10, column: 11, scope: !3409)
!3426 = !DILocation(line: 10, column: 11, scope: !3413)
!3427 = !DILocation(line: 10, column: 23, scope: !3409)
!3428 = !DILocation(line: 10, column: 11, scope: !3411)
!3429 = !DILocation(line: 11, column: 2, scope: !3399)
!3430 = !DILocation(line: 10, column: 23, scope: !3417)
!3431 = !DILocation(line: 10, column: 10, scope: !3409)
!3432 = !DILocation(line: 10, column: 5, scope: !3409)
!3433 = !DILocation(line: 10, column: 23, scope: !3415)
!3434 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN64_$LT$$u5b$bool$u5d$$u20$as$u20$bv..traits..bits_mut..BitsMut$GT$7set_bit17h60d0706e98a36c70E", scope: !3436, file: !3435, line: 138, type: !3439, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3441)
!3435 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/traits/bits_mut.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "4c0e57c260afad9af97a239bffd053fd")
!3436 = !DINamespace(name: "{impl#4}", scope: !3437)
!3437 = !DINamespace(name: "bits_mut", scope: !3438)
!3438 = !DINamespace(name: "traits", scope: !30)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{null, !281, !23, !40}
!3441 = !{!3442, !3443, !3444, !3445}
!3442 = !DILocalVariable(name: "self", arg: 1, scope: !3434, file: !3435, line: 138, type: !281)
!3443 = !DILocalVariable(name: "position", arg: 2, scope: !3434, file: !3435, line: 138, type: !23)
!3444 = !DILocalVariable(name: "value", arg: 3, scope: !3434, file: !3435, line: 138, type: !40)
!3445 = !DILocalVariable(name: "position", scope: !3446, file: !3435, line: 139, type: !13, align: 8)
!3446 = distinct !DILexicalBlock(scope: !3434, file: !3435, line: 139, column: 9)
!3447 = !DILocation(line: 138, column: 16, scope: !3434)
!3448 = !DILocation(line: 138, column: 27, scope: !3434)
!3449 = !DILocation(line: 138, column: 42, scope: !3434)
!3450 = !DILocation(line: 139, column: 24, scope: !3434)
!3451 = !DILocation(line: 139, column: 13, scope: !3446)
!3452 = !DILocation(line: 141, column: 9, scope: !3446)
!3453 = !DILocation(line: 142, column: 6, scope: !3434)
!3454 = distinct !DISubprogram(name: "push_bit", linkageName: "_ZN79_$LT$alloc..vec..Vec$LT$bool$GT$$u20$as$u20$bv..traits..bits_push..BitsPush$GT$8push_bit17h043c58ebebb09512E", scope: !3456, file: !3455, line: 38, type: !2392, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3458)
!3455 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/traits/bits_push.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "5b97ca89df900da51cd5dc6916a49f36")
!3456 = !DINamespace(name: "{impl#0}", scope: !3457)
!3457 = !DINamespace(name: "bits_push", scope: !3438)
!3458 = !{!3459, !3460}
!3459 = !DILocalVariable(name: "self", arg: 1, scope: !3454, file: !3455, line: 38, type: !2336)
!3460 = !DILocalVariable(name: "value", arg: 2, scope: !3454, file: !3455, line: 38, type: !40)
!3461 = !DILocation(line: 38, column: 17, scope: !3454)
!3462 = !DILocation(line: 38, column: 28, scope: !3454)
!3463 = !DILocation(line: 39, column: 9, scope: !3454)
!3464 = !DILocation(line: 40, column: 6, scope: !3454)
!3465 = distinct !DISubprogram(name: "pop_bit", linkageName: "_ZN79_$LT$alloc..vec..Vec$LT$bool$GT$$u20$as$u20$bv..traits..bits_push..BitsPush$GT$7pop_bit17hf9f8324a7af7813bE", scope: !3456, file: !3455, line: 42, type: !2358, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3466)
!3466 = !{!3467}
!3467 = !DILocalVariable(name: "self", arg: 1, scope: !3465, file: !3455, line: 42, type: !2336)
!3468 = !DILocation(line: 42, column: 16, scope: !3465)
!3469 = !DILocation(line: 43, column: 9, scope: !3465)
!3470 = !DILocation(line: 44, column: 6, scope: !3465)
!3471 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN113_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFull$GT$$GT$9bit_slice17h88f3872f0c870a74E", scope: !3473, file: !3472, line: 61, type: !3475, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3478)
!3472 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/traits/bit_sliceable.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "eec90fccbc6f25e17ef6242efd29dc50")
!3473 = !DINamespace(name: "{impl#1}", scope: !3474)
!3474 = !DINamespace(name: "bit_sliceable", scope: !3438)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!249, !249, !3477}
!3477 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !156, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "1653552c7e3df01a09c3f8c9edf4257")
!3478 = !{!3479, !3480}
!3479 = !DILocalVariable(name: "self", arg: 1, scope: !3471, file: !3472, line: 61, type: !249)
!3480 = !DILocalVariable(arg: 2, scope: !3471, file: !3472, line: 61, type: !3477)
!3481 = !DILocation(line: 61, column: 18, scope: !3471)
!3482 = !DILocation(line: 61, column: 24, scope: !3471)
!3483 = !DILocation(line: 63, column: 6, scope: !3471)
!3484 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN121_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFull$GT$$GT$9bit_slice17h8f52b6044d105520E", scope: !3485, file: !3472, line: 69, type: !3486, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3488)
!3485 = !DINamespace(name: "{impl#2}", scope: !3474)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!281, !281, !3477}
!3488 = !{!3489, !3490}
!3489 = !DILocalVariable(name: "self", arg: 1, scope: !3484, file: !3472, line: 69, type: !281)
!3490 = !DILocalVariable(arg: 2, scope: !3484, file: !3472, line: 69, type: !3477)
!3491 = !DILocation(line: 69, column: 18, scope: !3484)
!3492 = !DILocation(line: 69, column: 24, scope: !3484)
!3493 = !DILocation(line: 71, column: 6, scope: !3484)
!3494 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN120_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..Range$LT$u64$GT$$GT$$GT$9bit_slice17h6bbb284229ba1465E", scope: !3495, file: !3472, line: 77, type: !3496, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3502)
!3495 = !DINamespace(name: "{impl#3}", scope: !3474)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!249, !249, !3498}
!3498 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<u64>", scope: !156, file: !2, size: 128, align: 64, elements: !3499, templateParams: !323, identifier: "5163a92aa0339e213ccf828232d67529")
!3499 = !{!3500, !3501}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3498, file: !2, baseType: !23, size: 64, align: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3498, file: !2, baseType: !23, size: 64, align: 64, offset: 64)
!3502 = !{!3503, !3504}
!3503 = !DILocalVariable(name: "self", arg: 1, scope: !3494, file: !3472, line: 77, type: !249)
!3504 = !DILocalVariable(name: "range", arg: 2, scope: !3494, file: !3472, line: 77, type: !3498)
!3505 = !DILocation(line: 77, column: 18, scope: !3494)
!3506 = !DILocation(line: 77, column: 24, scope: !3494)
!3507 = !DILocation(line: 78, column: 15, scope: !3494)
!3508 = !DILocation(line: 78, column: 10, scope: !3494)
!3509 = !DILocation(line: 79, column: 6, scope: !3494)
!3510 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN128_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..Range$LT$u64$GT$$GT$$GT$9bit_slice17heb298f6e7d5710ceE", scope: !3511, file: !3472, line: 85, type: !3512, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3514)
!3511 = !DINamespace(name: "{impl#4}", scope: !3474)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!281, !281, !3498}
!3514 = !{!3515, !3516}
!3515 = !DILocalVariable(name: "self", arg: 1, scope: !3510, file: !3472, line: 85, type: !281)
!3516 = !DILocalVariable(name: "range", arg: 2, scope: !3510, file: !3472, line: 85, type: !3498)
!3517 = !DILocation(line: 85, column: 18, scope: !3510)
!3518 = !DILocation(line: 85, column: 24, scope: !3510)
!3519 = !DILocation(line: 86, column: 19, scope: !3510)
!3520 = !DILocation(line: 86, column: 14, scope: !3510)
!3521 = !DILocation(line: 87, column: 6, scope: !3510)
!3522 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN129_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeInclusive$LT$u64$GT$$GT$$GT$9bit_slice17hbdd0e614e6b82aecE", scope: !3523, file: !3472, line: 94, type: !3524, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3526)
!3523 = !DINamespace(name: "{impl#5}", scope: !3474)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!249, !249, !318}
!3526 = !{!3527, !3528, !3529, !3531}
!3527 = !DILocalVariable(name: "self", arg: 1, scope: !3522, file: !3472, line: 94, type: !249)
!3528 = !DILocalVariable(name: "range", arg: 2, scope: !3522, file: !3472, line: 94, type: !318)
!3529 = !DILocalVariable(name: "start", scope: !3530, file: !3472, line: 95, type: !23, align: 8)
!3530 = distinct !DILexicalBlock(scope: !3522, file: !3472, line: 95, column: 9)
!3531 = !DILocalVariable(name: "end", scope: !3530, file: !3472, line: 95, type: !23, align: 8)
!3532 = !DILocation(line: 94, column: 18, scope: !3522)
!3533 = !DILocation(line: 94, column: 24, scope: !3522)
!3534 = !DILocation(line: 95, column: 49, scope: !3522)
!3535 = !DILocation(line: 95, column: 28, scope: !3522)
!3536 = !DILocation(line: 95, column: 14, scope: !3522)
!3537 = !DILocation(line: 95, column: 14, scope: !3530)
!3538 = !DILocation(line: 95, column: 21, scope: !3522)
!3539 = !DILocation(line: 95, column: 21, scope: !3530)
!3540 = !DILocation(line: 100, column: 33, scope: !3530)
!3541 = !DILocation(line: 100, column: 15, scope: !3530)
!3542 = !DILocation(line: 100, column: 10, scope: !3530)
!3543 = !DILocation(line: 101, column: 6, scope: !3522)
!3544 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN137_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeInclusive$LT$u64$GT$$GT$$GT$9bit_slice17hc529d8d575dee002E", scope: !3545, file: !3472, line: 108, type: !3546, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3548)
!3545 = !DINamespace(name: "{impl#6}", scope: !3474)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!281, !281, !318}
!3548 = !{!3549, !3550, !3551, !3553}
!3549 = !DILocalVariable(name: "self", arg: 1, scope: !3544, file: !3472, line: 108, type: !281)
!3550 = !DILocalVariable(name: "range", arg: 2, scope: !3544, file: !3472, line: 108, type: !318)
!3551 = !DILocalVariable(name: "start", scope: !3552, file: !3472, line: 109, type: !23, align: 8)
!3552 = distinct !DILexicalBlock(scope: !3544, file: !3472, line: 109, column: 9)
!3553 = !DILocalVariable(name: "end", scope: !3552, file: !3472, line: 109, type: !23, align: 8)
!3554 = !DILocation(line: 108, column: 18, scope: !3544)
!3555 = !DILocation(line: 108, column: 24, scope: !3544)
!3556 = !DILocation(line: 109, column: 49, scope: !3544)
!3557 = !DILocation(line: 109, column: 28, scope: !3544)
!3558 = !DILocation(line: 109, column: 14, scope: !3544)
!3559 = !DILocation(line: 109, column: 14, scope: !3552)
!3560 = !DILocation(line: 109, column: 21, scope: !3544)
!3561 = !DILocation(line: 109, column: 21, scope: !3552)
!3562 = !DILocation(line: 111, column: 37, scope: !3552)
!3563 = !DILocation(line: 111, column: 19, scope: !3552)
!3564 = !DILocation(line: 111, column: 14, scope: !3552)
!3565 = !DILocation(line: 112, column: 6, scope: !3544)
!3566 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN124_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFrom$LT$u64$GT$$GT$$GT$9bit_slice17hc9a80733a4cdf2baE", scope: !3567, file: !3472, line: 118, type: !3568, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3573)
!3567 = !DINamespace(name: "{impl#7}", scope: !3474)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!249, !249, !3570}
!3570 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<u64>", scope: !156, file: !2, size: 64, align: 64, elements: !3571, templateParams: !323, identifier: "9d67abfb9fd5dda8b6907bdcde56d6e")
!3571 = !{!3572}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3570, file: !2, baseType: !23, size: 64, align: 64)
!3573 = !{!3574, !3575}
!3574 = !DILocalVariable(name: "self", arg: 1, scope: !3566, file: !3472, line: 118, type: !249)
!3575 = !DILocalVariable(name: "range", arg: 2, scope: !3566, file: !3472, line: 118, type: !3570)
!3576 = !DILocation(line: 118, column: 18, scope: !3566)
!3577 = !DILocation(line: 118, column: 24, scope: !3566)
!3578 = !DILocation(line: 119, column: 15, scope: !3566)
!3579 = !DILocation(line: 119, column: 10, scope: !3566)
!3580 = !DILocation(line: 120, column: 6, scope: !3566)
!3581 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN132_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeFrom$LT$u64$GT$$GT$$GT$9bit_slice17h93487e511b078f27E", scope: !3582, file: !3472, line: 126, type: !3583, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3585)
!3582 = !DINamespace(name: "{impl#8}", scope: !3474)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!281, !281, !3570}
!3585 = !{!3586, !3587}
!3586 = !DILocalVariable(name: "self", arg: 1, scope: !3581, file: !3472, line: 126, type: !281)
!3587 = !DILocalVariable(name: "range", arg: 2, scope: !3581, file: !3472, line: 126, type: !3570)
!3588 = !DILocation(line: 126, column: 18, scope: !3581)
!3589 = !DILocation(line: 126, column: 24, scope: !3581)
!3590 = !DILocation(line: 127, column: 19, scope: !3581)
!3591 = !DILocation(line: 127, column: 14, scope: !3581)
!3592 = !DILocation(line: 128, column: 6, scope: !3581)
!3593 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN122_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeTo$LT$u64$GT$$GT$$GT$9bit_slice17h730fedd2fd985cfbE", scope: !3594, file: !3472, line: 134, type: !3595, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3600)
!3594 = !DINamespace(name: "{impl#9}", scope: !3474)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!249, !249, !3597}
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<u64>", scope: !156, file: !2, size: 64, align: 64, elements: !3598, templateParams: !323, identifier: "908d767027c0886fa4518f7c24205aa")
!3598 = !{!3599}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3597, file: !2, baseType: !23, size: 64, align: 64)
!3600 = !{!3601, !3602}
!3601 = !DILocalVariable(name: "self", arg: 1, scope: !3593, file: !3472, line: 134, type: !249)
!3602 = !DILocalVariable(name: "range", arg: 2, scope: !3593, file: !3472, line: 134, type: !3597)
!3603 = !DILocation(line: 134, column: 18, scope: !3593)
!3604 = !DILocation(line: 134, column: 24, scope: !3593)
!3605 = !DILocation(line: 135, column: 15, scope: !3593)
!3606 = !DILocation(line: 135, column: 10, scope: !3593)
!3607 = !DILocation(line: 136, column: 6, scope: !3593)
!3608 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN130_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeTo$LT$u64$GT$$GT$$GT$9bit_slice17h53b378e7bd4cfa2fE", scope: !3609, file: !3472, line: 142, type: !3610, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3612)
!3609 = !DINamespace(name: "{impl#10}", scope: !3474)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!281, !281, !3597}
!3612 = !{!3613, !3614}
!3613 = !DILocalVariable(name: "self", arg: 1, scope: !3608, file: !3472, line: 142, type: !281)
!3614 = !DILocalVariable(name: "range", arg: 2, scope: !3608, file: !3472, line: 142, type: !3597)
!3615 = !DILocation(line: 142, column: 18, scope: !3608)
!3616 = !DILocation(line: 142, column: 24, scope: !3608)
!3617 = !DILocation(line: 143, column: 19, scope: !3608)
!3618 = !DILocation(line: 143, column: 14, scope: !3608)
!3619 = !DILocation(line: 144, column: 6, scope: !3608)
!3620 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN131_$LT$$RF$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeToInclusive$LT$u64$GT$$GT$$GT$9bit_slice17h50fd86103fdadfe7E", scope: !3621, file: !3472, line: 151, type: !3622, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3627)
!3621 = !DINamespace(name: "{impl#11}", scope: !3474)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!249, !249, !3624}
!3624 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeToInclusive<u64>", scope: !156, file: !2, size: 64, align: 64, elements: !3625, templateParams: !323, identifier: "26adabde715df22233f31b1eecc6fe1c")
!3625 = !{!3626}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3624, file: !2, baseType: !23, size: 64, align: 64)
!3627 = !{!3628, !3629}
!3628 = !DILocalVariable(name: "self", arg: 1, scope: !3620, file: !3472, line: 151, type: !249)
!3629 = !DILocalVariable(name: "range", arg: 2, scope: !3620, file: !3472, line: 151, type: !3624)
!3630 = !DILocation(line: 151, column: 18, scope: !3620)
!3631 = !DILocation(line: 151, column: 24, scope: !3620)
!3632 = !DILocation(line: 152, column: 15, scope: !3620)
!3633 = !DILocation(line: 152, column: 10, scope: !3620)
!3634 = !DILocation(line: 153, column: 6, scope: !3620)
!3635 = distinct !DISubprogram(name: "bit_slice", linkageName: "_ZN139_$LT$$RF$mut$u20$$u5b$bool$u5d$$u20$as$u20$bv..traits..bit_sliceable..BitSliceable$LT$core..ops..range..RangeToInclusive$LT$u64$GT$$GT$$GT$9bit_slice17h874f52396323de89E", scope: !3636, file: !3472, line: 160, type: !3637, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3639)
!3636 = !DINamespace(name: "{impl#12}", scope: !3474)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!281, !281, !3624}
!3639 = !{!3640, !3641}
!3640 = !DILocalVariable(name: "self", arg: 1, scope: !3635, file: !3472, line: 160, type: !281)
!3641 = !DILocalVariable(name: "range", arg: 2, scope: !3635, file: !3472, line: 160, type: !3624)
!3642 = !DILocation(line: 160, column: 18, scope: !3635)
!3643 = !DILocation(line: 160, column: 24, scope: !3635)
!3644 = !DILocation(line: 161, column: 19, scope: !3635)
!3645 = !DILocation(line: 161, column: 14, scope: !3635)
!3646 = !DILocation(line: 162, column: 6, scope: !3635)
!3647 = distinct !DISubprogram(name: "to_usize", linkageName: "_ZN46_$LT$u64$u20$as$u20$bv..storage..BlockType$GT$8to_usize17h54f0cfebe71a81d3E", scope: !3649, file: !3648, line: 305, type: !3650, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3652)
!3648 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/storage.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "fe1bea1df14f15a5d50c1dc18ea24fd8")
!3649 = !DINamespace(name: "{impl#8}", scope: !29)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!796, !23}
!3652 = !{!3653}
!3653 = !DILocalVariable(name: "self", arg: 1, scope: !3647, file: !3648, line: 305, type: !23)
!3654 = !DILocation(line: 305, column: 25, scope: !3647)
!3655 = !DILocation(line: 306, column: 20, scope: !3647)
!3656 = !DILocation(line: 309, column: 21, scope: !3647)
!3657 = !DILocation(line: 306, column: 17, scope: !3647)
!3658 = !DILocation(line: 307, column: 21, scope: !3647)
!3659 = !DILocation(line: 311, column: 14, scope: !3647)
!3660 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$bv..storage..Address$u20$as$u20$core..fmt..Debug$GT$3fmt17h4cb1f768e2b19ad8E", scope: !3661, file: !3648, line: 336, type: !3662, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3664)
!3661 = !DINamespace(name: "{impl#15}", scope: !29)
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!115, !27, !788}
!3664 = !{!3665, !3666, !3667, !3669, !3670}
!3665 = !DILocalVariable(name: "self", arg: 1, scope: !3660, file: !3648, line: 336, type: !27)
!3666 = !DILocalVariable(name: "f", arg: 2, scope: !3660, file: !3648, line: 336, type: !788)
!3667 = !DILocalVariable(name: "__self_0_0", scope: !3668, file: !3648, line: 339, type: !12, align: 8)
!3668 = distinct !DILexicalBlock(scope: !3660, file: !3648, line: 336, column: 23)
!3669 = !DILocalVariable(name: "__self_0_1", scope: !3668, file: !3648, line: 341, type: !12, align: 8)
!3670 = !DILocalVariable(name: "debug_trait_builder", scope: !3671, file: !1709, line: 1, type: !3673, align: 8)
!3671 = !DILexicalBlockFile(scope: !3672, file: !1709, discriminator: 0)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !3648, line: 336, column: 23)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugStruct", baseType: !3674, size: 64, align: 64, dwarfAddressSpace: 0)
!3674 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugStruct", scope: !3675, file: !2, size: 128, align: 64, elements: !3676, templateParams: !4, identifier: "b8ccb8ae22ce0b331b3e3a943d09da82")
!3675 = !DINamespace(name: "builders", scope: !123)
!3676 = !{!3677, !3678, !3679}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3674, file: !2, baseType: !788, size: 64, align: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3674, file: !2, baseType: !115, size: 8, align: 8, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !3674, file: !2, baseType: !40, size: 8, align: 8, offset: 72)
!3680 = !DILocation(line: 336, column: 23, scope: !3660)
!3681 = !DILocation(line: 339, column: 5, scope: !3660)
!3682 = !DILocation(line: 339, column: 5, scope: !3668)
!3683 = !DILocation(line: 341, column: 5, scope: !3660)
!3684 = !DILocation(line: 341, column: 5, scope: !3668)
!3685 = !DILocation(line: 336, column: 23, scope: !3668)
!3686 = !DILocation(line: 1, column: 1, scope: !3671)
!3687 = !DILocation(line: 339, column: 5, scope: !3672)
!3688 = !DILocation(line: 336, column: 23, scope: !3672)
!3689 = !DILocation(line: 341, column: 5, scope: !3672)
!3690 = !DILocation(line: 336, column: 28, scope: !3660)
!3691 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$bv..slice..SliceSpan$u20$as$u20$core..fmt..Debug$GT$3fmt17hf0414e2f8b3af5a5E", scope: !3693, file: !3692, line: 12, type: !3694, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3702)
!3692 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/slice.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "f642ae57dcbe8c10b4a7eb917b4c70db")
!3693 = !DINamespace(name: "{impl#38}", scope: !38)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!115, !3696, !788}
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&SliceSpan", baseType: !3697, size: 64, align: 64, dwarfAddressSpace: 0)
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "SliceSpan", scope: !38, file: !2, size: 192, align: 64, elements: !3698, templateParams: !4, identifier: "9d83cce36ee94dd97d5a5d85113102b0")
!3698 = !{!3699, !3700, !3701}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3697, file: !2, baseType: !18, size: 8, align: 8, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3697, file: !2, baseType: !23, size: 64, align: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_blocks", scope: !3697, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!3702 = !{!3703, !3704, !3705, !3707, !3708, !3709}
!3703 = !DILocalVariable(name: "self", arg: 1, scope: !3691, file: !3692, line: 12, type: !3696)
!3704 = !DILocalVariable(name: "f", arg: 2, scope: !3691, file: !3692, line: 12, type: !788)
!3705 = !DILocalVariable(name: "__self_0_0", scope: !3706, file: !3692, line: 14, type: !17, align: 8)
!3706 = distinct !DILexicalBlock(scope: !3691, file: !3692, line: 12, column: 23)
!3707 = !DILocalVariable(name: "__self_0_1", scope: !3706, file: !3692, line: 15, type: !22, align: 8)
!3708 = !DILocalVariable(name: "__self_0_2", scope: !3706, file: !3692, line: 16, type: !12, align: 8)
!3709 = !DILocalVariable(name: "debug_trait_builder", scope: !3710, file: !1709, line: 1, type: !3673, align: 8)
!3710 = !DILexicalBlockFile(scope: !3711, file: !1709, discriminator: 0)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !3692, line: 12, column: 23)
!3712 = !DILocation(line: 12, column: 23, scope: !3691)
!3713 = !DILocation(line: 14, column: 5, scope: !3691)
!3714 = !DILocation(line: 14, column: 5, scope: !3706)
!3715 = !DILocation(line: 15, column: 5, scope: !3691)
!3716 = !DILocation(line: 15, column: 5, scope: !3706)
!3717 = !DILocation(line: 16, column: 5, scope: !3691)
!3718 = !DILocation(line: 16, column: 5, scope: !3706)
!3719 = !DILocation(line: 12, column: 23, scope: !3706)
!3720 = !DILocation(line: 1, column: 1, scope: !3710)
!3721 = !DILocation(line: 14, column: 5, scope: !3711)
!3722 = !DILocation(line: 12, column: 23, scope: !3711)
!3723 = !DILocation(line: 15, column: 5, scope: !3711)
!3724 = !DILocation(line: 16, column: 5, scope: !3711)
!3725 = !DILocation(line: 12, column: 28, scope: !3691)
!3726 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$bv..slice..BlockAddress$u20$as$u20$core..fmt..Debug$GT$3fmt17h214c7ce1f38734e3E", scope: !3727, file: !3692, line: 23, type: !3728, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3745)
!3727 = !DINamespace(name: "{impl#41}", scope: !38)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!115, !3730, !788}
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&BlockAddress", baseType: !3731, size: 64, align: 64, dwarfAddressSpace: 0)
!3731 = !DICompositeType(tag: DW_TAG_structure_type, name: "BlockAddress", scope: !38, file: !2, size: 256, align: 64, elements: !3732, identifier: "8940329f3cb0583fc96e656e10f447c8")
!3732 = !{!3733}
!3733 = !DICompositeType(tag: DW_TAG_variant_part, scope: !38, file: !2, size: 256, align: 64, elements: !3734, templateParams: !4, identifier: "8940329f3cb0583fc96e656e10f447c8_variant_part", discriminator: !3744)
!3734 = !{!3735, !3739}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "FullBlockAt", scope: !3733, file: !2, baseType: !3736, size: 256, align: 64, extraData: i64 0)
!3736 = !DICompositeType(tag: DW_TAG_structure_type, name: "FullBlockAt", scope: !3731, file: !2, size: 256, align: 64, elements: !3737, templateParams: !4, identifier: "8940329f3cb0583fc96e656e10f447c8::FullBlockAt")
!3737 = !{!3738}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3736, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "SomeBitsAt", scope: !3733, file: !2, baseType: !3740, size: 256, align: 64, extraData: i64 1)
!3740 = !DICompositeType(tag: DW_TAG_structure_type, name: "SomeBitsAt", scope: !3731, file: !2, size: 256, align: 64, elements: !3741, templateParams: !4, identifier: "8940329f3cb0583fc96e656e10f447c8::SomeBitsAt")
!3741 = !{!3742, !3743}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3740, file: !2, baseType: !28, size: 128, align: 64, offset: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3740, file: !2, baseType: !13, size: 64, align: 64, offset: 192)
!3744 = !DIDerivedType(tag: DW_TAG_member, scope: !38, file: !2, baseType: !23, size: 64, align: 64, flags: DIFlagArtificial)
!3745 = !{!3746, !3747, !3748, !3750, !3759, !3761, !3762}
!3746 = !DILocalVariable(name: "self", arg: 1, scope: !3726, file: !3692, line: 23, type: !3730)
!3747 = !DILocalVariable(name: "f", arg: 2, scope: !3726, file: !3692, line: 23, type: !788)
!3748 = !DILocalVariable(name: "__self_0", scope: !3749, file: !3692, line: 25, type: !12, align: 8)
!3749 = distinct !DILexicalBlock(scope: !3726, file: !3692, line: 23, column: 23)
!3750 = !DILocalVariable(name: "debug_trait_builder", scope: !3751, file: !3692, line: 23, type: !3752, align: 8)
!3751 = distinct !DILexicalBlock(scope: !3749, file: !3692, line: 23, column: 23)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugTuple", baseType: !3753, size: 64, align: 64, dwarfAddressSpace: 0)
!3753 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugTuple", scope: !3675, file: !2, size: 192, align: 64, elements: !3754, templateParams: !4, identifier: "b87e16a2b5c8e5fbfa596aeab6e7643")
!3754 = !{!3755, !3756, !3757, !3758}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3753, file: !2, baseType: !788, size: 64, align: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3753, file: !2, baseType: !115, size: 8, align: 8, offset: 128)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !3753, file: !2, baseType: !13, size: 64, align: 64, offset: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "empty_name", scope: !3753, file: !2, baseType: !40, size: 8, align: 8, offset: 136)
!3759 = !DILocalVariable(name: "__self_0", scope: !3760, file: !3692, line: 26, type: !27, align: 8)
!3760 = distinct !DILexicalBlock(scope: !3726, file: !3692, line: 23, column: 23)
!3761 = !DILocalVariable(name: "__self_1", scope: !3760, file: !3692, line: 26, type: !12, align: 8)
!3762 = !DILocalVariable(name: "debug_trait_builder", scope: !3763, file: !3692, line: 23, type: !3752, align: 8)
!3763 = distinct !DILexicalBlock(scope: !3760, file: !3692, line: 23, column: 23)
!3764 = !DILocation(line: 23, column: 23, scope: !3726)
!3765 = !DILocation(line: 25, column: 17, scope: !3726)
!3766 = !DILocation(line: 25, column: 17, scope: !3749)
!3767 = !DILocation(line: 23, column: 23, scope: !3749)
!3768 = !DILocation(line: 26, column: 16, scope: !3726)
!3769 = !DILocation(line: 26, column: 16, scope: !3760)
!3770 = !DILocation(line: 26, column: 25, scope: !3726)
!3771 = !DILocation(line: 26, column: 25, scope: !3760)
!3772 = !DILocation(line: 23, column: 23, scope: !3760)
!3773 = !DILocation(line: 23, column: 23, scope: !3763)
!3774 = !DILocation(line: 26, column: 16, scope: !3763)
!3775 = !DILocation(line: 26, column: 25, scope: !3763)
!3776 = !DILocation(line: 23, column: 28, scope: !3726)
!3777 = !DILocation(line: 23, column: 23, scope: !3751)
!3778 = !DILocation(line: 25, column: 17, scope: !3751)
!3779 = distinct !DISubprogram(name: "expecting", linkageName: "_ZN323_$LT$$LT$bv..bit_vec..BitVec$LT$Block$GT$$u20$as$u20$serde..de..Deserialize$GT$..deserialize.._..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$$LT$bv..bit_vec..BitVec$LT$Block$GT$$u20$as$u20$serde..de..Deserialize$GT$..deserialize..Unchecked$LT$Block$GT$$GT$..deserialize..__FieldVisitor$u20$as$u20$serde..de..Visitor$GT$9expecting17h602ff1b02b8b3ee1E", scope: !3781, file: !3780, line: 61, type: !3787, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3791)
!3780 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/bit_vec/mod.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "2f0bea9042edcbc4f89004187b343135")
!3781 = !DINamespace(name: "{impl#0}", scope: !3782)
!3782 = !DINamespace(name: "deserialize", scope: !3783)
!3783 = !DINamespace(name: "{impl#0}", scope: !3784)
!3784 = !DINamespace(name: "_", scope: !3785)
!3785 = !DINamespace(name: "deserialize", scope: !3786)
!3786 = !DINamespace(name: "{impl#0}", scope: !54)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!115, !3789, !788}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&__FieldVisitor", baseType: !3790, size: 64, align: 64, dwarfAddressSpace: 0)
!3790 = !DICompositeType(tag: DW_TAG_structure_type, name: "__FieldVisitor", scope: !3782, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "353e50f341caaec87bbcc753e388e3")
!3791 = !{!3792, !3793}
!3792 = !DILocalVariable(name: "self", arg: 1, scope: !3779, file: !3780, line: 61, type: !3789)
!3793 = !DILocalVariable(name: "__formatter", arg: 2, scope: !3779, file: !3780, line: 61, type: !788)
!3794 = !DILocation(line: 61, column: 18, scope: !3779)
!3795 = !DILocation(line: 61, column: 29, scope: !3779)
!3796 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7bit_len17hab3323a5f0a42cc3E", scope: !3798, file: !3797, line: 46, type: !3800, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3806)
!3797 = !DIFile(filename: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1/src/array_n_impls.rs", directory: "/home/osboxes/.cargo/registry/src/github.com-1ecc6299db9ec823/bv-0.11.1", checksumkind: CSK_MD5, checksum: "0d560f2707a84da74592ff4e0d8d3c53")
!3798 = !DINamespace(name: "{impl#3}", scope: !3799)
!3799 = !DINamespace(name: "array_n_impls", scope: !30)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!23, !3802}
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 0]", baseType: !3803, size: 64, align: 64, dwarfAddressSpace: 0)
!3803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, align: 8, elements: !3804)
!3804 = !{!3805}
!3805 = !DISubrange(count: 0, lowerBound: 0)
!3806 = !{!3807}
!3807 = !DILocalVariable(name: "self", arg: 1, scope: !3796, file: !3797, line: 46, type: !3802)
!3808 = !DILocation(line: 46, column: 28, scope: !3796)
!3809 = !DILocation(line: 48, column: 18, scope: !3796)
!3810 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7get_bit17hb56f2bb5ecf0a9a2E", scope: !3798, file: !3797, line: 50, type: !3811, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3813)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!40, !3802, !23}
!3813 = !{!3814, !3815}
!3814 = !DILocalVariable(name: "self", arg: 1, scope: !3810, file: !3797, line: 50, type: !3802)
!3815 = !DILocalVariable(name: "position", arg: 2, scope: !3810, file: !3797, line: 50, type: !23)
!3816 = !DILocation(line: 50, column: 28, scope: !3810)
!3817 = !DILocation(line: 50, column: 35, scope: !3810)
!3818 = !DILocation(line: 51, column: 21, scope: !3810)
!3819 = !DILocation(line: 52, column: 18, scope: !3810)
!3820 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$0$u5d$$GT$7set_bit17hb161c47e77e114ecE", scope: !3821, file: !3797, line: 56, type: !3822, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3825)
!3821 = !DINamespace(name: "{impl#4}", scope: !3799)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{null, !3824, !23, !40}
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 0]", baseType: !3803, size: 64, align: 64, dwarfAddressSpace: 0)
!3825 = !{!3826, !3827, !3828}
!3826 = !DILocalVariable(name: "self", arg: 1, scope: !3820, file: !3797, line: 56, type: !3824)
!3827 = !DILocalVariable(name: "position", arg: 2, scope: !3820, file: !3797, line: 56, type: !23)
!3828 = !DILocalVariable(name: "value", arg: 3, scope: !3820, file: !3797, line: 56, type: !40)
!3829 = !DILocation(line: 56, column: 28, scope: !3820)
!3830 = !DILocation(line: 56, column: 39, scope: !3820)
!3831 = !DILocation(line: 56, column: 54, scope: !3820)
!3832 = !DILocation(line: 57, column: 21, scope: !3820)
!3833 = !DILocation(line: 58, column: 18, scope: !3820)
!3834 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7bit_len17he18952877950703bE", scope: !3835, file: !3797, line: 46, type: !3836, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3842)
!3835 = !DINamespace(name: "{impl#9}", scope: !3799)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!23, !3838}
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 1]", baseType: !3839, size: 64, align: 64, dwarfAddressSpace: 0)
!3839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8, align: 8, elements: !3840)
!3840 = !{!3841}
!3841 = !DISubrange(count: 1, lowerBound: 0)
!3842 = !{!3843}
!3843 = !DILocalVariable(name: "self", arg: 1, scope: !3834, file: !3797, line: 46, type: !3838)
!3844 = !DILocation(line: 46, column: 28, scope: !3834)
!3845 = !DILocation(line: 48, column: 18, scope: !3834)
!3846 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7get_bit17habf32bea56324096E", scope: !3835, file: !3797, line: 50, type: !3847, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!40, !3838, !23}
!3849 = !{!3850, !3851}
!3850 = !DILocalVariable(name: "self", arg: 1, scope: !3846, file: !3797, line: 50, type: !3838)
!3851 = !DILocalVariable(name: "position", arg: 2, scope: !3846, file: !3797, line: 50, type: !23)
!3852 = !DILocation(line: 50, column: 28, scope: !3846)
!3853 = !DILocation(line: 50, column: 35, scope: !3846)
!3854 = !DILocation(line: 51, column: 21, scope: !3846)
!3855 = !DILocation(line: 52, column: 18, scope: !3846)
!3856 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1$u5d$$GT$7set_bit17h0421d474365511faE", scope: !3857, file: !3797, line: 56, type: !3858, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3861)
!3857 = !DINamespace(name: "{impl#10}", scope: !3799)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !3860, !23, !40}
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 1]", baseType: !3839, size: 64, align: 64, dwarfAddressSpace: 0)
!3861 = !{!3862, !3863, !3864}
!3862 = !DILocalVariable(name: "self", arg: 1, scope: !3856, file: !3797, line: 56, type: !3860)
!3863 = !DILocalVariable(name: "position", arg: 2, scope: !3856, file: !3797, line: 56, type: !23)
!3864 = !DILocalVariable(name: "value", arg: 3, scope: !3856, file: !3797, line: 56, type: !40)
!3865 = !DILocation(line: 56, column: 28, scope: !3856)
!3866 = !DILocation(line: 56, column: 39, scope: !3856)
!3867 = !DILocation(line: 56, column: 54, scope: !3856)
!3868 = !DILocation(line: 57, column: 21, scope: !3856)
!3869 = !DILocation(line: 58, column: 18, scope: !3856)
!3870 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7bit_len17hee0a3f3e599a3306E", scope: !3871, file: !3797, line: 46, type: !3872, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3878)
!3871 = !DINamespace(name: "{impl#15}", scope: !3799)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!23, !3874}
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 2]", baseType: !3875, size: 64, align: 64, dwarfAddressSpace: 0)
!3875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 16, align: 8, elements: !3876)
!3876 = !{!3877}
!3877 = !DISubrange(count: 2, lowerBound: 0)
!3878 = !{!3879}
!3879 = !DILocalVariable(name: "self", arg: 1, scope: !3870, file: !3797, line: 46, type: !3874)
!3880 = !DILocation(line: 46, column: 28, scope: !3870)
!3881 = !DILocation(line: 48, column: 18, scope: !3870)
!3882 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7get_bit17h7d1bdaa9a08b8ed7E", scope: !3871, file: !3797, line: 50, type: !3883, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3885)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!40, !3874, !23}
!3885 = !{!3886, !3887}
!3886 = !DILocalVariable(name: "self", arg: 1, scope: !3882, file: !3797, line: 50, type: !3874)
!3887 = !DILocalVariable(name: "position", arg: 2, scope: !3882, file: !3797, line: 50, type: !23)
!3888 = !DILocation(line: 50, column: 28, scope: !3882)
!3889 = !DILocation(line: 50, column: 35, scope: !3882)
!3890 = !DILocation(line: 51, column: 21, scope: !3882)
!3891 = !DILocation(line: 52, column: 18, scope: !3882)
!3892 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$2$u5d$$GT$7set_bit17h9d4d8e2d195c0700E", scope: !3893, file: !3797, line: 56, type: !3894, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3897)
!3893 = !DINamespace(name: "{impl#16}", scope: !3799)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{null, !3896, !23, !40}
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 2]", baseType: !3875, size: 64, align: 64, dwarfAddressSpace: 0)
!3897 = !{!3898, !3899, !3900}
!3898 = !DILocalVariable(name: "self", arg: 1, scope: !3892, file: !3797, line: 56, type: !3896)
!3899 = !DILocalVariable(name: "position", arg: 2, scope: !3892, file: !3797, line: 56, type: !23)
!3900 = !DILocalVariable(name: "value", arg: 3, scope: !3892, file: !3797, line: 56, type: !40)
!3901 = !DILocation(line: 56, column: 28, scope: !3892)
!3902 = !DILocation(line: 56, column: 39, scope: !3892)
!3903 = !DILocation(line: 56, column: 54, scope: !3892)
!3904 = !DILocation(line: 57, column: 21, scope: !3892)
!3905 = !DILocation(line: 58, column: 18, scope: !3892)
!3906 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7bit_len17h88003a7f0e443dbcE", scope: !3907, file: !3797, line: 46, type: !3908, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3912)
!3907 = !DINamespace(name: "{impl#21}", scope: !3799)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!23, !3910}
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 3]", baseType: !3911, size: 64, align: 64, dwarfAddressSpace: 0)
!3911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 24, align: 8, elements: !817)
!3912 = !{!3913}
!3913 = !DILocalVariable(name: "self", arg: 1, scope: !3906, file: !3797, line: 46, type: !3910)
!3914 = !DILocation(line: 46, column: 28, scope: !3906)
!3915 = !DILocation(line: 48, column: 18, scope: !3906)
!3916 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7get_bit17h00eefa0dd9857ac1E", scope: !3907, file: !3797, line: 50, type: !3917, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3919)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!40, !3910, !23}
!3919 = !{!3920, !3921}
!3920 = !DILocalVariable(name: "self", arg: 1, scope: !3916, file: !3797, line: 50, type: !3910)
!3921 = !DILocalVariable(name: "position", arg: 2, scope: !3916, file: !3797, line: 50, type: !23)
!3922 = !DILocation(line: 50, column: 28, scope: !3916)
!3923 = !DILocation(line: 50, column: 35, scope: !3916)
!3924 = !DILocation(line: 51, column: 21, scope: !3916)
!3925 = !DILocation(line: 52, column: 18, scope: !3916)
!3926 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$3$u5d$$GT$7set_bit17h58168039a30ba33aE", scope: !3927, file: !3797, line: 56, type: !3928, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3931)
!3927 = !DINamespace(name: "{impl#22}", scope: !3799)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{null, !3930, !23, !40}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 3]", baseType: !3911, size: 64, align: 64, dwarfAddressSpace: 0)
!3931 = !{!3932, !3933, !3934}
!3932 = !DILocalVariable(name: "self", arg: 1, scope: !3926, file: !3797, line: 56, type: !3930)
!3933 = !DILocalVariable(name: "position", arg: 2, scope: !3926, file: !3797, line: 56, type: !23)
!3934 = !DILocalVariable(name: "value", arg: 3, scope: !3926, file: !3797, line: 56, type: !40)
!3935 = !DILocation(line: 56, column: 28, scope: !3926)
!3936 = !DILocation(line: 56, column: 39, scope: !3926)
!3937 = !DILocation(line: 56, column: 54, scope: !3926)
!3938 = !DILocation(line: 57, column: 21, scope: !3926)
!3939 = !DILocation(line: 58, column: 18, scope: !3926)
!3940 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7bit_len17h2414192b10521f73E", scope: !3941, file: !3797, line: 46, type: !3942, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3948)
!3941 = !DINamespace(name: "{impl#27}", scope: !3799)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!23, !3944}
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 4]", baseType: !3945, size: 64, align: 64, dwarfAddressSpace: 0)
!3945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 32, align: 8, elements: !3946)
!3946 = !{!3947}
!3947 = !DISubrange(count: 4, lowerBound: 0)
!3948 = !{!3949}
!3949 = !DILocalVariable(name: "self", arg: 1, scope: !3940, file: !3797, line: 46, type: !3944)
!3950 = !DILocation(line: 46, column: 28, scope: !3940)
!3951 = !DILocation(line: 48, column: 18, scope: !3940)
!3952 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7get_bit17h1a8da3366fe2de87E", scope: !3941, file: !3797, line: 50, type: !3953, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!40, !3944, !23}
!3955 = !{!3956, !3957}
!3956 = !DILocalVariable(name: "self", arg: 1, scope: !3952, file: !3797, line: 50, type: !3944)
!3957 = !DILocalVariable(name: "position", arg: 2, scope: !3952, file: !3797, line: 50, type: !23)
!3958 = !DILocation(line: 50, column: 28, scope: !3952)
!3959 = !DILocation(line: 50, column: 35, scope: !3952)
!3960 = !DILocation(line: 51, column: 21, scope: !3952)
!3961 = !DILocation(line: 52, column: 18, scope: !3952)
!3962 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$4$u5d$$GT$7set_bit17he2b68de1644c2d11E", scope: !3963, file: !3797, line: 56, type: !3964, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3967)
!3963 = !DINamespace(name: "{impl#28}", scope: !3799)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{null, !3966, !23, !40}
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 4]", baseType: !3945, size: 64, align: 64, dwarfAddressSpace: 0)
!3967 = !{!3968, !3969, !3970}
!3968 = !DILocalVariable(name: "self", arg: 1, scope: !3962, file: !3797, line: 56, type: !3966)
!3969 = !DILocalVariable(name: "position", arg: 2, scope: !3962, file: !3797, line: 56, type: !23)
!3970 = !DILocalVariable(name: "value", arg: 3, scope: !3962, file: !3797, line: 56, type: !40)
!3971 = !DILocation(line: 56, column: 28, scope: !3962)
!3972 = !DILocation(line: 56, column: 39, scope: !3962)
!3973 = !DILocation(line: 56, column: 54, scope: !3962)
!3974 = !DILocation(line: 57, column: 21, scope: !3962)
!3975 = !DILocation(line: 58, column: 18, scope: !3962)
!3976 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7bit_len17he7b56926e565c010E", scope: !3977, file: !3797, line: 46, type: !3978, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3984)
!3977 = !DINamespace(name: "{impl#33}", scope: !3799)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!23, !3980}
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 5]", baseType: !3981, size: 64, align: 64, dwarfAddressSpace: 0)
!3981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 40, align: 8, elements: !3982)
!3982 = !{!3983}
!3983 = !DISubrange(count: 5, lowerBound: 0)
!3984 = !{!3985}
!3985 = !DILocalVariable(name: "self", arg: 1, scope: !3976, file: !3797, line: 46, type: !3980)
!3986 = !DILocation(line: 46, column: 28, scope: !3976)
!3987 = !DILocation(line: 48, column: 18, scope: !3976)
!3988 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7get_bit17h3ba389c4c96b5e45E", scope: !3977, file: !3797, line: 50, type: !3989, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !3991)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!40, !3980, !23}
!3991 = !{!3992, !3993}
!3992 = !DILocalVariable(name: "self", arg: 1, scope: !3988, file: !3797, line: 50, type: !3980)
!3993 = !DILocalVariable(name: "position", arg: 2, scope: !3988, file: !3797, line: 50, type: !23)
!3994 = !DILocation(line: 50, column: 28, scope: !3988)
!3995 = !DILocation(line: 50, column: 35, scope: !3988)
!3996 = !DILocation(line: 51, column: 21, scope: !3988)
!3997 = !DILocation(line: 52, column: 18, scope: !3988)
!3998 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$5$u5d$$GT$7set_bit17h16612311837961deE", scope: !3999, file: !3797, line: 56, type: !4000, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4003)
!3999 = !DINamespace(name: "{impl#34}", scope: !3799)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !4002, !23, !40}
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 5]", baseType: !3981, size: 64, align: 64, dwarfAddressSpace: 0)
!4003 = !{!4004, !4005, !4006}
!4004 = !DILocalVariable(name: "self", arg: 1, scope: !3998, file: !3797, line: 56, type: !4002)
!4005 = !DILocalVariable(name: "position", arg: 2, scope: !3998, file: !3797, line: 56, type: !23)
!4006 = !DILocalVariable(name: "value", arg: 3, scope: !3998, file: !3797, line: 56, type: !40)
!4007 = !DILocation(line: 56, column: 28, scope: !3998)
!4008 = !DILocation(line: 56, column: 39, scope: !3998)
!4009 = !DILocation(line: 56, column: 54, scope: !3998)
!4010 = !DILocation(line: 57, column: 21, scope: !3998)
!4011 = !DILocation(line: 58, column: 18, scope: !3998)
!4012 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7bit_len17h17f01380d54b0edeE", scope: !4013, file: !3797, line: 46, type: !4014, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4020)
!4013 = !DINamespace(name: "{impl#39}", scope: !3799)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!23, !4016}
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 6]", baseType: !4017, size: 64, align: 64, dwarfAddressSpace: 0)
!4017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 48, align: 8, elements: !4018)
!4018 = !{!4019}
!4019 = !DISubrange(count: 6, lowerBound: 0)
!4020 = !{!4021}
!4021 = !DILocalVariable(name: "self", arg: 1, scope: !4012, file: !3797, line: 46, type: !4016)
!4022 = !DILocation(line: 46, column: 28, scope: !4012)
!4023 = !DILocation(line: 48, column: 18, scope: !4012)
!4024 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7get_bit17h52d8fb8d28763b13E", scope: !4013, file: !3797, line: 50, type: !4025, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4027)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!40, !4016, !23}
!4027 = !{!4028, !4029}
!4028 = !DILocalVariable(name: "self", arg: 1, scope: !4024, file: !3797, line: 50, type: !4016)
!4029 = !DILocalVariable(name: "position", arg: 2, scope: !4024, file: !3797, line: 50, type: !23)
!4030 = !DILocation(line: 50, column: 28, scope: !4024)
!4031 = !DILocation(line: 50, column: 35, scope: !4024)
!4032 = !DILocation(line: 51, column: 21, scope: !4024)
!4033 = !DILocation(line: 52, column: 18, scope: !4024)
!4034 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$6$u5d$$GT$7set_bit17h08af0040277e0869E", scope: !4035, file: !3797, line: 56, type: !4036, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4039)
!4035 = !DINamespace(name: "{impl#40}", scope: !3799)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{null, !4038, !23, !40}
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 6]", baseType: !4017, size: 64, align: 64, dwarfAddressSpace: 0)
!4039 = !{!4040, !4041, !4042}
!4040 = !DILocalVariable(name: "self", arg: 1, scope: !4034, file: !3797, line: 56, type: !4038)
!4041 = !DILocalVariable(name: "position", arg: 2, scope: !4034, file: !3797, line: 56, type: !23)
!4042 = !DILocalVariable(name: "value", arg: 3, scope: !4034, file: !3797, line: 56, type: !40)
!4043 = !DILocation(line: 56, column: 28, scope: !4034)
!4044 = !DILocation(line: 56, column: 39, scope: !4034)
!4045 = !DILocation(line: 56, column: 54, scope: !4034)
!4046 = !DILocation(line: 57, column: 21, scope: !4034)
!4047 = !DILocation(line: 58, column: 18, scope: !4034)
!4048 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7bit_len17h58894c01c7f736e0E", scope: !4049, file: !3797, line: 46, type: !4050, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4056)
!4049 = !DINamespace(name: "{impl#45}", scope: !3799)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{!23, !4052}
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 7]", baseType: !4053, size: 64, align: 64, dwarfAddressSpace: 0)
!4053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 56, align: 8, elements: !4054)
!4054 = !{!4055}
!4055 = !DISubrange(count: 7, lowerBound: 0)
!4056 = !{!4057}
!4057 = !DILocalVariable(name: "self", arg: 1, scope: !4048, file: !3797, line: 46, type: !4052)
!4058 = !DILocation(line: 46, column: 28, scope: !4048)
!4059 = !DILocation(line: 48, column: 18, scope: !4048)
!4060 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7get_bit17h3eb25348c5887d35E", scope: !4049, file: !3797, line: 50, type: !4061, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4063)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!40, !4052, !23}
!4063 = !{!4064, !4065}
!4064 = !DILocalVariable(name: "self", arg: 1, scope: !4060, file: !3797, line: 50, type: !4052)
!4065 = !DILocalVariable(name: "position", arg: 2, scope: !4060, file: !3797, line: 50, type: !23)
!4066 = !DILocation(line: 50, column: 28, scope: !4060)
!4067 = !DILocation(line: 50, column: 35, scope: !4060)
!4068 = !DILocation(line: 51, column: 21, scope: !4060)
!4069 = !DILocation(line: 52, column: 18, scope: !4060)
!4070 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$7$u5d$$GT$7set_bit17h0d1867c44eb9332cE", scope: !4071, file: !3797, line: 56, type: !4072, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4075)
!4071 = !DINamespace(name: "{impl#46}", scope: !3799)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null, !4074, !23, !40}
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 7]", baseType: !4053, size: 64, align: 64, dwarfAddressSpace: 0)
!4075 = !{!4076, !4077, !4078}
!4076 = !DILocalVariable(name: "self", arg: 1, scope: !4070, file: !3797, line: 56, type: !4074)
!4077 = !DILocalVariable(name: "position", arg: 2, scope: !4070, file: !3797, line: 56, type: !23)
!4078 = !DILocalVariable(name: "value", arg: 3, scope: !4070, file: !3797, line: 56, type: !40)
!4079 = !DILocation(line: 56, column: 28, scope: !4070)
!4080 = !DILocation(line: 56, column: 39, scope: !4070)
!4081 = !DILocation(line: 56, column: 54, scope: !4070)
!4082 = !DILocation(line: 57, column: 21, scope: !4070)
!4083 = !DILocation(line: 58, column: 18, scope: !4070)
!4084 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7bit_len17h2ec3f02daa81472dE", scope: !4085, file: !3797, line: 46, type: !4086, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4092)
!4085 = !DINamespace(name: "{impl#51}", scope: !3799)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!23, !4088}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 8]", baseType: !4089, size: 64, align: 64, dwarfAddressSpace: 0)
!4089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 64, align: 8, elements: !4090)
!4090 = !{!4091}
!4091 = !DISubrange(count: 8, lowerBound: 0)
!4092 = !{!4093}
!4093 = !DILocalVariable(name: "self", arg: 1, scope: !4084, file: !3797, line: 46, type: !4088)
!4094 = !DILocation(line: 46, column: 28, scope: !4084)
!4095 = !DILocation(line: 48, column: 18, scope: !4084)
!4096 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7get_bit17hfc962d470cda13beE", scope: !4085, file: !3797, line: 50, type: !4097, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4099)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!40, !4088, !23}
!4099 = !{!4100, !4101}
!4100 = !DILocalVariable(name: "self", arg: 1, scope: !4096, file: !3797, line: 50, type: !4088)
!4101 = !DILocalVariable(name: "position", arg: 2, scope: !4096, file: !3797, line: 50, type: !23)
!4102 = !DILocation(line: 50, column: 28, scope: !4096)
!4103 = !DILocation(line: 50, column: 35, scope: !4096)
!4104 = !DILocation(line: 51, column: 21, scope: !4096)
!4105 = !DILocation(line: 52, column: 18, scope: !4096)
!4106 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$8$u5d$$GT$7set_bit17h434577bebb7fe3f8E", scope: !4107, file: !3797, line: 56, type: !4108, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4111)
!4107 = !DINamespace(name: "{impl#52}", scope: !3799)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{null, !4110, !23, !40}
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 8]", baseType: !4089, size: 64, align: 64, dwarfAddressSpace: 0)
!4111 = !{!4112, !4113, !4114}
!4112 = !DILocalVariable(name: "self", arg: 1, scope: !4106, file: !3797, line: 56, type: !4110)
!4113 = !DILocalVariable(name: "position", arg: 2, scope: !4106, file: !3797, line: 56, type: !23)
!4114 = !DILocalVariable(name: "value", arg: 3, scope: !4106, file: !3797, line: 56, type: !40)
!4115 = !DILocation(line: 56, column: 28, scope: !4106)
!4116 = !DILocation(line: 56, column: 39, scope: !4106)
!4117 = !DILocation(line: 56, column: 54, scope: !4106)
!4118 = !DILocation(line: 57, column: 21, scope: !4106)
!4119 = !DILocation(line: 58, column: 18, scope: !4106)
!4120 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7bit_len17he330ed37ea6f07e1E", scope: !4121, file: !3797, line: 46, type: !4122, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4128)
!4121 = !DINamespace(name: "{impl#57}", scope: !3799)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!23, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 9]", baseType: !4125, size: 64, align: 64, dwarfAddressSpace: 0)
!4125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 72, align: 8, elements: !4126)
!4126 = !{!4127}
!4127 = !DISubrange(count: 9, lowerBound: 0)
!4128 = !{!4129}
!4129 = !DILocalVariable(name: "self", arg: 1, scope: !4120, file: !3797, line: 46, type: !4124)
!4130 = !DILocation(line: 46, column: 28, scope: !4120)
!4131 = !DILocation(line: 48, column: 18, scope: !4120)
!4132 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls78_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7get_bit17hfe0b3388beb5bd56E", scope: !4121, file: !3797, line: 50, type: !4133, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4135)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!40, !4124, !23}
!4135 = !{!4136, !4137}
!4136 = !DILocalVariable(name: "self", arg: 1, scope: !4132, file: !3797, line: 50, type: !4124)
!4137 = !DILocalVariable(name: "position", arg: 2, scope: !4132, file: !3797, line: 50, type: !23)
!4138 = !DILocation(line: 50, column: 28, scope: !4132)
!4139 = !DILocation(line: 50, column: 35, scope: !4132)
!4140 = !DILocation(line: 51, column: 21, scope: !4132)
!4141 = !DILocation(line: 52, column: 18, scope: !4132)
!4142 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls85_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$9$u5d$$GT$7set_bit17h3a63a393a23241a5E", scope: !4143, file: !3797, line: 56, type: !4144, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4147)
!4143 = !DINamespace(name: "{impl#58}", scope: !3799)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{null, !4146, !23, !40}
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 9]", baseType: !4125, size: 64, align: 64, dwarfAddressSpace: 0)
!4147 = !{!4148, !4149, !4150}
!4148 = !DILocalVariable(name: "self", arg: 1, scope: !4142, file: !3797, line: 56, type: !4146)
!4149 = !DILocalVariable(name: "position", arg: 2, scope: !4142, file: !3797, line: 56, type: !23)
!4150 = !DILocalVariable(name: "value", arg: 3, scope: !4142, file: !3797, line: 56, type: !40)
!4151 = !DILocation(line: 56, column: 28, scope: !4142)
!4152 = !DILocation(line: 56, column: 39, scope: !4142)
!4153 = !DILocation(line: 56, column: 54, scope: !4142)
!4154 = !DILocation(line: 57, column: 21, scope: !4142)
!4155 = !DILocation(line: 58, column: 18, scope: !4142)
!4156 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7bit_len17hc1f04a444c63c5a6E", scope: !4157, file: !3797, line: 46, type: !4158, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4164)
!4157 = !DINamespace(name: "{impl#63}", scope: !3799)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!23, !4160}
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 10]", baseType: !4161, size: 64, align: 64, dwarfAddressSpace: 0)
!4161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 80, align: 8, elements: !4162)
!4162 = !{!4163}
!4163 = !DISubrange(count: 10, lowerBound: 0)
!4164 = !{!4165}
!4165 = !DILocalVariable(name: "self", arg: 1, scope: !4156, file: !3797, line: 46, type: !4160)
!4166 = !DILocation(line: 46, column: 28, scope: !4156)
!4167 = !DILocation(line: 48, column: 18, scope: !4156)
!4168 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7get_bit17h8b10e598d25c443dE", scope: !4157, file: !3797, line: 50, type: !4169, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4171)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!40, !4160, !23}
!4171 = !{!4172, !4173}
!4172 = !DILocalVariable(name: "self", arg: 1, scope: !4168, file: !3797, line: 50, type: !4160)
!4173 = !DILocalVariable(name: "position", arg: 2, scope: !4168, file: !3797, line: 50, type: !23)
!4174 = !DILocation(line: 50, column: 28, scope: !4168)
!4175 = !DILocation(line: 50, column: 35, scope: !4168)
!4176 = !DILocation(line: 51, column: 21, scope: !4168)
!4177 = !DILocation(line: 52, column: 18, scope: !4168)
!4178 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$10$u5d$$GT$7set_bit17h2e19934cf269c895E", scope: !4179, file: !3797, line: 56, type: !4180, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4183)
!4179 = !DINamespace(name: "{impl#64}", scope: !3799)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !4182, !23, !40}
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 10]", baseType: !4161, size: 64, align: 64, dwarfAddressSpace: 0)
!4183 = !{!4184, !4185, !4186}
!4184 = !DILocalVariable(name: "self", arg: 1, scope: !4178, file: !3797, line: 56, type: !4182)
!4185 = !DILocalVariable(name: "position", arg: 2, scope: !4178, file: !3797, line: 56, type: !23)
!4186 = !DILocalVariable(name: "value", arg: 3, scope: !4178, file: !3797, line: 56, type: !40)
!4187 = !DILocation(line: 56, column: 28, scope: !4178)
!4188 = !DILocation(line: 56, column: 39, scope: !4178)
!4189 = !DILocation(line: 56, column: 54, scope: !4178)
!4190 = !DILocation(line: 57, column: 21, scope: !4178)
!4191 = !DILocation(line: 58, column: 18, scope: !4178)
!4192 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7bit_len17h9ba64dcfa0a33aefE", scope: !4193, file: !3797, line: 46, type: !4194, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4200)
!4193 = !DINamespace(name: "{impl#69}", scope: !3799)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!23, !4196}
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 11]", baseType: !4197, size: 64, align: 64, dwarfAddressSpace: 0)
!4197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 88, align: 8, elements: !4198)
!4198 = !{!4199}
!4199 = !DISubrange(count: 11, lowerBound: 0)
!4200 = !{!4201}
!4201 = !DILocalVariable(name: "self", arg: 1, scope: !4192, file: !3797, line: 46, type: !4196)
!4202 = !DILocation(line: 46, column: 28, scope: !4192)
!4203 = !DILocation(line: 48, column: 18, scope: !4192)
!4204 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7get_bit17h890ecb5860878795E", scope: !4193, file: !3797, line: 50, type: !4205, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4207)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!40, !4196, !23}
!4207 = !{!4208, !4209}
!4208 = !DILocalVariable(name: "self", arg: 1, scope: !4204, file: !3797, line: 50, type: !4196)
!4209 = !DILocalVariable(name: "position", arg: 2, scope: !4204, file: !3797, line: 50, type: !23)
!4210 = !DILocation(line: 50, column: 28, scope: !4204)
!4211 = !DILocation(line: 50, column: 35, scope: !4204)
!4212 = !DILocation(line: 51, column: 21, scope: !4204)
!4213 = !DILocation(line: 52, column: 18, scope: !4204)
!4214 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$11$u5d$$GT$7set_bit17hea2b6f0956789b6eE", scope: !4215, file: !3797, line: 56, type: !4216, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4219)
!4215 = !DINamespace(name: "{impl#70}", scope: !3799)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{null, !4218, !23, !40}
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 11]", baseType: !4197, size: 64, align: 64, dwarfAddressSpace: 0)
!4219 = !{!4220, !4221, !4222}
!4220 = !DILocalVariable(name: "self", arg: 1, scope: !4214, file: !3797, line: 56, type: !4218)
!4221 = !DILocalVariable(name: "position", arg: 2, scope: !4214, file: !3797, line: 56, type: !23)
!4222 = !DILocalVariable(name: "value", arg: 3, scope: !4214, file: !3797, line: 56, type: !40)
!4223 = !DILocation(line: 56, column: 28, scope: !4214)
!4224 = !DILocation(line: 56, column: 39, scope: !4214)
!4225 = !DILocation(line: 56, column: 54, scope: !4214)
!4226 = !DILocation(line: 57, column: 21, scope: !4214)
!4227 = !DILocation(line: 58, column: 18, scope: !4214)
!4228 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7bit_len17h40e29e3d29a1e07cE", scope: !4229, file: !3797, line: 46, type: !4230, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4236)
!4229 = !DINamespace(name: "{impl#75}", scope: !3799)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!23, !4232}
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 12]", baseType: !4233, size: 64, align: 64, dwarfAddressSpace: 0)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 96, align: 8, elements: !4234)
!4234 = !{!4235}
!4235 = !DISubrange(count: 12, lowerBound: 0)
!4236 = !{!4237}
!4237 = !DILocalVariable(name: "self", arg: 1, scope: !4228, file: !3797, line: 46, type: !4232)
!4238 = !DILocation(line: 46, column: 28, scope: !4228)
!4239 = !DILocation(line: 48, column: 18, scope: !4228)
!4240 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7get_bit17h6ed935b3581a6523E", scope: !4229, file: !3797, line: 50, type: !4241, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4243)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!40, !4232, !23}
!4243 = !{!4244, !4245}
!4244 = !DILocalVariable(name: "self", arg: 1, scope: !4240, file: !3797, line: 50, type: !4232)
!4245 = !DILocalVariable(name: "position", arg: 2, scope: !4240, file: !3797, line: 50, type: !23)
!4246 = !DILocation(line: 50, column: 28, scope: !4240)
!4247 = !DILocation(line: 50, column: 35, scope: !4240)
!4248 = !DILocation(line: 51, column: 21, scope: !4240)
!4249 = !DILocation(line: 52, column: 18, scope: !4240)
!4250 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$12$u5d$$GT$7set_bit17h71e505b91d6e3742E", scope: !4251, file: !3797, line: 56, type: !4252, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4255)
!4251 = !DINamespace(name: "{impl#76}", scope: !3799)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{null, !4254, !23, !40}
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 12]", baseType: !4233, size: 64, align: 64, dwarfAddressSpace: 0)
!4255 = !{!4256, !4257, !4258}
!4256 = !DILocalVariable(name: "self", arg: 1, scope: !4250, file: !3797, line: 56, type: !4254)
!4257 = !DILocalVariable(name: "position", arg: 2, scope: !4250, file: !3797, line: 56, type: !23)
!4258 = !DILocalVariable(name: "value", arg: 3, scope: !4250, file: !3797, line: 56, type: !40)
!4259 = !DILocation(line: 56, column: 28, scope: !4250)
!4260 = !DILocation(line: 56, column: 39, scope: !4250)
!4261 = !DILocation(line: 56, column: 54, scope: !4250)
!4262 = !DILocation(line: 57, column: 21, scope: !4250)
!4263 = !DILocation(line: 58, column: 18, scope: !4250)
!4264 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7bit_len17h8006a900c35568e7E", scope: !4265, file: !3797, line: 46, type: !4266, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4272)
!4265 = !DINamespace(name: "{impl#81}", scope: !3799)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!23, !4268}
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 13]", baseType: !4269, size: 64, align: 64, dwarfAddressSpace: 0)
!4269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 104, align: 8, elements: !4270)
!4270 = !{!4271}
!4271 = !DISubrange(count: 13, lowerBound: 0)
!4272 = !{!4273}
!4273 = !DILocalVariable(name: "self", arg: 1, scope: !4264, file: !3797, line: 46, type: !4268)
!4274 = !DILocation(line: 46, column: 28, scope: !4264)
!4275 = !DILocation(line: 48, column: 18, scope: !4264)
!4276 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7get_bit17h405e7834b8076c6aE", scope: !4265, file: !3797, line: 50, type: !4277, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4279)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!40, !4268, !23}
!4279 = !{!4280, !4281}
!4280 = !DILocalVariable(name: "self", arg: 1, scope: !4276, file: !3797, line: 50, type: !4268)
!4281 = !DILocalVariable(name: "position", arg: 2, scope: !4276, file: !3797, line: 50, type: !23)
!4282 = !DILocation(line: 50, column: 28, scope: !4276)
!4283 = !DILocation(line: 50, column: 35, scope: !4276)
!4284 = !DILocation(line: 51, column: 21, scope: !4276)
!4285 = !DILocation(line: 52, column: 18, scope: !4276)
!4286 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$13$u5d$$GT$7set_bit17h7db8c3f0ea636402E", scope: !4287, file: !3797, line: 56, type: !4288, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4291)
!4287 = !DINamespace(name: "{impl#82}", scope: !3799)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !4290, !23, !40}
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 13]", baseType: !4269, size: 64, align: 64, dwarfAddressSpace: 0)
!4291 = !{!4292, !4293, !4294}
!4292 = !DILocalVariable(name: "self", arg: 1, scope: !4286, file: !3797, line: 56, type: !4290)
!4293 = !DILocalVariable(name: "position", arg: 2, scope: !4286, file: !3797, line: 56, type: !23)
!4294 = !DILocalVariable(name: "value", arg: 3, scope: !4286, file: !3797, line: 56, type: !40)
!4295 = !DILocation(line: 56, column: 28, scope: !4286)
!4296 = !DILocation(line: 56, column: 39, scope: !4286)
!4297 = !DILocation(line: 56, column: 54, scope: !4286)
!4298 = !DILocation(line: 57, column: 21, scope: !4286)
!4299 = !DILocation(line: 58, column: 18, scope: !4286)
!4300 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7bit_len17he7b39edaedd86a94E", scope: !4301, file: !3797, line: 46, type: !4302, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4308)
!4301 = !DINamespace(name: "{impl#87}", scope: !3799)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!23, !4304}
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 14]", baseType: !4305, size: 64, align: 64, dwarfAddressSpace: 0)
!4305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 112, align: 8, elements: !4306)
!4306 = !{!4307}
!4307 = !DISubrange(count: 14, lowerBound: 0)
!4308 = !{!4309}
!4309 = !DILocalVariable(name: "self", arg: 1, scope: !4300, file: !3797, line: 46, type: !4304)
!4310 = !DILocation(line: 46, column: 28, scope: !4300)
!4311 = !DILocation(line: 48, column: 18, scope: !4300)
!4312 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7get_bit17h7275e2501fc46bd4E", scope: !4301, file: !3797, line: 50, type: !4313, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4315)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!40, !4304, !23}
!4315 = !{!4316, !4317}
!4316 = !DILocalVariable(name: "self", arg: 1, scope: !4312, file: !3797, line: 50, type: !4304)
!4317 = !DILocalVariable(name: "position", arg: 2, scope: !4312, file: !3797, line: 50, type: !23)
!4318 = !DILocation(line: 50, column: 28, scope: !4312)
!4319 = !DILocation(line: 50, column: 35, scope: !4312)
!4320 = !DILocation(line: 51, column: 21, scope: !4312)
!4321 = !DILocation(line: 52, column: 18, scope: !4312)
!4322 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$14$u5d$$GT$7set_bit17hc896c97d6e75e583E", scope: !4323, file: !3797, line: 56, type: !4324, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4327)
!4323 = !DINamespace(name: "{impl#88}", scope: !3799)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{null, !4326, !23, !40}
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 14]", baseType: !4305, size: 64, align: 64, dwarfAddressSpace: 0)
!4327 = !{!4328, !4329, !4330}
!4328 = !DILocalVariable(name: "self", arg: 1, scope: !4322, file: !3797, line: 56, type: !4326)
!4329 = !DILocalVariable(name: "position", arg: 2, scope: !4322, file: !3797, line: 56, type: !23)
!4330 = !DILocalVariable(name: "value", arg: 3, scope: !4322, file: !3797, line: 56, type: !40)
!4331 = !DILocation(line: 56, column: 28, scope: !4322)
!4332 = !DILocation(line: 56, column: 39, scope: !4322)
!4333 = !DILocation(line: 56, column: 54, scope: !4322)
!4334 = !DILocation(line: 57, column: 21, scope: !4322)
!4335 = !DILocation(line: 58, column: 18, scope: !4322)
!4336 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7bit_len17h530b3bf5409bcce9E", scope: !4337, file: !3797, line: 46, type: !4338, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4344)
!4337 = !DINamespace(name: "{impl#93}", scope: !3799)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!23, !4340}
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 15]", baseType: !4341, size: 64, align: 64, dwarfAddressSpace: 0)
!4341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 120, align: 8, elements: !4342)
!4342 = !{!4343}
!4343 = !DISubrange(count: 15, lowerBound: 0)
!4344 = !{!4345}
!4345 = !DILocalVariable(name: "self", arg: 1, scope: !4336, file: !3797, line: 46, type: !4340)
!4346 = !DILocation(line: 46, column: 28, scope: !4336)
!4347 = !DILocation(line: 48, column: 18, scope: !4336)
!4348 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7get_bit17h0e6a7aa7bbe0a8fcE", scope: !4337, file: !3797, line: 50, type: !4349, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4351)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!40, !4340, !23}
!4351 = !{!4352, !4353}
!4352 = !DILocalVariable(name: "self", arg: 1, scope: !4348, file: !3797, line: 50, type: !4340)
!4353 = !DILocalVariable(name: "position", arg: 2, scope: !4348, file: !3797, line: 50, type: !23)
!4354 = !DILocation(line: 50, column: 28, scope: !4348)
!4355 = !DILocation(line: 50, column: 35, scope: !4348)
!4356 = !DILocation(line: 51, column: 21, scope: !4348)
!4357 = !DILocation(line: 52, column: 18, scope: !4348)
!4358 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$15$u5d$$GT$7set_bit17h0a8eae8ebd0624ffE", scope: !4359, file: !3797, line: 56, type: !4360, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4363)
!4359 = !DINamespace(name: "{impl#94}", scope: !3799)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !4362, !23, !40}
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 15]", baseType: !4341, size: 64, align: 64, dwarfAddressSpace: 0)
!4363 = !{!4364, !4365, !4366}
!4364 = !DILocalVariable(name: "self", arg: 1, scope: !4358, file: !3797, line: 56, type: !4362)
!4365 = !DILocalVariable(name: "position", arg: 2, scope: !4358, file: !3797, line: 56, type: !23)
!4366 = !DILocalVariable(name: "value", arg: 3, scope: !4358, file: !3797, line: 56, type: !40)
!4367 = !DILocation(line: 56, column: 28, scope: !4358)
!4368 = !DILocation(line: 56, column: 39, scope: !4358)
!4369 = !DILocation(line: 56, column: 54, scope: !4358)
!4370 = !DILocation(line: 57, column: 21, scope: !4358)
!4371 = !DILocation(line: 58, column: 18, scope: !4358)
!4372 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7bit_len17hcfdcdab34fd10d63E", scope: !4373, file: !3797, line: 46, type: !4374, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4380)
!4373 = !DINamespace(name: "{impl#99}", scope: !3799)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!23, !4376}
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 16]", baseType: !4377, size: 64, align: 64, dwarfAddressSpace: 0)
!4377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 128, align: 8, elements: !4378)
!4378 = !{!4379}
!4379 = !DISubrange(count: 16, lowerBound: 0)
!4380 = !{!4381}
!4381 = !DILocalVariable(name: "self", arg: 1, scope: !4372, file: !3797, line: 46, type: !4376)
!4382 = !DILocation(line: 46, column: 28, scope: !4372)
!4383 = !DILocation(line: 48, column: 18, scope: !4372)
!4384 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7get_bit17h6f86b0f5aaf8f00dE", scope: !4373, file: !3797, line: 50, type: !4385, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!40, !4376, !23}
!4387 = !{!4388, !4389}
!4388 = !DILocalVariable(name: "self", arg: 1, scope: !4384, file: !3797, line: 50, type: !4376)
!4389 = !DILocalVariable(name: "position", arg: 2, scope: !4384, file: !3797, line: 50, type: !23)
!4390 = !DILocation(line: 50, column: 28, scope: !4384)
!4391 = !DILocation(line: 50, column: 35, scope: !4384)
!4392 = !DILocation(line: 51, column: 21, scope: !4384)
!4393 = !DILocation(line: 52, column: 18, scope: !4384)
!4394 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$16$u5d$$GT$7set_bit17h9d0d61f2bbe90524E", scope: !4395, file: !3797, line: 56, type: !4396, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4399)
!4395 = !DINamespace(name: "{impl#100}", scope: !3799)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{null, !4398, !23, !40}
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 16]", baseType: !4377, size: 64, align: 64, dwarfAddressSpace: 0)
!4399 = !{!4400, !4401, !4402}
!4400 = !DILocalVariable(name: "self", arg: 1, scope: !4394, file: !3797, line: 56, type: !4398)
!4401 = !DILocalVariable(name: "position", arg: 2, scope: !4394, file: !3797, line: 56, type: !23)
!4402 = !DILocalVariable(name: "value", arg: 3, scope: !4394, file: !3797, line: 56, type: !40)
!4403 = !DILocation(line: 56, column: 28, scope: !4394)
!4404 = !DILocation(line: 56, column: 39, scope: !4394)
!4405 = !DILocation(line: 56, column: 54, scope: !4394)
!4406 = !DILocation(line: 57, column: 21, scope: !4394)
!4407 = !DILocation(line: 58, column: 18, scope: !4394)
!4408 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7bit_len17h5055e5d86fc079f1E", scope: !4409, file: !3797, line: 46, type: !4410, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4416)
!4409 = !DINamespace(name: "{impl#105}", scope: !3799)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!23, !4412}
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 17]", baseType: !4413, size: 64, align: 64, dwarfAddressSpace: 0)
!4413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 136, align: 8, elements: !4414)
!4414 = !{!4415}
!4415 = !DISubrange(count: 17, lowerBound: 0)
!4416 = !{!4417}
!4417 = !DILocalVariable(name: "self", arg: 1, scope: !4408, file: !3797, line: 46, type: !4412)
!4418 = !DILocation(line: 46, column: 28, scope: !4408)
!4419 = !DILocation(line: 48, column: 18, scope: !4408)
!4420 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7get_bit17hac52cefe328a40fdE", scope: !4409, file: !3797, line: 50, type: !4421, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4423)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!40, !4412, !23}
!4423 = !{!4424, !4425}
!4424 = !DILocalVariable(name: "self", arg: 1, scope: !4420, file: !3797, line: 50, type: !4412)
!4425 = !DILocalVariable(name: "position", arg: 2, scope: !4420, file: !3797, line: 50, type: !23)
!4426 = !DILocation(line: 50, column: 28, scope: !4420)
!4427 = !DILocation(line: 50, column: 35, scope: !4420)
!4428 = !DILocation(line: 51, column: 21, scope: !4420)
!4429 = !DILocation(line: 52, column: 18, scope: !4420)
!4430 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$17$u5d$$GT$7set_bit17h25364fe7c8432aacE", scope: !4431, file: !3797, line: 56, type: !4432, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4435)
!4431 = !DINamespace(name: "{impl#106}", scope: !3799)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{null, !4434, !23, !40}
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 17]", baseType: !4413, size: 64, align: 64, dwarfAddressSpace: 0)
!4435 = !{!4436, !4437, !4438}
!4436 = !DILocalVariable(name: "self", arg: 1, scope: !4430, file: !3797, line: 56, type: !4434)
!4437 = !DILocalVariable(name: "position", arg: 2, scope: !4430, file: !3797, line: 56, type: !23)
!4438 = !DILocalVariable(name: "value", arg: 3, scope: !4430, file: !3797, line: 56, type: !40)
!4439 = !DILocation(line: 56, column: 28, scope: !4430)
!4440 = !DILocation(line: 56, column: 39, scope: !4430)
!4441 = !DILocation(line: 56, column: 54, scope: !4430)
!4442 = !DILocation(line: 57, column: 21, scope: !4430)
!4443 = !DILocation(line: 58, column: 18, scope: !4430)
!4444 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7bit_len17h66ffd094250c776fE", scope: !4445, file: !3797, line: 46, type: !4446, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4452)
!4445 = !DINamespace(name: "{impl#111}", scope: !3799)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!23, !4448}
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 18]", baseType: !4449, size: 64, align: 64, dwarfAddressSpace: 0)
!4449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 144, align: 8, elements: !4450)
!4450 = !{!4451}
!4451 = !DISubrange(count: 18, lowerBound: 0)
!4452 = !{!4453}
!4453 = !DILocalVariable(name: "self", arg: 1, scope: !4444, file: !3797, line: 46, type: !4448)
!4454 = !DILocation(line: 46, column: 28, scope: !4444)
!4455 = !DILocation(line: 48, column: 18, scope: !4444)
!4456 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7get_bit17h17cd54d32abc9307E", scope: !4445, file: !3797, line: 50, type: !4457, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!40, !4448, !23}
!4459 = !{!4460, !4461}
!4460 = !DILocalVariable(name: "self", arg: 1, scope: !4456, file: !3797, line: 50, type: !4448)
!4461 = !DILocalVariable(name: "position", arg: 2, scope: !4456, file: !3797, line: 50, type: !23)
!4462 = !DILocation(line: 50, column: 28, scope: !4456)
!4463 = !DILocation(line: 50, column: 35, scope: !4456)
!4464 = !DILocation(line: 51, column: 21, scope: !4456)
!4465 = !DILocation(line: 52, column: 18, scope: !4456)
!4466 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$18$u5d$$GT$7set_bit17h78d40eb270fdb3e5E", scope: !4467, file: !3797, line: 56, type: !4468, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4471)
!4467 = !DINamespace(name: "{impl#112}", scope: !3799)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{null, !4470, !23, !40}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 18]", baseType: !4449, size: 64, align: 64, dwarfAddressSpace: 0)
!4471 = !{!4472, !4473, !4474}
!4472 = !DILocalVariable(name: "self", arg: 1, scope: !4466, file: !3797, line: 56, type: !4470)
!4473 = !DILocalVariable(name: "position", arg: 2, scope: !4466, file: !3797, line: 56, type: !23)
!4474 = !DILocalVariable(name: "value", arg: 3, scope: !4466, file: !3797, line: 56, type: !40)
!4475 = !DILocation(line: 56, column: 28, scope: !4466)
!4476 = !DILocation(line: 56, column: 39, scope: !4466)
!4477 = !DILocation(line: 56, column: 54, scope: !4466)
!4478 = !DILocation(line: 57, column: 21, scope: !4466)
!4479 = !DILocation(line: 58, column: 18, scope: !4466)
!4480 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7bit_len17hebe116ad5dee6cbeE", scope: !4481, file: !3797, line: 46, type: !4482, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4488)
!4481 = !DINamespace(name: "{impl#117}", scope: !3799)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!23, !4484}
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 19]", baseType: !4485, size: 64, align: 64, dwarfAddressSpace: 0)
!4485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 152, align: 8, elements: !4486)
!4486 = !{!4487}
!4487 = !DISubrange(count: 19, lowerBound: 0)
!4488 = !{!4489}
!4489 = !DILocalVariable(name: "self", arg: 1, scope: !4480, file: !3797, line: 46, type: !4484)
!4490 = !DILocation(line: 46, column: 28, scope: !4480)
!4491 = !DILocation(line: 48, column: 18, scope: !4480)
!4492 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7get_bit17hb24b3ebbf2906cceE", scope: !4481, file: !3797, line: 50, type: !4493, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4495)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!40, !4484, !23}
!4495 = !{!4496, !4497}
!4496 = !DILocalVariable(name: "self", arg: 1, scope: !4492, file: !3797, line: 50, type: !4484)
!4497 = !DILocalVariable(name: "position", arg: 2, scope: !4492, file: !3797, line: 50, type: !23)
!4498 = !DILocation(line: 50, column: 28, scope: !4492)
!4499 = !DILocation(line: 50, column: 35, scope: !4492)
!4500 = !DILocation(line: 51, column: 21, scope: !4492)
!4501 = !DILocation(line: 52, column: 18, scope: !4492)
!4502 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$19$u5d$$GT$7set_bit17h52946d0d75f38d45E", scope: !4503, file: !3797, line: 56, type: !4504, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4507)
!4503 = !DINamespace(name: "{impl#118}", scope: !3799)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{null, !4506, !23, !40}
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 19]", baseType: !4485, size: 64, align: 64, dwarfAddressSpace: 0)
!4507 = !{!4508, !4509, !4510}
!4508 = !DILocalVariable(name: "self", arg: 1, scope: !4502, file: !3797, line: 56, type: !4506)
!4509 = !DILocalVariable(name: "position", arg: 2, scope: !4502, file: !3797, line: 56, type: !23)
!4510 = !DILocalVariable(name: "value", arg: 3, scope: !4502, file: !3797, line: 56, type: !40)
!4511 = !DILocation(line: 56, column: 28, scope: !4502)
!4512 = !DILocation(line: 56, column: 39, scope: !4502)
!4513 = !DILocation(line: 56, column: 54, scope: !4502)
!4514 = !DILocation(line: 57, column: 21, scope: !4502)
!4515 = !DILocation(line: 58, column: 18, scope: !4502)
!4516 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7bit_len17h1849df1e9e987fd6E", scope: !4517, file: !3797, line: 46, type: !4518, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4524)
!4517 = !DINamespace(name: "{impl#123}", scope: !3799)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!23, !4520}
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 20]", baseType: !4521, size: 64, align: 64, dwarfAddressSpace: 0)
!4521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 160, align: 8, elements: !4522)
!4522 = !{!4523}
!4523 = !DISubrange(count: 20, lowerBound: 0)
!4524 = !{!4525}
!4525 = !DILocalVariable(name: "self", arg: 1, scope: !4516, file: !3797, line: 46, type: !4520)
!4526 = !DILocation(line: 46, column: 28, scope: !4516)
!4527 = !DILocation(line: 48, column: 18, scope: !4516)
!4528 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7get_bit17h6fb2ddf41b3494d2E", scope: !4517, file: !3797, line: 50, type: !4529, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4531)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!40, !4520, !23}
!4531 = !{!4532, !4533}
!4532 = !DILocalVariable(name: "self", arg: 1, scope: !4528, file: !3797, line: 50, type: !4520)
!4533 = !DILocalVariable(name: "position", arg: 2, scope: !4528, file: !3797, line: 50, type: !23)
!4534 = !DILocation(line: 50, column: 28, scope: !4528)
!4535 = !DILocation(line: 50, column: 35, scope: !4528)
!4536 = !DILocation(line: 51, column: 21, scope: !4528)
!4537 = !DILocation(line: 52, column: 18, scope: !4528)
!4538 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$20$u5d$$GT$7set_bit17hdce119be2d437aa6E", scope: !4539, file: !3797, line: 56, type: !4540, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4543)
!4539 = !DINamespace(name: "{impl#124}", scope: !3799)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{null, !4542, !23, !40}
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 20]", baseType: !4521, size: 64, align: 64, dwarfAddressSpace: 0)
!4543 = !{!4544, !4545, !4546}
!4544 = !DILocalVariable(name: "self", arg: 1, scope: !4538, file: !3797, line: 56, type: !4542)
!4545 = !DILocalVariable(name: "position", arg: 2, scope: !4538, file: !3797, line: 56, type: !23)
!4546 = !DILocalVariable(name: "value", arg: 3, scope: !4538, file: !3797, line: 56, type: !40)
!4547 = !DILocation(line: 56, column: 28, scope: !4538)
!4548 = !DILocation(line: 56, column: 39, scope: !4538)
!4549 = !DILocation(line: 56, column: 54, scope: !4538)
!4550 = !DILocation(line: 57, column: 21, scope: !4538)
!4551 = !DILocation(line: 58, column: 18, scope: !4538)
!4552 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7bit_len17h32e4008d598b4dcdE", scope: !4553, file: !3797, line: 46, type: !4554, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4560)
!4553 = !DINamespace(name: "{impl#129}", scope: !3799)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{!23, !4556}
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 21]", baseType: !4557, size: 64, align: 64, dwarfAddressSpace: 0)
!4557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 168, align: 8, elements: !4558)
!4558 = !{!4559}
!4559 = !DISubrange(count: 21, lowerBound: 0)
!4560 = !{!4561}
!4561 = !DILocalVariable(name: "self", arg: 1, scope: !4552, file: !3797, line: 46, type: !4556)
!4562 = !DILocation(line: 46, column: 28, scope: !4552)
!4563 = !DILocation(line: 48, column: 18, scope: !4552)
!4564 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7get_bit17hbab502da02664741E", scope: !4553, file: !3797, line: 50, type: !4565, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4567)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{!40, !4556, !23}
!4567 = !{!4568, !4569}
!4568 = !DILocalVariable(name: "self", arg: 1, scope: !4564, file: !3797, line: 50, type: !4556)
!4569 = !DILocalVariable(name: "position", arg: 2, scope: !4564, file: !3797, line: 50, type: !23)
!4570 = !DILocation(line: 50, column: 28, scope: !4564)
!4571 = !DILocation(line: 50, column: 35, scope: !4564)
!4572 = !DILocation(line: 51, column: 21, scope: !4564)
!4573 = !DILocation(line: 52, column: 18, scope: !4564)
!4574 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$21$u5d$$GT$7set_bit17hcc7891a088d6e377E", scope: !4575, file: !3797, line: 56, type: !4576, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4579)
!4575 = !DINamespace(name: "{impl#130}", scope: !3799)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{null, !4578, !23, !40}
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 21]", baseType: !4557, size: 64, align: 64, dwarfAddressSpace: 0)
!4579 = !{!4580, !4581, !4582}
!4580 = !DILocalVariable(name: "self", arg: 1, scope: !4574, file: !3797, line: 56, type: !4578)
!4581 = !DILocalVariable(name: "position", arg: 2, scope: !4574, file: !3797, line: 56, type: !23)
!4582 = !DILocalVariable(name: "value", arg: 3, scope: !4574, file: !3797, line: 56, type: !40)
!4583 = !DILocation(line: 56, column: 28, scope: !4574)
!4584 = !DILocation(line: 56, column: 39, scope: !4574)
!4585 = !DILocation(line: 56, column: 54, scope: !4574)
!4586 = !DILocation(line: 57, column: 21, scope: !4574)
!4587 = !DILocation(line: 58, column: 18, scope: !4574)
!4588 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7bit_len17h49336e55772700c9E", scope: !4589, file: !3797, line: 46, type: !4590, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4596)
!4589 = !DINamespace(name: "{impl#135}", scope: !3799)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!23, !4592}
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 22]", baseType: !4593, size: 64, align: 64, dwarfAddressSpace: 0)
!4593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 176, align: 8, elements: !4594)
!4594 = !{!4595}
!4595 = !DISubrange(count: 22, lowerBound: 0)
!4596 = !{!4597}
!4597 = !DILocalVariable(name: "self", arg: 1, scope: !4588, file: !3797, line: 46, type: !4592)
!4598 = !DILocation(line: 46, column: 28, scope: !4588)
!4599 = !DILocation(line: 48, column: 18, scope: !4588)
!4600 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7get_bit17hb357be0a5da6a36fE", scope: !4589, file: !3797, line: 50, type: !4601, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4603)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{!40, !4592, !23}
!4603 = !{!4604, !4605}
!4604 = !DILocalVariable(name: "self", arg: 1, scope: !4600, file: !3797, line: 50, type: !4592)
!4605 = !DILocalVariable(name: "position", arg: 2, scope: !4600, file: !3797, line: 50, type: !23)
!4606 = !DILocation(line: 50, column: 28, scope: !4600)
!4607 = !DILocation(line: 50, column: 35, scope: !4600)
!4608 = !DILocation(line: 51, column: 21, scope: !4600)
!4609 = !DILocation(line: 52, column: 18, scope: !4600)
!4610 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$22$u5d$$GT$7set_bit17hfce2b9a7102fc2a5E", scope: !4611, file: !3797, line: 56, type: !4612, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4615)
!4611 = !DINamespace(name: "{impl#136}", scope: !3799)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{null, !4614, !23, !40}
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 22]", baseType: !4593, size: 64, align: 64, dwarfAddressSpace: 0)
!4615 = !{!4616, !4617, !4618}
!4616 = !DILocalVariable(name: "self", arg: 1, scope: !4610, file: !3797, line: 56, type: !4614)
!4617 = !DILocalVariable(name: "position", arg: 2, scope: !4610, file: !3797, line: 56, type: !23)
!4618 = !DILocalVariable(name: "value", arg: 3, scope: !4610, file: !3797, line: 56, type: !40)
!4619 = !DILocation(line: 56, column: 28, scope: !4610)
!4620 = !DILocation(line: 56, column: 39, scope: !4610)
!4621 = !DILocation(line: 56, column: 54, scope: !4610)
!4622 = !DILocation(line: 57, column: 21, scope: !4610)
!4623 = !DILocation(line: 58, column: 18, scope: !4610)
!4624 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7bit_len17h6e87215ff453d236E", scope: !4625, file: !3797, line: 46, type: !4626, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4632)
!4625 = !DINamespace(name: "{impl#141}", scope: !3799)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!23, !4628}
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 23]", baseType: !4629, size: 64, align: 64, dwarfAddressSpace: 0)
!4629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 184, align: 8, elements: !4630)
!4630 = !{!4631}
!4631 = !DISubrange(count: 23, lowerBound: 0)
!4632 = !{!4633}
!4633 = !DILocalVariable(name: "self", arg: 1, scope: !4624, file: !3797, line: 46, type: !4628)
!4634 = !DILocation(line: 46, column: 28, scope: !4624)
!4635 = !DILocation(line: 48, column: 18, scope: !4624)
!4636 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7get_bit17h2b2902c59bfd72a0E", scope: !4625, file: !3797, line: 50, type: !4637, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4639)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!40, !4628, !23}
!4639 = !{!4640, !4641}
!4640 = !DILocalVariable(name: "self", arg: 1, scope: !4636, file: !3797, line: 50, type: !4628)
!4641 = !DILocalVariable(name: "position", arg: 2, scope: !4636, file: !3797, line: 50, type: !23)
!4642 = !DILocation(line: 50, column: 28, scope: !4636)
!4643 = !DILocation(line: 50, column: 35, scope: !4636)
!4644 = !DILocation(line: 51, column: 21, scope: !4636)
!4645 = !DILocation(line: 52, column: 18, scope: !4636)
!4646 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$23$u5d$$GT$7set_bit17hd72bd248945c8292E", scope: !4647, file: !3797, line: 56, type: !4648, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4651)
!4647 = !DINamespace(name: "{impl#142}", scope: !3799)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !4650, !23, !40}
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 23]", baseType: !4629, size: 64, align: 64, dwarfAddressSpace: 0)
!4651 = !{!4652, !4653, !4654}
!4652 = !DILocalVariable(name: "self", arg: 1, scope: !4646, file: !3797, line: 56, type: !4650)
!4653 = !DILocalVariable(name: "position", arg: 2, scope: !4646, file: !3797, line: 56, type: !23)
!4654 = !DILocalVariable(name: "value", arg: 3, scope: !4646, file: !3797, line: 56, type: !40)
!4655 = !DILocation(line: 56, column: 28, scope: !4646)
!4656 = !DILocation(line: 56, column: 39, scope: !4646)
!4657 = !DILocation(line: 56, column: 54, scope: !4646)
!4658 = !DILocation(line: 57, column: 21, scope: !4646)
!4659 = !DILocation(line: 58, column: 18, scope: !4646)
!4660 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7bit_len17hef2c06c673e897e0E", scope: !4661, file: !3797, line: 46, type: !4662, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4668)
!4661 = !DINamespace(name: "{impl#147}", scope: !3799)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!23, !4664}
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 24]", baseType: !4665, size: 64, align: 64, dwarfAddressSpace: 0)
!4665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 192, align: 8, elements: !4666)
!4666 = !{!4667}
!4667 = !DISubrange(count: 24, lowerBound: 0)
!4668 = !{!4669}
!4669 = !DILocalVariable(name: "self", arg: 1, scope: !4660, file: !3797, line: 46, type: !4664)
!4670 = !DILocation(line: 46, column: 28, scope: !4660)
!4671 = !DILocation(line: 48, column: 18, scope: !4660)
!4672 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7get_bit17h199a133669920cd3E", scope: !4661, file: !3797, line: 50, type: !4673, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4675)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!40, !4664, !23}
!4675 = !{!4676, !4677}
!4676 = !DILocalVariable(name: "self", arg: 1, scope: !4672, file: !3797, line: 50, type: !4664)
!4677 = !DILocalVariable(name: "position", arg: 2, scope: !4672, file: !3797, line: 50, type: !23)
!4678 = !DILocation(line: 50, column: 28, scope: !4672)
!4679 = !DILocation(line: 50, column: 35, scope: !4672)
!4680 = !DILocation(line: 51, column: 21, scope: !4672)
!4681 = !DILocation(line: 52, column: 18, scope: !4672)
!4682 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$24$u5d$$GT$7set_bit17hb4c0cdfec4475c15E", scope: !4683, file: !3797, line: 56, type: !4684, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4687)
!4683 = !DINamespace(name: "{impl#148}", scope: !3799)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{null, !4686, !23, !40}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 24]", baseType: !4665, size: 64, align: 64, dwarfAddressSpace: 0)
!4687 = !{!4688, !4689, !4690}
!4688 = !DILocalVariable(name: "self", arg: 1, scope: !4682, file: !3797, line: 56, type: !4686)
!4689 = !DILocalVariable(name: "position", arg: 2, scope: !4682, file: !3797, line: 56, type: !23)
!4690 = !DILocalVariable(name: "value", arg: 3, scope: !4682, file: !3797, line: 56, type: !40)
!4691 = !DILocation(line: 56, column: 28, scope: !4682)
!4692 = !DILocation(line: 56, column: 39, scope: !4682)
!4693 = !DILocation(line: 56, column: 54, scope: !4682)
!4694 = !DILocation(line: 57, column: 21, scope: !4682)
!4695 = !DILocation(line: 58, column: 18, scope: !4682)
!4696 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7bit_len17h6d5636901f99aebcE", scope: !4697, file: !3797, line: 46, type: !4698, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4704)
!4697 = !DINamespace(name: "{impl#153}", scope: !3799)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!23, !4700}
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 25]", baseType: !4701, size: 64, align: 64, dwarfAddressSpace: 0)
!4701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 200, align: 8, elements: !4702)
!4702 = !{!4703}
!4703 = !DISubrange(count: 25, lowerBound: 0)
!4704 = !{!4705}
!4705 = !DILocalVariable(name: "self", arg: 1, scope: !4696, file: !3797, line: 46, type: !4700)
!4706 = !DILocation(line: 46, column: 28, scope: !4696)
!4707 = !DILocation(line: 48, column: 18, scope: !4696)
!4708 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7get_bit17h35428935db52ed0cE", scope: !4697, file: !3797, line: 50, type: !4709, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4711)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!40, !4700, !23}
!4711 = !{!4712, !4713}
!4712 = !DILocalVariable(name: "self", arg: 1, scope: !4708, file: !3797, line: 50, type: !4700)
!4713 = !DILocalVariable(name: "position", arg: 2, scope: !4708, file: !3797, line: 50, type: !23)
!4714 = !DILocation(line: 50, column: 28, scope: !4708)
!4715 = !DILocation(line: 50, column: 35, scope: !4708)
!4716 = !DILocation(line: 51, column: 21, scope: !4708)
!4717 = !DILocation(line: 52, column: 18, scope: !4708)
!4718 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$25$u5d$$GT$7set_bit17h8157ca488b95f84aE", scope: !4719, file: !3797, line: 56, type: !4720, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4723)
!4719 = !DINamespace(name: "{impl#154}", scope: !3799)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{null, !4722, !23, !40}
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 25]", baseType: !4701, size: 64, align: 64, dwarfAddressSpace: 0)
!4723 = !{!4724, !4725, !4726}
!4724 = !DILocalVariable(name: "self", arg: 1, scope: !4718, file: !3797, line: 56, type: !4722)
!4725 = !DILocalVariable(name: "position", arg: 2, scope: !4718, file: !3797, line: 56, type: !23)
!4726 = !DILocalVariable(name: "value", arg: 3, scope: !4718, file: !3797, line: 56, type: !40)
!4727 = !DILocation(line: 56, column: 28, scope: !4718)
!4728 = !DILocation(line: 56, column: 39, scope: !4718)
!4729 = !DILocation(line: 56, column: 54, scope: !4718)
!4730 = !DILocation(line: 57, column: 21, scope: !4718)
!4731 = !DILocation(line: 58, column: 18, scope: !4718)
!4732 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7bit_len17h595ea188e9d58304E", scope: !4733, file: !3797, line: 46, type: !4734, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4740)
!4733 = !DINamespace(name: "{impl#159}", scope: !3799)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!23, !4736}
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 26]", baseType: !4737, size: 64, align: 64, dwarfAddressSpace: 0)
!4737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 208, align: 8, elements: !4738)
!4738 = !{!4739}
!4739 = !DISubrange(count: 26, lowerBound: 0)
!4740 = !{!4741}
!4741 = !DILocalVariable(name: "self", arg: 1, scope: !4732, file: !3797, line: 46, type: !4736)
!4742 = !DILocation(line: 46, column: 28, scope: !4732)
!4743 = !DILocation(line: 48, column: 18, scope: !4732)
!4744 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7get_bit17h643a5d0ec0a5eaf6E", scope: !4733, file: !3797, line: 50, type: !4745, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4747)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!40, !4736, !23}
!4747 = !{!4748, !4749}
!4748 = !DILocalVariable(name: "self", arg: 1, scope: !4744, file: !3797, line: 50, type: !4736)
!4749 = !DILocalVariable(name: "position", arg: 2, scope: !4744, file: !3797, line: 50, type: !23)
!4750 = !DILocation(line: 50, column: 28, scope: !4744)
!4751 = !DILocation(line: 50, column: 35, scope: !4744)
!4752 = !DILocation(line: 51, column: 21, scope: !4744)
!4753 = !DILocation(line: 52, column: 18, scope: !4744)
!4754 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$26$u5d$$GT$7set_bit17hb46196b3f365bf64E", scope: !4755, file: !3797, line: 56, type: !4756, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4759)
!4755 = !DINamespace(name: "{impl#160}", scope: !3799)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{null, !4758, !23, !40}
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 26]", baseType: !4737, size: 64, align: 64, dwarfAddressSpace: 0)
!4759 = !{!4760, !4761, !4762}
!4760 = !DILocalVariable(name: "self", arg: 1, scope: !4754, file: !3797, line: 56, type: !4758)
!4761 = !DILocalVariable(name: "position", arg: 2, scope: !4754, file: !3797, line: 56, type: !23)
!4762 = !DILocalVariable(name: "value", arg: 3, scope: !4754, file: !3797, line: 56, type: !40)
!4763 = !DILocation(line: 56, column: 28, scope: !4754)
!4764 = !DILocation(line: 56, column: 39, scope: !4754)
!4765 = !DILocation(line: 56, column: 54, scope: !4754)
!4766 = !DILocation(line: 57, column: 21, scope: !4754)
!4767 = !DILocation(line: 58, column: 18, scope: !4754)
!4768 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7bit_len17hf5e5f293c6a4ef9cE", scope: !4769, file: !3797, line: 46, type: !4770, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4776)
!4769 = !DINamespace(name: "{impl#165}", scope: !3799)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!23, !4772}
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 27]", baseType: !4773, size: 64, align: 64, dwarfAddressSpace: 0)
!4773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 216, align: 8, elements: !4774)
!4774 = !{!4775}
!4775 = !DISubrange(count: 27, lowerBound: 0)
!4776 = !{!4777}
!4777 = !DILocalVariable(name: "self", arg: 1, scope: !4768, file: !3797, line: 46, type: !4772)
!4778 = !DILocation(line: 46, column: 28, scope: !4768)
!4779 = !DILocation(line: 48, column: 18, scope: !4768)
!4780 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7get_bit17ha7ec5413e3e41deeE", scope: !4769, file: !3797, line: 50, type: !4781, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4783)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!40, !4772, !23}
!4783 = !{!4784, !4785}
!4784 = !DILocalVariable(name: "self", arg: 1, scope: !4780, file: !3797, line: 50, type: !4772)
!4785 = !DILocalVariable(name: "position", arg: 2, scope: !4780, file: !3797, line: 50, type: !23)
!4786 = !DILocation(line: 50, column: 28, scope: !4780)
!4787 = !DILocation(line: 50, column: 35, scope: !4780)
!4788 = !DILocation(line: 51, column: 21, scope: !4780)
!4789 = !DILocation(line: 52, column: 18, scope: !4780)
!4790 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$27$u5d$$GT$7set_bit17hddc8797d3bf3f447E", scope: !4791, file: !3797, line: 56, type: !4792, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4795)
!4791 = !DINamespace(name: "{impl#166}", scope: !3799)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{null, !4794, !23, !40}
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 27]", baseType: !4773, size: 64, align: 64, dwarfAddressSpace: 0)
!4795 = !{!4796, !4797, !4798}
!4796 = !DILocalVariable(name: "self", arg: 1, scope: !4790, file: !3797, line: 56, type: !4794)
!4797 = !DILocalVariable(name: "position", arg: 2, scope: !4790, file: !3797, line: 56, type: !23)
!4798 = !DILocalVariable(name: "value", arg: 3, scope: !4790, file: !3797, line: 56, type: !40)
!4799 = !DILocation(line: 56, column: 28, scope: !4790)
!4800 = !DILocation(line: 56, column: 39, scope: !4790)
!4801 = !DILocation(line: 56, column: 54, scope: !4790)
!4802 = !DILocation(line: 57, column: 21, scope: !4790)
!4803 = !DILocation(line: 58, column: 18, scope: !4790)
!4804 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7bit_len17hb9f84b0fe1b2d374E", scope: !4805, file: !3797, line: 46, type: !4806, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4812)
!4805 = !DINamespace(name: "{impl#171}", scope: !3799)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!23, !4808}
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 28]", baseType: !4809, size: 64, align: 64, dwarfAddressSpace: 0)
!4809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 224, align: 8, elements: !4810)
!4810 = !{!4811}
!4811 = !DISubrange(count: 28, lowerBound: 0)
!4812 = !{!4813}
!4813 = !DILocalVariable(name: "self", arg: 1, scope: !4804, file: !3797, line: 46, type: !4808)
!4814 = !DILocation(line: 46, column: 28, scope: !4804)
!4815 = !DILocation(line: 48, column: 18, scope: !4804)
!4816 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7get_bit17h6b2c17b39479b378E", scope: !4805, file: !3797, line: 50, type: !4817, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4819)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!40, !4808, !23}
!4819 = !{!4820, !4821}
!4820 = !DILocalVariable(name: "self", arg: 1, scope: !4816, file: !3797, line: 50, type: !4808)
!4821 = !DILocalVariable(name: "position", arg: 2, scope: !4816, file: !3797, line: 50, type: !23)
!4822 = !DILocation(line: 50, column: 28, scope: !4816)
!4823 = !DILocation(line: 50, column: 35, scope: !4816)
!4824 = !DILocation(line: 51, column: 21, scope: !4816)
!4825 = !DILocation(line: 52, column: 18, scope: !4816)
!4826 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$28$u5d$$GT$7set_bit17h9dc2caaa261c8242E", scope: !4827, file: !3797, line: 56, type: !4828, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4831)
!4827 = !DINamespace(name: "{impl#172}", scope: !3799)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{null, !4830, !23, !40}
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 28]", baseType: !4809, size: 64, align: 64, dwarfAddressSpace: 0)
!4831 = !{!4832, !4833, !4834}
!4832 = !DILocalVariable(name: "self", arg: 1, scope: !4826, file: !3797, line: 56, type: !4830)
!4833 = !DILocalVariable(name: "position", arg: 2, scope: !4826, file: !3797, line: 56, type: !23)
!4834 = !DILocalVariable(name: "value", arg: 3, scope: !4826, file: !3797, line: 56, type: !40)
!4835 = !DILocation(line: 56, column: 28, scope: !4826)
!4836 = !DILocation(line: 56, column: 39, scope: !4826)
!4837 = !DILocation(line: 56, column: 54, scope: !4826)
!4838 = !DILocation(line: 57, column: 21, scope: !4826)
!4839 = !DILocation(line: 58, column: 18, scope: !4826)
!4840 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7bit_len17he87514c241a7873eE", scope: !4841, file: !3797, line: 46, type: !4842, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4848)
!4841 = !DINamespace(name: "{impl#177}", scope: !3799)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!23, !4844}
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 29]", baseType: !4845, size: 64, align: 64, dwarfAddressSpace: 0)
!4845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 232, align: 8, elements: !4846)
!4846 = !{!4847}
!4847 = !DISubrange(count: 29, lowerBound: 0)
!4848 = !{!4849}
!4849 = !DILocalVariable(name: "self", arg: 1, scope: !4840, file: !3797, line: 46, type: !4844)
!4850 = !DILocation(line: 46, column: 28, scope: !4840)
!4851 = !DILocation(line: 48, column: 18, scope: !4840)
!4852 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7get_bit17hbe6315fad8a17e76E", scope: !4841, file: !3797, line: 50, type: !4853, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4855)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!40, !4844, !23}
!4855 = !{!4856, !4857}
!4856 = !DILocalVariable(name: "self", arg: 1, scope: !4852, file: !3797, line: 50, type: !4844)
!4857 = !DILocalVariable(name: "position", arg: 2, scope: !4852, file: !3797, line: 50, type: !23)
!4858 = !DILocation(line: 50, column: 28, scope: !4852)
!4859 = !DILocation(line: 50, column: 35, scope: !4852)
!4860 = !DILocation(line: 51, column: 21, scope: !4852)
!4861 = !DILocation(line: 52, column: 18, scope: !4852)
!4862 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$29$u5d$$GT$7set_bit17h3a9504627a6c9ea5E", scope: !4863, file: !3797, line: 56, type: !4864, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4867)
!4863 = !DINamespace(name: "{impl#178}", scope: !3799)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !4866, !23, !40}
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 29]", baseType: !4845, size: 64, align: 64, dwarfAddressSpace: 0)
!4867 = !{!4868, !4869, !4870}
!4868 = !DILocalVariable(name: "self", arg: 1, scope: !4862, file: !3797, line: 56, type: !4866)
!4869 = !DILocalVariable(name: "position", arg: 2, scope: !4862, file: !3797, line: 56, type: !23)
!4870 = !DILocalVariable(name: "value", arg: 3, scope: !4862, file: !3797, line: 56, type: !40)
!4871 = !DILocation(line: 56, column: 28, scope: !4862)
!4872 = !DILocation(line: 56, column: 39, scope: !4862)
!4873 = !DILocation(line: 56, column: 54, scope: !4862)
!4874 = !DILocation(line: 57, column: 21, scope: !4862)
!4875 = !DILocation(line: 58, column: 18, scope: !4862)
!4876 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7bit_len17h6c331876073f1e0eE", scope: !4877, file: !3797, line: 46, type: !4878, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4884)
!4877 = !DINamespace(name: "{impl#183}", scope: !3799)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!23, !4880}
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 30]", baseType: !4881, size: 64, align: 64, dwarfAddressSpace: 0)
!4881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 240, align: 8, elements: !4882)
!4882 = !{!4883}
!4883 = !DISubrange(count: 30, lowerBound: 0)
!4884 = !{!4885}
!4885 = !DILocalVariable(name: "self", arg: 1, scope: !4876, file: !3797, line: 46, type: !4880)
!4886 = !DILocation(line: 46, column: 28, scope: !4876)
!4887 = !DILocation(line: 48, column: 18, scope: !4876)
!4888 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7get_bit17h862d9191d9de1209E", scope: !4877, file: !3797, line: 50, type: !4889, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4891)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{!40, !4880, !23}
!4891 = !{!4892, !4893}
!4892 = !DILocalVariable(name: "self", arg: 1, scope: !4888, file: !3797, line: 50, type: !4880)
!4893 = !DILocalVariable(name: "position", arg: 2, scope: !4888, file: !3797, line: 50, type: !23)
!4894 = !DILocation(line: 50, column: 28, scope: !4888)
!4895 = !DILocation(line: 50, column: 35, scope: !4888)
!4896 = !DILocation(line: 51, column: 21, scope: !4888)
!4897 = !DILocation(line: 52, column: 18, scope: !4888)
!4898 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$30$u5d$$GT$7set_bit17h6057a082c18bb538E", scope: !4899, file: !3797, line: 56, type: !4900, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4903)
!4899 = !DINamespace(name: "{impl#184}", scope: !3799)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{null, !4902, !23, !40}
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 30]", baseType: !4881, size: 64, align: 64, dwarfAddressSpace: 0)
!4903 = !{!4904, !4905, !4906}
!4904 = !DILocalVariable(name: "self", arg: 1, scope: !4898, file: !3797, line: 56, type: !4902)
!4905 = !DILocalVariable(name: "position", arg: 2, scope: !4898, file: !3797, line: 56, type: !23)
!4906 = !DILocalVariable(name: "value", arg: 3, scope: !4898, file: !3797, line: 56, type: !40)
!4907 = !DILocation(line: 56, column: 28, scope: !4898)
!4908 = !DILocation(line: 56, column: 39, scope: !4898)
!4909 = !DILocation(line: 56, column: 54, scope: !4898)
!4910 = !DILocation(line: 57, column: 21, scope: !4898)
!4911 = !DILocation(line: 58, column: 18, scope: !4898)
!4912 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7bit_len17h58647d2b67a0d646E", scope: !4913, file: !3797, line: 46, type: !4914, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4920)
!4913 = !DINamespace(name: "{impl#189}", scope: !3799)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!23, !4916}
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 31]", baseType: !4917, size: 64, align: 64, dwarfAddressSpace: 0)
!4917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 248, align: 8, elements: !4918)
!4918 = !{!4919}
!4919 = !DISubrange(count: 31, lowerBound: 0)
!4920 = !{!4921}
!4921 = !DILocalVariable(name: "self", arg: 1, scope: !4912, file: !3797, line: 46, type: !4916)
!4922 = !DILocation(line: 46, column: 28, scope: !4912)
!4923 = !DILocation(line: 48, column: 18, scope: !4912)
!4924 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7get_bit17h270b0e0f8e1c709aE", scope: !4913, file: !3797, line: 50, type: !4925, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4927)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!40, !4916, !23}
!4927 = !{!4928, !4929}
!4928 = !DILocalVariable(name: "self", arg: 1, scope: !4924, file: !3797, line: 50, type: !4916)
!4929 = !DILocalVariable(name: "position", arg: 2, scope: !4924, file: !3797, line: 50, type: !23)
!4930 = !DILocation(line: 50, column: 28, scope: !4924)
!4931 = !DILocation(line: 50, column: 35, scope: !4924)
!4932 = !DILocation(line: 51, column: 21, scope: !4924)
!4933 = !DILocation(line: 52, column: 18, scope: !4924)
!4934 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$31$u5d$$GT$7set_bit17hcc42eb68ab7fceecE", scope: !4935, file: !3797, line: 56, type: !4936, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4939)
!4935 = !DINamespace(name: "{impl#190}", scope: !3799)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{null, !4938, !23, !40}
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 31]", baseType: !4917, size: 64, align: 64, dwarfAddressSpace: 0)
!4939 = !{!4940, !4941, !4942}
!4940 = !DILocalVariable(name: "self", arg: 1, scope: !4934, file: !3797, line: 56, type: !4938)
!4941 = !DILocalVariable(name: "position", arg: 2, scope: !4934, file: !3797, line: 56, type: !23)
!4942 = !DILocalVariable(name: "value", arg: 3, scope: !4934, file: !3797, line: 56, type: !40)
!4943 = !DILocation(line: 56, column: 28, scope: !4934)
!4944 = !DILocation(line: 56, column: 39, scope: !4934)
!4945 = !DILocation(line: 56, column: 54, scope: !4934)
!4946 = !DILocation(line: 57, column: 21, scope: !4934)
!4947 = !DILocation(line: 58, column: 18, scope: !4934)
!4948 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7bit_len17h1a9e10e53f62bb92E", scope: !4949, file: !3797, line: 46, type: !4950, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4956)
!4949 = !DINamespace(name: "{impl#195}", scope: !3799)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!23, !4952}
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 32]", baseType: !4953, size: 64, align: 64, dwarfAddressSpace: 0)
!4953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 256, align: 8, elements: !4954)
!4954 = !{!4955}
!4955 = !DISubrange(count: 32, lowerBound: 0)
!4956 = !{!4957}
!4957 = !DILocalVariable(name: "self", arg: 1, scope: !4948, file: !3797, line: 46, type: !4952)
!4958 = !DILocation(line: 46, column: 28, scope: !4948)
!4959 = !DILocation(line: 48, column: 18, scope: !4948)
!4960 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7get_bit17h77f3a0aad9b6d401E", scope: !4949, file: !3797, line: 50, type: !4961, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4963)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!40, !4952, !23}
!4963 = !{!4964, !4965}
!4964 = !DILocalVariable(name: "self", arg: 1, scope: !4960, file: !3797, line: 50, type: !4952)
!4965 = !DILocalVariable(name: "position", arg: 2, scope: !4960, file: !3797, line: 50, type: !23)
!4966 = !DILocation(line: 50, column: 28, scope: !4960)
!4967 = !DILocation(line: 50, column: 35, scope: !4960)
!4968 = !DILocation(line: 51, column: 21, scope: !4960)
!4969 = !DILocation(line: 52, column: 18, scope: !4960)
!4970 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$32$u5d$$GT$7set_bit17h5da677b83b1f630aE", scope: !4971, file: !3797, line: 56, type: !4972, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4975)
!4971 = !DINamespace(name: "{impl#196}", scope: !3799)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{null, !4974, !23, !40}
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 32]", baseType: !4953, size: 64, align: 64, dwarfAddressSpace: 0)
!4975 = !{!4976, !4977, !4978}
!4976 = !DILocalVariable(name: "self", arg: 1, scope: !4970, file: !3797, line: 56, type: !4974)
!4977 = !DILocalVariable(name: "position", arg: 2, scope: !4970, file: !3797, line: 56, type: !23)
!4978 = !DILocalVariable(name: "value", arg: 3, scope: !4970, file: !3797, line: 56, type: !40)
!4979 = !DILocation(line: 56, column: 28, scope: !4970)
!4980 = !DILocation(line: 56, column: 39, scope: !4970)
!4981 = !DILocation(line: 56, column: 54, scope: !4970)
!4982 = !DILocation(line: 57, column: 21, scope: !4970)
!4983 = !DILocation(line: 58, column: 18, scope: !4970)
!4984 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7bit_len17he28763658632010fE", scope: !4985, file: !3797, line: 46, type: !4986, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4992)
!4985 = !DINamespace(name: "{impl#201}", scope: !3799)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!23, !4988}
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 64]", baseType: !4989, size: 64, align: 64, dwarfAddressSpace: 0)
!4989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 512, align: 8, elements: !4990)
!4990 = !{!4991}
!4991 = !DISubrange(count: 64, lowerBound: 0)
!4992 = !{!4993}
!4993 = !DILocalVariable(name: "self", arg: 1, scope: !4984, file: !3797, line: 46, type: !4988)
!4994 = !DILocation(line: 46, column: 28, scope: !4984)
!4995 = !DILocation(line: 48, column: 18, scope: !4984)
!4996 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls79_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7get_bit17h2c65902f5c8ee1f1E", scope: !4985, file: !3797, line: 50, type: !4997, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!40, !4988, !23}
!4999 = !{!5000, !5001}
!5000 = !DILocalVariable(name: "self", arg: 1, scope: !4996, file: !3797, line: 50, type: !4988)
!5001 = !DILocalVariable(name: "position", arg: 2, scope: !4996, file: !3797, line: 50, type: !23)
!5002 = !DILocation(line: 50, column: 28, scope: !4996)
!5003 = !DILocation(line: 50, column: 35, scope: !4996)
!5004 = !DILocation(line: 51, column: 21, scope: !4996)
!5005 = !DILocation(line: 52, column: 18, scope: !4996)
!5006 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls86_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$64$u5d$$GT$7set_bit17h87c3b9b6c72c1635E", scope: !5007, file: !3797, line: 56, type: !5008, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5011)
!5007 = !DINamespace(name: "{impl#202}", scope: !3799)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{null, !5010, !23, !40}
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 64]", baseType: !4989, size: 64, align: 64, dwarfAddressSpace: 0)
!5011 = !{!5012, !5013, !5014}
!5012 = !DILocalVariable(name: "self", arg: 1, scope: !5006, file: !3797, line: 56, type: !5010)
!5013 = !DILocalVariable(name: "position", arg: 2, scope: !5006, file: !3797, line: 56, type: !23)
!5014 = !DILocalVariable(name: "value", arg: 3, scope: !5006, file: !3797, line: 56, type: !40)
!5015 = !DILocation(line: 56, column: 28, scope: !5006)
!5016 = !DILocation(line: 56, column: 39, scope: !5006)
!5017 = !DILocation(line: 56, column: 54, scope: !5006)
!5018 = !DILocation(line: 57, column: 21, scope: !5006)
!5019 = !DILocation(line: 58, column: 18, scope: !5006)
!5020 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7bit_len17hada96cbd7d9c59baE", scope: !5021, file: !3797, line: 46, type: !5022, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5028)
!5021 = !DINamespace(name: "{impl#207}", scope: !3799)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!23, !5024}
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 128]", baseType: !5025, size: 64, align: 64, dwarfAddressSpace: 0)
!5025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1024, align: 8, elements: !5026)
!5026 = !{!5027}
!5027 = !DISubrange(count: 128, lowerBound: 0)
!5028 = !{!5029}
!5029 = !DILocalVariable(name: "self", arg: 1, scope: !5020, file: !3797, line: 46, type: !5024)
!5030 = !DILocation(line: 46, column: 28, scope: !5020)
!5031 = !DILocation(line: 48, column: 18, scope: !5020)
!5032 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7get_bit17h5f17da17f14c56d1E", scope: !5021, file: !3797, line: 50, type: !5033, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5035)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!40, !5024, !23}
!5035 = !{!5036, !5037}
!5036 = !DILocalVariable(name: "self", arg: 1, scope: !5032, file: !3797, line: 50, type: !5024)
!5037 = !DILocalVariable(name: "position", arg: 2, scope: !5032, file: !3797, line: 50, type: !23)
!5038 = !DILocation(line: 50, column: 28, scope: !5032)
!5039 = !DILocation(line: 50, column: 35, scope: !5032)
!5040 = !DILocation(line: 51, column: 21, scope: !5032)
!5041 = !DILocation(line: 52, column: 18, scope: !5032)
!5042 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$128$u5d$$GT$7set_bit17h3f60d28180fe4993E", scope: !5043, file: !3797, line: 56, type: !5044, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5047)
!5043 = !DINamespace(name: "{impl#208}", scope: !3799)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{null, !5046, !23, !40}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 128]", baseType: !5025, size: 64, align: 64, dwarfAddressSpace: 0)
!5047 = !{!5048, !5049, !5050}
!5048 = !DILocalVariable(name: "self", arg: 1, scope: !5042, file: !3797, line: 56, type: !5046)
!5049 = !DILocalVariable(name: "position", arg: 2, scope: !5042, file: !3797, line: 56, type: !23)
!5050 = !DILocalVariable(name: "value", arg: 3, scope: !5042, file: !3797, line: 56, type: !40)
!5051 = !DILocation(line: 56, column: 28, scope: !5042)
!5052 = !DILocation(line: 56, column: 39, scope: !5042)
!5053 = !DILocation(line: 56, column: 54, scope: !5042)
!5054 = !DILocation(line: 57, column: 21, scope: !5042)
!5055 = !DILocation(line: 58, column: 18, scope: !5042)
!5056 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7bit_len17hfe2fc5d45a158729E", scope: !5057, file: !3797, line: 46, type: !5058, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5064)
!5057 = !DINamespace(name: "{impl#213}", scope: !3799)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!23, !5060}
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 256]", baseType: !5061, size: 64, align: 64, dwarfAddressSpace: 0)
!5061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 2048, align: 8, elements: !5062)
!5062 = !{!5063}
!5063 = !DISubrange(count: 256, lowerBound: 0)
!5064 = !{!5065}
!5065 = !DILocalVariable(name: "self", arg: 1, scope: !5056, file: !3797, line: 46, type: !5060)
!5066 = !DILocation(line: 46, column: 28, scope: !5056)
!5067 = !DILocation(line: 48, column: 18, scope: !5056)
!5068 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7get_bit17h31a30a402f28870eE", scope: !5057, file: !3797, line: 50, type: !5069, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!40, !5060, !23}
!5071 = !{!5072, !5073}
!5072 = !DILocalVariable(name: "self", arg: 1, scope: !5068, file: !3797, line: 50, type: !5060)
!5073 = !DILocalVariable(name: "position", arg: 2, scope: !5068, file: !3797, line: 50, type: !23)
!5074 = !DILocation(line: 50, column: 28, scope: !5068)
!5075 = !DILocation(line: 50, column: 35, scope: !5068)
!5076 = !DILocation(line: 51, column: 21, scope: !5068)
!5077 = !DILocation(line: 52, column: 18, scope: !5068)
!5078 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$256$u5d$$GT$7set_bit17h3273fc736403d5e3E", scope: !5079, file: !3797, line: 56, type: !5080, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5083)
!5079 = !DINamespace(name: "{impl#214}", scope: !3799)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{null, !5082, !23, !40}
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 256]", baseType: !5061, size: 64, align: 64, dwarfAddressSpace: 0)
!5083 = !{!5084, !5085, !5086}
!5084 = !DILocalVariable(name: "self", arg: 1, scope: !5078, file: !3797, line: 56, type: !5082)
!5085 = !DILocalVariable(name: "position", arg: 2, scope: !5078, file: !3797, line: 56, type: !23)
!5086 = !DILocalVariable(name: "value", arg: 3, scope: !5078, file: !3797, line: 56, type: !40)
!5087 = !DILocation(line: 56, column: 28, scope: !5078)
!5088 = !DILocation(line: 56, column: 39, scope: !5078)
!5089 = !DILocation(line: 56, column: 54, scope: !5078)
!5090 = !DILocation(line: 57, column: 21, scope: !5078)
!5091 = !DILocation(line: 58, column: 18, scope: !5078)
!5092 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7bit_len17h66bea3780d8d6a1eE", scope: !5093, file: !3797, line: 46, type: !5094, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5100)
!5093 = !DINamespace(name: "{impl#219}", scope: !3799)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!23, !5096}
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 512]", baseType: !5097, size: 64, align: 64, dwarfAddressSpace: 0)
!5097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 4096, align: 8, elements: !5098)
!5098 = !{!5099}
!5099 = !DISubrange(count: 512, lowerBound: 0)
!5100 = !{!5101}
!5101 = !DILocalVariable(name: "self", arg: 1, scope: !5092, file: !3797, line: 46, type: !5096)
!5102 = !DILocation(line: 46, column: 28, scope: !5092)
!5103 = !DILocation(line: 48, column: 18, scope: !5092)
!5104 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls80_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7get_bit17h5f663306d9c3ac1fE", scope: !5093, file: !3797, line: 50, type: !5105, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5107)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!40, !5096, !23}
!5107 = !{!5108, !5109}
!5108 = !DILocalVariable(name: "self", arg: 1, scope: !5104, file: !3797, line: 50, type: !5096)
!5109 = !DILocalVariable(name: "position", arg: 2, scope: !5104, file: !3797, line: 50, type: !23)
!5110 = !DILocation(line: 50, column: 28, scope: !5104)
!5111 = !DILocation(line: 50, column: 35, scope: !5104)
!5112 = !DILocation(line: 51, column: 21, scope: !5104)
!5113 = !DILocation(line: 52, column: 18, scope: !5104)
!5114 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls87_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$512$u5d$$GT$7set_bit17h6ffa84553369b1f5E", scope: !5115, file: !3797, line: 56, type: !5116, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5119)
!5115 = !DINamespace(name: "{impl#220}", scope: !3799)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !5118, !23, !40}
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 512]", baseType: !5097, size: 64, align: 64, dwarfAddressSpace: 0)
!5119 = !{!5120, !5121, !5122}
!5120 = !DILocalVariable(name: "self", arg: 1, scope: !5114, file: !3797, line: 56, type: !5118)
!5121 = !DILocalVariable(name: "position", arg: 2, scope: !5114, file: !3797, line: 56, type: !23)
!5122 = !DILocalVariable(name: "value", arg: 3, scope: !5114, file: !3797, line: 56, type: !40)
!5123 = !DILocation(line: 56, column: 28, scope: !5114)
!5124 = !DILocation(line: 56, column: 39, scope: !5114)
!5125 = !DILocation(line: 56, column: 54, scope: !5114)
!5126 = !DILocation(line: 57, column: 21, scope: !5114)
!5127 = !DILocation(line: 58, column: 18, scope: !5114)
!5128 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7bit_len17h3ab1f3fa1865ffd8E", scope: !5129, file: !3797, line: 46, type: !5130, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5136)
!5129 = !DINamespace(name: "{impl#225}", scope: !3799)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!23, !5132}
!5132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 1024]", baseType: !5133, size: 64, align: 64, dwarfAddressSpace: 0)
!5133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8192, align: 8, elements: !5134)
!5134 = !{!5135}
!5135 = !DISubrange(count: 1024, lowerBound: 0)
!5136 = !{!5137}
!5137 = !DILocalVariable(name: "self", arg: 1, scope: !5128, file: !3797, line: 46, type: !5132)
!5138 = !DILocation(line: 46, column: 28, scope: !5128)
!5139 = !DILocation(line: 48, column: 18, scope: !5128)
!5140 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7get_bit17hfda44eb15b5c5c3bE", scope: !5129, file: !3797, line: 50, type: !5141, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!40, !5132, !23}
!5143 = !{!5144, !5145}
!5144 = !DILocalVariable(name: "self", arg: 1, scope: !5140, file: !3797, line: 50, type: !5132)
!5145 = !DILocalVariable(name: "position", arg: 2, scope: !5140, file: !3797, line: 50, type: !23)
!5146 = !DILocation(line: 50, column: 28, scope: !5140)
!5147 = !DILocation(line: 50, column: 35, scope: !5140)
!5148 = !DILocation(line: 51, column: 21, scope: !5140)
!5149 = !DILocation(line: 52, column: 18, scope: !5140)
!5150 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1024$u5d$$GT$7set_bit17ha46219a4f84ada82E", scope: !5151, file: !3797, line: 56, type: !5152, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5155)
!5151 = !DINamespace(name: "{impl#226}", scope: !3799)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !5154, !23, !40}
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 1024]", baseType: !5133, size: 64, align: 64, dwarfAddressSpace: 0)
!5155 = !{!5156, !5157, !5158}
!5156 = !DILocalVariable(name: "self", arg: 1, scope: !5150, file: !3797, line: 56, type: !5154)
!5157 = !DILocalVariable(name: "position", arg: 2, scope: !5150, file: !3797, line: 56, type: !23)
!5158 = !DILocalVariable(name: "value", arg: 3, scope: !5150, file: !3797, line: 56, type: !40)
!5159 = !DILocation(line: 56, column: 28, scope: !5150)
!5160 = !DILocation(line: 56, column: 39, scope: !5150)
!5161 = !DILocation(line: 56, column: 54, scope: !5150)
!5162 = !DILocation(line: 57, column: 21, scope: !5150)
!5163 = !DILocation(line: 58, column: 18, scope: !5150)
!5164 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7bit_len17h03e763484d39af6eE", scope: !5165, file: !3797, line: 46, type: !5166, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5172)
!5165 = !DINamespace(name: "{impl#231}", scope: !3799)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!23, !5168}
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 2048]", baseType: !5169, size: 64, align: 64, dwarfAddressSpace: 0)
!5169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 16384, align: 8, elements: !5170)
!5170 = !{!5171}
!5171 = !DISubrange(count: 2048, lowerBound: 0)
!5172 = !{!5173}
!5173 = !DILocalVariable(name: "self", arg: 1, scope: !5164, file: !3797, line: 46, type: !5168)
!5174 = !DILocation(line: 46, column: 28, scope: !5164)
!5175 = !DILocation(line: 48, column: 18, scope: !5164)
!5176 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7get_bit17hd039edb8e8ec7835E", scope: !5165, file: !3797, line: 50, type: !5177, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!40, !5168, !23}
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "self", arg: 1, scope: !5176, file: !3797, line: 50, type: !5168)
!5181 = !DILocalVariable(name: "position", arg: 2, scope: !5176, file: !3797, line: 50, type: !23)
!5182 = !DILocation(line: 50, column: 28, scope: !5176)
!5183 = !DILocation(line: 50, column: 35, scope: !5176)
!5184 = !DILocation(line: 51, column: 21, scope: !5176)
!5185 = !DILocation(line: 52, column: 18, scope: !5176)
!5186 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$2048$u5d$$GT$7set_bit17h6510b28ff8c16374E", scope: !5187, file: !3797, line: 56, type: !5188, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5191)
!5187 = !DINamespace(name: "{impl#232}", scope: !3799)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{null, !5190, !23, !40}
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 2048]", baseType: !5169, size: 64, align: 64, dwarfAddressSpace: 0)
!5191 = !{!5192, !5193, !5194}
!5192 = !DILocalVariable(name: "self", arg: 1, scope: !5186, file: !3797, line: 56, type: !5190)
!5193 = !DILocalVariable(name: "position", arg: 2, scope: !5186, file: !3797, line: 56, type: !23)
!5194 = !DILocalVariable(name: "value", arg: 3, scope: !5186, file: !3797, line: 56, type: !40)
!5195 = !DILocation(line: 56, column: 28, scope: !5186)
!5196 = !DILocation(line: 56, column: 39, scope: !5186)
!5197 = !DILocation(line: 56, column: 54, scope: !5186)
!5198 = !DILocation(line: 57, column: 21, scope: !5186)
!5199 = !DILocation(line: 58, column: 18, scope: !5186)
!5200 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7bit_len17hd8e814727285673fE", scope: !5201, file: !3797, line: 46, type: !5202, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5208)
!5201 = !DINamespace(name: "{impl#237}", scope: !3799)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{!23, !5204}
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 4096]", baseType: !5205, size: 64, align: 64, dwarfAddressSpace: 0)
!5205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 32768, align: 8, elements: !5206)
!5206 = !{!5207}
!5207 = !DISubrange(count: 4096, lowerBound: 0)
!5208 = !{!5209}
!5209 = !DILocalVariable(name: "self", arg: 1, scope: !5200, file: !3797, line: 46, type: !5204)
!5210 = !DILocation(line: 46, column: 28, scope: !5200)
!5211 = !DILocation(line: 48, column: 18, scope: !5200)
!5212 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7get_bit17h5773b2d3c43c2c6dE", scope: !5201, file: !3797, line: 50, type: !5213, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5215)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{!40, !5204, !23}
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "self", arg: 1, scope: !5212, file: !3797, line: 50, type: !5204)
!5217 = !DILocalVariable(name: "position", arg: 2, scope: !5212, file: !3797, line: 50, type: !23)
!5218 = !DILocation(line: 50, column: 28, scope: !5212)
!5219 = !DILocation(line: 50, column: 35, scope: !5212)
!5220 = !DILocation(line: 51, column: 21, scope: !5212)
!5221 = !DILocation(line: 52, column: 18, scope: !5212)
!5222 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$4096$u5d$$GT$7set_bit17h8862e7baeef02e17E", scope: !5223, file: !3797, line: 56, type: !5224, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5227)
!5223 = !DINamespace(name: "{impl#238}", scope: !3799)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{null, !5226, !23, !40}
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 4096]", baseType: !5205, size: 64, align: 64, dwarfAddressSpace: 0)
!5227 = !{!5228, !5229, !5230}
!5228 = !DILocalVariable(name: "self", arg: 1, scope: !5222, file: !3797, line: 56, type: !5226)
!5229 = !DILocalVariable(name: "position", arg: 2, scope: !5222, file: !3797, line: 56, type: !23)
!5230 = !DILocalVariable(name: "value", arg: 3, scope: !5222, file: !3797, line: 56, type: !40)
!5231 = !DILocation(line: 56, column: 28, scope: !5222)
!5232 = !DILocation(line: 56, column: 39, scope: !5222)
!5233 = !DILocation(line: 56, column: 54, scope: !5222)
!5234 = !DILocation(line: 57, column: 21, scope: !5222)
!5235 = !DILocation(line: 58, column: 18, scope: !5222)
!5236 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7bit_len17h30e9d7da8c423591E", scope: !5237, file: !3797, line: 46, type: !5238, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5244)
!5237 = !DINamespace(name: "{impl#243}", scope: !3799)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!23, !5240}
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 8192]", baseType: !5241, size: 64, align: 64, dwarfAddressSpace: 0)
!5241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 65536, align: 8, elements: !5242)
!5242 = !{!5243}
!5243 = !DISubrange(count: 8192, lowerBound: 0)
!5244 = !{!5245}
!5245 = !DILocalVariable(name: "self", arg: 1, scope: !5236, file: !3797, line: 46, type: !5240)
!5246 = !DILocation(line: 46, column: 28, scope: !5236)
!5247 = !DILocation(line: 48, column: 18, scope: !5236)
!5248 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls81_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7get_bit17ha250d224b3af05f6E", scope: !5237, file: !3797, line: 50, type: !5249, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5251)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!40, !5240, !23}
!5251 = !{!5252, !5253}
!5252 = !DILocalVariable(name: "self", arg: 1, scope: !5248, file: !3797, line: 50, type: !5240)
!5253 = !DILocalVariable(name: "position", arg: 2, scope: !5248, file: !3797, line: 50, type: !23)
!5254 = !DILocation(line: 50, column: 28, scope: !5248)
!5255 = !DILocation(line: 50, column: 35, scope: !5248)
!5256 = !DILocation(line: 51, column: 21, scope: !5248)
!5257 = !DILocation(line: 52, column: 18, scope: !5248)
!5258 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls88_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$8192$u5d$$GT$7set_bit17h935c92912760ba34E", scope: !5259, file: !3797, line: 56, type: !5260, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5263)
!5259 = !DINamespace(name: "{impl#244}", scope: !3799)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !5262, !23, !40}
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 8192]", baseType: !5241, size: 64, align: 64, dwarfAddressSpace: 0)
!5263 = !{!5264, !5265, !5266}
!5264 = !DILocalVariable(name: "self", arg: 1, scope: !5258, file: !3797, line: 56, type: !5262)
!5265 = !DILocalVariable(name: "position", arg: 2, scope: !5258, file: !3797, line: 56, type: !23)
!5266 = !DILocalVariable(name: "value", arg: 3, scope: !5258, file: !3797, line: 56, type: !40)
!5267 = !DILocation(line: 56, column: 28, scope: !5258)
!5268 = !DILocation(line: 56, column: 39, scope: !5258)
!5269 = !DILocation(line: 56, column: 54, scope: !5258)
!5270 = !DILocation(line: 57, column: 21, scope: !5258)
!5271 = !DILocation(line: 58, column: 18, scope: !5258)
!5272 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7bit_len17h680023905a978b05E", scope: !5273, file: !3797, line: 46, type: !5274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5280)
!5273 = !DINamespace(name: "{impl#249}", scope: !3799)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{!23, !5276}
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 16384]", baseType: !5277, size: 64, align: 64, dwarfAddressSpace: 0)
!5277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 131072, align: 8, elements: !5278)
!5278 = !{!5279}
!5279 = !DISubrange(count: 16384, lowerBound: 0)
!5280 = !{!5281}
!5281 = !DILocalVariable(name: "self", arg: 1, scope: !5272, file: !3797, line: 46, type: !5276)
!5282 = !DILocation(line: 46, column: 28, scope: !5272)
!5283 = !DILocation(line: 48, column: 18, scope: !5272)
!5284 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7get_bit17h12940269dab26940E", scope: !5273, file: !3797, line: 50, type: !5285, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5287)
!5285 = !DISubroutineType(types: !5286)
!5286 = !{!40, !5276, !23}
!5287 = !{!5288, !5289}
!5288 = !DILocalVariable(name: "self", arg: 1, scope: !5284, file: !3797, line: 50, type: !5276)
!5289 = !DILocalVariable(name: "position", arg: 2, scope: !5284, file: !3797, line: 50, type: !23)
!5290 = !DILocation(line: 50, column: 28, scope: !5284)
!5291 = !DILocation(line: 50, column: 35, scope: !5284)
!5292 = !DILocation(line: 51, column: 21, scope: !5284)
!5293 = !DILocation(line: 52, column: 18, scope: !5284)
!5294 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$16384$u5d$$GT$7set_bit17hcb4701f73af34316E", scope: !5295, file: !3797, line: 56, type: !5296, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5299)
!5295 = !DINamespace(name: "{impl#250}", scope: !3799)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{null, !5298, !23, !40}
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 16384]", baseType: !5277, size: 64, align: 64, dwarfAddressSpace: 0)
!5299 = !{!5300, !5301, !5302}
!5300 = !DILocalVariable(name: "self", arg: 1, scope: !5294, file: !3797, line: 56, type: !5298)
!5301 = !DILocalVariable(name: "position", arg: 2, scope: !5294, file: !3797, line: 56, type: !23)
!5302 = !DILocalVariable(name: "value", arg: 3, scope: !5294, file: !3797, line: 56, type: !40)
!5303 = !DILocation(line: 56, column: 28, scope: !5294)
!5304 = !DILocation(line: 56, column: 39, scope: !5294)
!5305 = !DILocation(line: 56, column: 54, scope: !5294)
!5306 = !DILocation(line: 57, column: 21, scope: !5294)
!5307 = !DILocation(line: 58, column: 18, scope: !5294)
!5308 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7bit_len17h1738bb3a7c656cd0E", scope: !5309, file: !3797, line: 46, type: !5310, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5316)
!5309 = !DINamespace(name: "{impl#255}", scope: !3799)
!5310 = !DISubroutineType(types: !5311)
!5311 = !{!23, !5312}
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 32768]", baseType: !5313, size: 64, align: 64, dwarfAddressSpace: 0)
!5313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 262144, align: 8, elements: !5314)
!5314 = !{!5315}
!5315 = !DISubrange(count: 32768, lowerBound: 0)
!5316 = !{!5317}
!5317 = !DILocalVariable(name: "self", arg: 1, scope: !5308, file: !3797, line: 46, type: !5312)
!5318 = !DILocation(line: 46, column: 28, scope: !5308)
!5319 = !DILocation(line: 48, column: 18, scope: !5308)
!5320 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7get_bit17h4f9b39507bffe64dE", scope: !5309, file: !3797, line: 50, type: !5321, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5323)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{!40, !5312, !23}
!5323 = !{!5324, !5325}
!5324 = !DILocalVariable(name: "self", arg: 1, scope: !5320, file: !3797, line: 50, type: !5312)
!5325 = !DILocalVariable(name: "position", arg: 2, scope: !5320, file: !3797, line: 50, type: !23)
!5326 = !DILocation(line: 50, column: 28, scope: !5320)
!5327 = !DILocation(line: 50, column: 35, scope: !5320)
!5328 = !DILocation(line: 51, column: 21, scope: !5320)
!5329 = !DILocation(line: 52, column: 18, scope: !5320)
!5330 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$32768$u5d$$GT$7set_bit17h4e2dcb72ebba9724E", scope: !5331, file: !3797, line: 56, type: !5332, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5335)
!5331 = !DINamespace(name: "{impl#256}", scope: !3799)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{null, !5334, !23, !40}
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 32768]", baseType: !5313, size: 64, align: 64, dwarfAddressSpace: 0)
!5335 = !{!5336, !5337, !5338}
!5336 = !DILocalVariable(name: "self", arg: 1, scope: !5330, file: !3797, line: 56, type: !5334)
!5337 = !DILocalVariable(name: "position", arg: 2, scope: !5330, file: !3797, line: 56, type: !23)
!5338 = !DILocalVariable(name: "value", arg: 3, scope: !5330, file: !3797, line: 56, type: !40)
!5339 = !DILocation(line: 56, column: 28, scope: !5330)
!5340 = !DILocation(line: 56, column: 39, scope: !5330)
!5341 = !DILocation(line: 56, column: 54, scope: !5330)
!5342 = !DILocation(line: 57, column: 21, scope: !5330)
!5343 = !DILocation(line: 58, column: 18, scope: !5330)
!5344 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7bit_len17hfcdd8607c71868b3E", scope: !5345, file: !3797, line: 46, type: !5346, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5352)
!5345 = !DINamespace(name: "{impl#261}", scope: !3799)
!5346 = !DISubroutineType(types: !5347)
!5347 = !{!23, !5348}
!5348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 65536]", baseType: !5349, size: 64, align: 64, dwarfAddressSpace: 0)
!5349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 524288, align: 8, elements: !5350)
!5350 = !{!5351}
!5351 = !DISubrange(count: 65536, lowerBound: 0)
!5352 = !{!5353}
!5353 = !DILocalVariable(name: "self", arg: 1, scope: !5344, file: !3797, line: 46, type: !5348)
!5354 = !DILocation(line: 46, column: 28, scope: !5344)
!5355 = !DILocation(line: 48, column: 18, scope: !5344)
!5356 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls82_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7get_bit17h368176671f572c78E", scope: !5345, file: !3797, line: 50, type: !5357, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5359)
!5357 = !DISubroutineType(types: !5358)
!5358 = !{!40, !5348, !23}
!5359 = !{!5360, !5361}
!5360 = !DILocalVariable(name: "self", arg: 1, scope: !5356, file: !3797, line: 50, type: !5348)
!5361 = !DILocalVariable(name: "position", arg: 2, scope: !5356, file: !3797, line: 50, type: !23)
!5362 = !DILocation(line: 50, column: 28, scope: !5356)
!5363 = !DILocation(line: 50, column: 35, scope: !5356)
!5364 = !DILocation(line: 51, column: 21, scope: !5356)
!5365 = !DILocation(line: 52, column: 18, scope: !5356)
!5366 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls89_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$65536$u5d$$GT$7set_bit17hed6e61dafe06effcE", scope: !5367, file: !3797, line: 56, type: !5368, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5371)
!5367 = !DINamespace(name: "{impl#262}", scope: !3799)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{null, !5370, !23, !40}
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 65536]", baseType: !5349, size: 64, align: 64, dwarfAddressSpace: 0)
!5371 = !{!5372, !5373, !5374}
!5372 = !DILocalVariable(name: "self", arg: 1, scope: !5366, file: !3797, line: 56, type: !5370)
!5373 = !DILocalVariable(name: "position", arg: 2, scope: !5366, file: !3797, line: 56, type: !23)
!5374 = !DILocalVariable(name: "value", arg: 3, scope: !5366, file: !3797, line: 56, type: !40)
!5375 = !DILocation(line: 56, column: 28, scope: !5366)
!5376 = !DILocation(line: 56, column: 39, scope: !5366)
!5377 = !DILocation(line: 56, column: 54, scope: !5366)
!5378 = !DILocation(line: 57, column: 21, scope: !5366)
!5379 = !DILocation(line: 58, column: 18, scope: !5366)
!5380 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7bit_len17h48848f2e7b5c9e67E", scope: !5381, file: !3797, line: 46, type: !5382, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5388)
!5381 = !DINamespace(name: "{impl#267}", scope: !3799)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!23, !5384}
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 131072]", baseType: !5385, size: 64, align: 64, dwarfAddressSpace: 0)
!5385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1048576, align: 8, elements: !5386)
!5386 = !{!5387}
!5387 = !DISubrange(count: 131072, lowerBound: 0)
!5388 = !{!5389}
!5389 = !DILocalVariable(name: "self", arg: 1, scope: !5380, file: !3797, line: 46, type: !5384)
!5390 = !DILocation(line: 46, column: 28, scope: !5380)
!5391 = !DILocation(line: 48, column: 18, scope: !5380)
!5392 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7get_bit17h910d0a586cf6168fE", scope: !5381, file: !3797, line: 50, type: !5393, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5395)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{!40, !5384, !23}
!5395 = !{!5396, !5397}
!5396 = !DILocalVariable(name: "self", arg: 1, scope: !5392, file: !3797, line: 50, type: !5384)
!5397 = !DILocalVariable(name: "position", arg: 2, scope: !5392, file: !3797, line: 50, type: !23)
!5398 = !DILocation(line: 50, column: 28, scope: !5392)
!5399 = !DILocation(line: 50, column: 35, scope: !5392)
!5400 = !DILocation(line: 51, column: 21, scope: !5392)
!5401 = !DILocation(line: 52, column: 18, scope: !5392)
!5402 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$131072$u5d$$GT$7set_bit17h38c174cb213b30c3E", scope: !5403, file: !3797, line: 56, type: !5404, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5407)
!5403 = !DINamespace(name: "{impl#268}", scope: !3799)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{null, !5406, !23, !40}
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 131072]", baseType: !5385, size: 64, align: 64, dwarfAddressSpace: 0)
!5407 = !{!5408, !5409, !5410}
!5408 = !DILocalVariable(name: "self", arg: 1, scope: !5402, file: !3797, line: 56, type: !5406)
!5409 = !DILocalVariable(name: "position", arg: 2, scope: !5402, file: !3797, line: 56, type: !23)
!5410 = !DILocalVariable(name: "value", arg: 3, scope: !5402, file: !3797, line: 56, type: !40)
!5411 = !DILocation(line: 56, column: 28, scope: !5402)
!5412 = !DILocation(line: 56, column: 39, scope: !5402)
!5413 = !DILocation(line: 56, column: 54, scope: !5402)
!5414 = !DILocation(line: 57, column: 21, scope: !5402)
!5415 = !DILocation(line: 58, column: 18, scope: !5402)
!5416 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7bit_len17h13b10f6b7f6d0a2eE", scope: !5417, file: !3797, line: 46, type: !5418, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5424)
!5417 = !DINamespace(name: "{impl#273}", scope: !3799)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!23, !5420}
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 262144]", baseType: !5421, size: 64, align: 64, dwarfAddressSpace: 0)
!5421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 2097152, align: 8, elements: !5422)
!5422 = !{!5423}
!5423 = !DISubrange(count: 262144, lowerBound: 0)
!5424 = !{!5425}
!5425 = !DILocalVariable(name: "self", arg: 1, scope: !5416, file: !3797, line: 46, type: !5420)
!5426 = !DILocation(line: 46, column: 28, scope: !5416)
!5427 = !DILocation(line: 48, column: 18, scope: !5416)
!5428 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7get_bit17h613c36bfcb8c8dd4E", scope: !5417, file: !3797, line: 50, type: !5429, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5431)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!40, !5420, !23}
!5431 = !{!5432, !5433}
!5432 = !DILocalVariable(name: "self", arg: 1, scope: !5428, file: !3797, line: 50, type: !5420)
!5433 = !DILocalVariable(name: "position", arg: 2, scope: !5428, file: !3797, line: 50, type: !23)
!5434 = !DILocation(line: 50, column: 28, scope: !5428)
!5435 = !DILocation(line: 50, column: 35, scope: !5428)
!5436 = !DILocation(line: 51, column: 21, scope: !5428)
!5437 = !DILocation(line: 52, column: 18, scope: !5428)
!5438 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$262144$u5d$$GT$7set_bit17hd2e98c0049bf607aE", scope: !5439, file: !3797, line: 56, type: !5440, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5443)
!5439 = !DINamespace(name: "{impl#274}", scope: !3799)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{null, !5442, !23, !40}
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 262144]", baseType: !5421, size: 64, align: 64, dwarfAddressSpace: 0)
!5443 = !{!5444, !5445, !5446}
!5444 = !DILocalVariable(name: "self", arg: 1, scope: !5438, file: !3797, line: 56, type: !5442)
!5445 = !DILocalVariable(name: "position", arg: 2, scope: !5438, file: !3797, line: 56, type: !23)
!5446 = !DILocalVariable(name: "value", arg: 3, scope: !5438, file: !3797, line: 56, type: !40)
!5447 = !DILocation(line: 56, column: 28, scope: !5438)
!5448 = !DILocation(line: 56, column: 39, scope: !5438)
!5449 = !DILocation(line: 56, column: 54, scope: !5438)
!5450 = !DILocation(line: 57, column: 21, scope: !5438)
!5451 = !DILocation(line: 58, column: 18, scope: !5438)
!5452 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7bit_len17h185e76a4890548e9E", scope: !5453, file: !3797, line: 46, type: !5454, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5460)
!5453 = !DINamespace(name: "{impl#279}", scope: !3799)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!23, !5456}
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 524288]", baseType: !5457, size: 64, align: 64, dwarfAddressSpace: 0)
!5457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 4194304, align: 8, elements: !5458)
!5458 = !{!5459}
!5459 = !DISubrange(count: 524288, lowerBound: 0)
!5460 = !{!5461}
!5461 = !DILocalVariable(name: "self", arg: 1, scope: !5452, file: !3797, line: 46, type: !5456)
!5462 = !DILocation(line: 46, column: 28, scope: !5452)
!5463 = !DILocation(line: 48, column: 18, scope: !5452)
!5464 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls83_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7get_bit17h7cbf32fe7804721aE", scope: !5453, file: !3797, line: 50, type: !5465, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!40, !5456, !23}
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "self", arg: 1, scope: !5464, file: !3797, line: 50, type: !5456)
!5469 = !DILocalVariable(name: "position", arg: 2, scope: !5464, file: !3797, line: 50, type: !23)
!5470 = !DILocation(line: 50, column: 28, scope: !5464)
!5471 = !DILocation(line: 50, column: 35, scope: !5464)
!5472 = !DILocation(line: 51, column: 21, scope: !5464)
!5473 = !DILocation(line: 52, column: 18, scope: !5464)
!5474 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls90_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$524288$u5d$$GT$7set_bit17h5b53150f009384e4E", scope: !5475, file: !3797, line: 56, type: !5476, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5479)
!5475 = !DINamespace(name: "{impl#280}", scope: !3799)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{null, !5478, !23, !40}
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 524288]", baseType: !5457, size: 64, align: 64, dwarfAddressSpace: 0)
!5479 = !{!5480, !5481, !5482}
!5480 = !DILocalVariable(name: "self", arg: 1, scope: !5474, file: !3797, line: 56, type: !5478)
!5481 = !DILocalVariable(name: "position", arg: 2, scope: !5474, file: !3797, line: 56, type: !23)
!5482 = !DILocalVariable(name: "value", arg: 3, scope: !5474, file: !3797, line: 56, type: !40)
!5483 = !DILocation(line: 56, column: 28, scope: !5474)
!5484 = !DILocation(line: 56, column: 39, scope: !5474)
!5485 = !DILocation(line: 56, column: 54, scope: !5474)
!5486 = !DILocation(line: 57, column: 21, scope: !5474)
!5487 = !DILocation(line: 58, column: 18, scope: !5474)
!5488 = distinct !DISubprogram(name: "bit_len", linkageName: "_ZN2bv13array_n_impls84_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7bit_len17h7580d9c3f797e701E", scope: !5489, file: !3797, line: 46, type: !5490, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5496)
!5489 = !DINamespace(name: "{impl#285}", scope: !3799)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{!23, !5492}
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[bool; 1048576]", baseType: !5493, size: 64, align: 64, dwarfAddressSpace: 0)
!5493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8388608, align: 8, elements: !5494)
!5494 = !{!5495}
!5495 = !DISubrange(count: 1048576, lowerBound: 0)
!5496 = !{!5497}
!5497 = !DILocalVariable(name: "self", arg: 1, scope: !5488, file: !3797, line: 46, type: !5492)
!5498 = !DILocation(line: 46, column: 28, scope: !5488)
!5499 = !DILocation(line: 48, column: 18, scope: !5488)
!5500 = distinct !DISubprogram(name: "get_bit", linkageName: "_ZN2bv13array_n_impls84_$LT$impl$u20$bv..traits..bits..Bits$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7get_bit17ha7a6da89f30b4d2aE", scope: !5489, file: !3797, line: 50, type: !5501, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!40, !5492, !23}
!5503 = !{!5504, !5505}
!5504 = !DILocalVariable(name: "self", arg: 1, scope: !5500, file: !3797, line: 50, type: !5492)
!5505 = !DILocalVariable(name: "position", arg: 2, scope: !5500, file: !3797, line: 50, type: !23)
!5506 = !DILocation(line: 50, column: 28, scope: !5500)
!5507 = !DILocation(line: 50, column: 35, scope: !5500)
!5508 = !DILocation(line: 51, column: 21, scope: !5500)
!5509 = !DILocation(line: 52, column: 18, scope: !5500)
!5510 = distinct !DISubprogram(name: "set_bit", linkageName: "_ZN2bv13array_n_impls91_$LT$impl$u20$bv..traits..bits_mut..BitsMut$u20$for$u20$$u5b$bool$u3b$$u20$1048576$u5d$$GT$7set_bit17hee6d5da201f06f96E", scope: !5511, file: !3797, line: 56, type: !5512, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !112, templateParams: !4, retainedNodes: !5515)
!5511 = !DINamespace(name: "{impl#286}", scope: !3799)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{null, !5514, !23, !40}
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [bool; 1048576]", baseType: !5493, size: 64, align: 64, dwarfAddressSpace: 0)
!5515 = !{!5516, !5517, !5518}
!5516 = !DILocalVariable(name: "self", arg: 1, scope: !5510, file: !3797, line: 56, type: !5514)
!5517 = !DILocalVariable(name: "position", arg: 2, scope: !5510, file: !3797, line: 56, type: !23)
!5518 = !DILocalVariable(name: "value", arg: 3, scope: !5510, file: !3797, line: 56, type: !40)
!5519 = !DILocation(line: 56, column: 28, scope: !5510)
!5520 = !DILocation(line: 56, column: 39, scope: !5510)
!5521 = !DILocation(line: 56, column: 54, scope: !5510)
!5522 = !DILocation(line: 57, column: 21, scope: !5510)
!5523 = !DILocation(line: 58, column: 18, scope: !5510)
